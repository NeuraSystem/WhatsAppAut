version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-bot-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-whatsapp_reparaciones}
      POSTGRES_USER: ${DB_USER:-Salvador}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-KKrauser969271}
      
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - bot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bot_user -d whatsapp_reparaciones"]
      interval: 10s
      timeout: 5s
      retries: 5

  # WhatsApp Bot (opcional - para ejecutar en Docker tambi√©n)
  whatsapp-bot:
    build: .
    container_name: whatsapp-bot-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=whatsapp_reparaciones
      - DB_USER=bot_user
      - DB_PASSWORD=${DB_PASSWORD:-bot_secure_password_2024}
    volumes:
      - ./logs:/app/logs
      - ./data/uploads:/app/data/uploads
      - ./session:/app/session
    networks:
      - bot-network
    profiles:
      - full-stack

  # ChromaDB Vector Store
  chroma:
    image: chromadb/chroma
    container_name: whatsapp-bot-chroma
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/.chroma/index
    networks:
      - bot-network

volumes:
  postgres_data:
    driver: local
  chroma_data:
    driver: local

networks:
  bot-network:
    driver: bridge