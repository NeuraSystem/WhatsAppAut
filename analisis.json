{
  "projectPath": "C:\\Users\\neura\\OneDrive\\Desktop\\BotAut-refactor-orchestration-core",
  "timestamp": "2025-07-18T01:19:18.328Z",
  "summary": {
    "totalDirectories": 25,
    "totalJsFiles": 98,
    "totalFunctions": 1529,
    "totalClasses": 118,
    "totalImports": 270
  },
  "directories": [
    {
      "path": "ra√≠z",
      "fileCount": 7,
      "files": [
        {
          "name": "analyzer.js",
          "path": "analyzer.js",
          "size": 39510,
          "lines": 1252,
          "functions": [
            {
              "name": "main",
              "type": "function",
              "line": 1114,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 54,
              "isExported": false
            },
            {
              "name": "analyze",
              "type": "unknown",
              "line": 78,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 105,
              "isExported": false
            },
            {
              "name": "validateProjectPath",
              "type": "unknown",
              "line": 114,
              "isExported": false
            },
            {
              "name": "analyzeDirectory",
              "type": "unknown",
              "line": 128,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 133,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 142,
              "isExported": false
            },
            {
              "name": "shouldExcludeDirectory",
              "type": "unknown",
              "line": 177,
              "isExported": false
            },
            {
              "name": "shouldExcludeFile",
              "type": "unknown",
              "line": 187,
              "isExported": false
            },
            {
              "name": "analyzeJsFiles",
              "type": "unknown",
              "line": 198,
              "isExported": false
            },
            {
              "name": "createFileGroups",
              "type": "unknown",
              "line": 245,
              "isExported": false
            },
            {
              "name": "analyzeJsFile",
              "type": "unknown",
              "line": 259,
              "isExported": false
            },
            {
              "name": "parseJsFile",
              "type": "unknown",
              "line": 293,
              "isExported": false
            },
            {
              "name": "extractFunctions",
              "type": "unknown",
              "line": 336,
              "isExported": false
            },
            {
              "name": "extractClasses",
              "type": "unknown",
              "line": 372,
              "isExported": false
            },
            {
              "name": "extractClassMethods",
              "type": "unknown",
              "line": 393,
              "isExported": false
            },
            {
              "name": "getClassContent",
              "type": "unknown",
              "line": 416,
              "isExported": false
            },
            {
              "name": "while",
              "type": "unknown",
              "line": 421,
              "isExported": false
            },
            {
              "name": "extractImports",
              "type": "unknown",
              "line": 442,
              "isExported": false
            },
            {
              "name": "extractExports",
              "type": "unknown",
              "line": 474,
              "isExported": false
            },
            {
              "name": "getFunctionType",
              "type": "unknown",
              "line": 504,
              "isExported": false
            },
            {
              "name": "getExportType",
              "type": "unknown",
              "line": 514,
              "isExported": false
            },
            {
              "name": "isExported",
              "type": "unknown",
              "line": 523,
              "isExported": false
            },
            {
              "name": "registerFunctions",
              "type": "function",
              "line": 537,
              "isExported": false
            },
            {
              "name": "registerClasses",
              "type": "unknown",
              "line": 552,
              "isExported": false
            },
            {
              "name": "registerImports",
              "type": "unknown",
              "line": 567,
              "isExported": false
            },
            {
              "name": "detectDuplicates",
              "type": "unknown",
              "line": 577,
              "isExported": false
            },
            {
              "name": "buildRelationships",
              "type": "unknown",
              "line": 614,
              "isExported": false
            },
            {
              "name": "forEach",
              "type": "arrow",
              "line": 618,
              "isExported": false
            },
            {
              "name": "generateMarkdownReport",
              "type": "unknown",
              "line": 634,
              "isExported": false
            },
            {
              "name": "generateMarkdownHeader",
              "type": "unknown",
              "line": 662,
              "isExported": false
            },
            {
              "name": "generateMarkdownSummary",
              "type": "unknown",
              "line": 677,
              "isExported": false
            },
            {
              "name": "generateMarkdownDirectories",
              "type": "unknown",
              "line": 699,
              "isExported": false
            },
            {
              "name": "generateFileAnalysis",
              "type": "unknown",
              "line": 739,
              "isExported": false
            },
            {
              "name": "generateMarkdownDuplicates",
              "type": "unknown",
              "line": 811,
              "isExported": false
            },
            {
              "name": "generateMarkdownRelationships",
              "type": "unknown",
              "line": 850,
              "isExported": false
            },
            {
              "name": "generateMarkdownFooter",
              "type": "unknown",
              "line": 896,
              "isExported": false
            },
            {
              "name": "generateJsonReport",
              "type": "unknown",
              "line": 934,
              "isExported": false
            },
            {
              "name": "checkDependencies",
              "type": "unknown",
              "line": 960,
              "isExported": false
            },
            {
              "name": "showHelp",
              "type": "unknown",
              "line": 980,
              "isExported": false
            },
            {
              "name": "parseArguments",
              "type": "unknown",
              "line": 1031,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 1044,
              "isExported": false
            },
            {
              "name": "validatePath",
              "type": "unknown",
              "line": 1082,
              "isExported": false
            },
            {
              "name": "getPerformanceStats",
              "type": "unknown",
              "line": 1097,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ProjectAnalyzer",
              "extends": null,
              "line": 53,
              "isExported": false,
              "methods": [
                {
                  "name": "analyze",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateProjectPath",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeDirectory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shouldExcludeDirectory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shouldExcludeFile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeJsFiles",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createFileGroups",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeJsFile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseJsFile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractFunctions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractClasses",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractClassMethods",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getClassContent",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "while",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "extractImports",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "extractExports",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "getFunctionType",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "getExportType",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "isExported",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "registerFunctions",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "registerClasses",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "registerImports",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "detectDuplicates",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "buildRelationships",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "forEach",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateMarkdownReport",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateMarkdownHeader",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateMarkdownSummary",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateMarkdownDirectories",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateFileAnalysis",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateMarkdownDuplicates",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateMarkdownRelationships",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateMarkdownFooter",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "generateJsonReport",
                  "isConstructor": false,
                  "isStatic": true
                }
              ]
            },
            {
              "name": "AnalyzerUtils",
              "extends": null,
              "line": 956,
              "isExported": false,
              "methods": [
                {
                  "name": "checkDependencies",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "showHelp",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "parseArguments",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "validatePath",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "getPerformanceStats",
                  "isConstructor": false,
                  "isStatic": true
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 12,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 13,
              "isLocal": false
            },
            {
              "source": "child_process",
              "default": null,
              "named": [
                "execSync"
              ],
              "line": 14,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "{\r\n    ProjectAnalyzer,\r\n    AnalyzerUtils,\r\n    CONFIG\r\n}",
              "type": "commonjs",
              "line": 1203
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "eslint.config.js",
          "path": "eslint.config.js",
          "size": 1474,
          "lines": 53,
          "functions": [],
          "classes": [],
          "imports": [
            {
              "source": "@eslint/js",
              "default": "js",
              "named": [],
              "line": 2,
              "isLocal": false
            }
          ],
          "exports": [],
          "hasExports": false,
          "isModule": true
        },
        {
          "name": "pg-migrate-config.js",
          "path": "pg-migrate-config.js",
          "size": 206,
          "lines": 11,
          "functions": [],
          "classes": [],
          "imports": [],
          "exports": [
            {
              "name": "{\r\n  databaseUrl: process.env.DATABASE_URL,\r\n  migrationsTable: 'pgmigrations',\r\n  dir: 'database/migrations',\r\n  direction: 'up',\r\n  count: Infinity,\r\n}",
              "type": "commonjs",
              "line": 4
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "test-basic.js",
          "path": "test-basic.js",
          "size": 1396,
          "lines": 43,
          "functions": [
            {
              "name": "testBasicComponents",
              "type": "function",
              "line": 6,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 19,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "./src/utils/logger",
              "default": "logger",
              "named": [],
              "line": 2,
              "isLocal": true
            },
            {
              "source": "./src/utils/config",
              "default": "config",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "./src/database/pg",
              "default": null,
              "named": [
                "initializeDatabase"
              ],
              "line": 15,
              "isLocal": true
            },
            {
              "source": "./src/services/agentExecutor",
              "default": null,
              "named": [
                "SalvaCellAgentExecutor"
              ],
              "line": 25,
              "isLocal": true
            }
          ],
          "exports": [],
          "hasExports": false,
          "isModule": false
        },
        {
          "name": "test-db-connection.js",
          "path": "test-db-connection.js",
          "size": 1076,
          "lines": 36,
          "functions": [
            {
              "name": "testConnection",
              "type": "function",
              "line": 15,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 29,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "pg",
              "default": null,
              "named": [
                "Pool"
              ],
              "line": 1,
              "isLocal": false
            }
          ],
          "exports": [],
          "hasExports": false,
          "isModule": false
        },
        {
          "name": "test-node.js",
          "path": "test-node.js",
          "size": 91,
          "lines": 3,
          "functions": [],
          "classes": [],
          "imports": [],
          "exports": [],
          "hasExports": false,
          "isModule": false
        },
        {
          "name": "test-very-basic.js",
          "path": "test-very-basic.js",
          "size": 435,
          "lines": 18,
          "functions": [
            {
              "name": "catch",
              "type": "unknown",
              "line": 14,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [],
          "exports": [],
          "hasExports": false,
          "isModule": false
        }
      ],
      "groups": [
        {
          "name": "Grupo 1",
          "files": [
            {
              "name": "analyzer.js",
              "path": "analyzer.js",
              "size": 39510,
              "lines": 1252,
              "functions": [
                {
                  "name": "main",
                  "type": "function",
                  "line": 1114,
                  "isExported": false
                },
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 54,
                  "isExported": false
                },
                {
                  "name": "analyze",
                  "type": "unknown",
                  "line": 78,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 105,
                  "isExported": false
                },
                {
                  "name": "validateProjectPath",
                  "type": "unknown",
                  "line": 114,
                  "isExported": false
                },
                {
                  "name": "analyzeDirectory",
                  "type": "unknown",
                  "line": 128,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 133,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 142,
                  "isExported": false
                },
                {
                  "name": "shouldExcludeDirectory",
                  "type": "unknown",
                  "line": 177,
                  "isExported": false
                },
                {
                  "name": "shouldExcludeFile",
                  "type": "unknown",
                  "line": 187,
                  "isExported": false
                },
                {
                  "name": "analyzeJsFiles",
                  "type": "unknown",
                  "line": 198,
                  "isExported": false
                },
                {
                  "name": "createFileGroups",
                  "type": "unknown",
                  "line": 245,
                  "isExported": false
                },
                {
                  "name": "analyzeJsFile",
                  "type": "unknown",
                  "line": 259,
                  "isExported": false
                },
                {
                  "name": "parseJsFile",
                  "type": "unknown",
                  "line": 293,
                  "isExported": false
                },
                {
                  "name": "extractFunctions",
                  "type": "unknown",
                  "line": 336,
                  "isExported": false
                },
                {
                  "name": "extractClasses",
                  "type": "unknown",
                  "line": 372,
                  "isExported": false
                },
                {
                  "name": "extractClassMethods",
                  "type": "unknown",
                  "line": 393,
                  "isExported": false
                },
                {
                  "name": "getClassContent",
                  "type": "unknown",
                  "line": 416,
                  "isExported": false
                },
                {
                  "name": "while",
                  "type": "unknown",
                  "line": 421,
                  "isExported": false
                },
                {
                  "name": "extractImports",
                  "type": "unknown",
                  "line": 442,
                  "isExported": false
                },
                {
                  "name": "extractExports",
                  "type": "unknown",
                  "line": 474,
                  "isExported": false
                },
                {
                  "name": "getFunctionType",
                  "type": "unknown",
                  "line": 504,
                  "isExported": false
                },
                {
                  "name": "getExportType",
                  "type": "unknown",
                  "line": 514,
                  "isExported": false
                },
                {
                  "name": "isExported",
                  "type": "unknown",
                  "line": 523,
                  "isExported": false
                },
                {
                  "name": "registerFunctions",
                  "type": "function",
                  "line": 537,
                  "isExported": false
                },
                {
                  "name": "registerClasses",
                  "type": "unknown",
                  "line": 552,
                  "isExported": false
                },
                {
                  "name": "registerImports",
                  "type": "unknown",
                  "line": 567,
                  "isExported": false
                },
                {
                  "name": "detectDuplicates",
                  "type": "unknown",
                  "line": 577,
                  "isExported": false
                },
                {
                  "name": "buildRelationships",
                  "type": "unknown",
                  "line": 614,
                  "isExported": false
                },
                {
                  "name": "forEach",
                  "type": "arrow",
                  "line": 618,
                  "isExported": false
                },
                {
                  "name": "generateMarkdownReport",
                  "type": "unknown",
                  "line": 634,
                  "isExported": false
                },
                {
                  "name": "generateMarkdownHeader",
                  "type": "unknown",
                  "line": 662,
                  "isExported": false
                },
                {
                  "name": "generateMarkdownSummary",
                  "type": "unknown",
                  "line": 677,
                  "isExported": false
                },
                {
                  "name": "generateMarkdownDirectories",
                  "type": "unknown",
                  "line": 699,
                  "isExported": false
                },
                {
                  "name": "generateFileAnalysis",
                  "type": "unknown",
                  "line": 739,
                  "isExported": false
                },
                {
                  "name": "generateMarkdownDuplicates",
                  "type": "unknown",
                  "line": 811,
                  "isExported": false
                },
                {
                  "name": "generateMarkdownRelationships",
                  "type": "unknown",
                  "line": 850,
                  "isExported": false
                },
                {
                  "name": "generateMarkdownFooter",
                  "type": "unknown",
                  "line": 896,
                  "isExported": false
                },
                {
                  "name": "generateJsonReport",
                  "type": "unknown",
                  "line": 934,
                  "isExported": false
                },
                {
                  "name": "checkDependencies",
                  "type": "unknown",
                  "line": 960,
                  "isExported": false
                },
                {
                  "name": "showHelp",
                  "type": "unknown",
                  "line": 980,
                  "isExported": false
                },
                {
                  "name": "parseArguments",
                  "type": "unknown",
                  "line": 1031,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 1044,
                  "isExported": false
                },
                {
                  "name": "validatePath",
                  "type": "unknown",
                  "line": 1082,
                  "isExported": false
                },
                {
                  "name": "getPerformanceStats",
                  "type": "unknown",
                  "line": 1097,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ProjectAnalyzer",
                  "extends": null,
                  "line": 53,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "analyze",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validateProjectPath",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeDirectory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "shouldExcludeDirectory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "shouldExcludeFile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeJsFiles",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createFileGroups",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeJsFile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseJsFile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractFunctions",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractClasses",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractClassMethods",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getClassContent",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "while",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "extractImports",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "extractExports",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "getFunctionType",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "getExportType",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "isExported",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "registerFunctions",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "registerClasses",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "registerImports",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "detectDuplicates",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "buildRelationships",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "forEach",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateMarkdownReport",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateMarkdownHeader",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateMarkdownSummary",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateMarkdownDirectories",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateFileAnalysis",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateMarkdownDuplicates",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateMarkdownRelationships",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateMarkdownFooter",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "generateJsonReport",
                      "isConstructor": false,
                      "isStatic": true
                    }
                  ]
                },
                {
                  "name": "AnalyzerUtils",
                  "extends": null,
                  "line": 956,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "checkDependencies",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "showHelp",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "parseArguments",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "validatePath",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "getPerformanceStats",
                      "isConstructor": false,
                      "isStatic": true
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 12,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 13,
                  "isLocal": false
                },
                {
                  "source": "child_process",
                  "default": null,
                  "named": [
                    "execSync"
                  ],
                  "line": 14,
                  "isLocal": false
                }
              ],
              "exports": [
                {
                  "name": "{\r\n    ProjectAnalyzer,\r\n    AnalyzerUtils,\r\n    CONFIG\r\n}",
                  "type": "commonjs",
                  "line": 1203
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "eslint.config.js",
              "path": "eslint.config.js",
              "size": 1474,
              "lines": 53,
              "functions": [],
              "classes": [],
              "imports": [
                {
                  "source": "@eslint/js",
                  "default": "js",
                  "named": [],
                  "line": 2,
                  "isLocal": false
                }
              ],
              "exports": [],
              "hasExports": false,
              "isModule": true
            },
            {
              "name": "pg-migrate-config.js",
              "path": "pg-migrate-config.js",
              "size": 206,
              "lines": 11,
              "functions": [],
              "classes": [],
              "imports": [],
              "exports": [
                {
                  "name": "{\r\n  databaseUrl: process.env.DATABASE_URL,\r\n  migrationsTable: 'pgmigrations',\r\n  dir: 'database/migrations',\r\n  direction: 'up',\r\n  count: Infinity,\r\n}",
                  "type": "commonjs",
                  "line": 4
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "test-basic.js",
              "path": "test-basic.js",
              "size": 1396,
              "lines": 43,
              "functions": [
                {
                  "name": "testBasicComponents",
                  "type": "function",
                  "line": 6,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 19,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "./src/utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 2,
                  "isLocal": true
                },
                {
                  "source": "./src/utils/config",
                  "default": "config",
                  "named": [],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "./src/database/pg",
                  "default": null,
                  "named": [
                    "initializeDatabase"
                  ],
                  "line": 15,
                  "isLocal": true
                },
                {
                  "source": "./src/services/agentExecutor",
                  "default": null,
                  "named": [
                    "SalvaCellAgentExecutor"
                  ],
                  "line": 25,
                  "isLocal": true
                }
              ],
              "exports": [],
              "hasExports": false,
              "isModule": false
            },
            {
              "name": "test-db-connection.js",
              "path": "test-db-connection.js",
              "size": 1076,
              "lines": 36,
              "functions": [
                {
                  "name": "testConnection",
                  "type": "function",
                  "line": 15,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 29,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "pg",
                  "default": null,
                  "named": [
                    "Pool"
                  ],
                  "line": 1,
                  "isLocal": false
                }
              ],
              "exports": [],
              "hasExports": false,
              "isModule": false
            }
          ]
        },
        {
          "name": "Grupo 2",
          "files": [
            {
              "name": "test-node.js",
              "path": "test-node.js",
              "size": 91,
              "lines": 3,
              "functions": [],
              "classes": [],
              "imports": [],
              "exports": [],
              "hasExports": false,
              "isModule": false
            },
            {
              "name": "test-very-basic.js",
              "path": "test-very-basic.js",
              "size": 435,
              "lines": 18,
              "functions": [
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 14,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [],
              "exports": [],
              "hasExports": false,
              "isModule": false
            }
          ]
        }
      ]
    },
    {
      "path": "config-service",
      "fileCount": 1,
      "files": [
        {
          "name": "index.js",
          "path": "config-service\\index.js",
          "size": 119,
          "lines": 2,
          "functions": [],
          "classes": [],
          "imports": [],
          "exports": [],
          "hasExports": false,
          "isModule": false
        }
      ],
      "groups": []
    },
    {
      "path": "database\\migrations",
      "fileCount": 1,
      "files": [
        {
          "name": "1709212800000_initial_schema.js",
          "path": "database\\migrations\\1709212800000_initial_schema.js",
          "size": 640,
          "lines": 24,
          "functions": [],
          "classes": [],
          "imports": [],
          "exports": [],
          "hasExports": false,
          "isModule": false
        }
      ],
      "groups": []
    },
    {
      "path": "knowledge-service",
      "fileCount": 1,
      "files": [
        {
          "name": "index.js",
          "path": "knowledge-service\\index.js",
          "size": 130,
          "lines": 2,
          "functions": [],
          "classes": [],
          "imports": [],
          "exports": [],
          "hasExports": false,
          "isModule": false
        }
      ],
      "groups": []
    },
    {
      "path": "src",
      "fileCount": 1,
      "files": [
        {
          "name": "bot.js",
          "path": "src\\bot.js",
          "size": 9960,
          "lines": 257,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 15,
              "isExported": false
            },
            {
              "name": "initialize",
              "type": "unknown",
              "line": 33,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 42,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 52,
              "isExported": false
            },
            {
              "name": "initializePureOrchestrator",
              "type": "unknown",
              "line": 60,
              "isExported": false
            },
            {
              "name": "initializeWhatsAppClient",
              "type": "unknown",
              "line": 83,
              "isExported": false
            },
            {
              "name": "setupEventHandlers",
              "type": "unknown",
              "line": 94,
              "isExported": false
            },
            {
              "name": "handleIncomingMessage",
              "type": "unknown",
              "line": 121,
              "isExported": false
            },
            {
              "name": "handleMessageError",
              "type": "unknown",
              "line": 174,
              "isExported": false
            },
            {
              "name": "recordSuccess",
              "type": "unknown",
              "line": 203,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 209,
              "isExported": false
            },
            {
              "name": "start",
              "type": "unknown",
              "line": 221,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 231,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "SalvaCellPureOrchestrator",
              "extends": null,
              "line": 14,
              "isExported": false,
              "methods": [
                {
                  "name": "initialize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializePureOrchestrator",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializeWhatsAppClient",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "setupEventHandlers",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleIncomingMessage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleMessageError",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "start",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "whatsapp-web.js",
              "default": null,
              "named": [
                "Client",
                "LocalAuth"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "qrcode-terminal",
              "default": "qrcode",
              "named": [],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "./utils/config",
              "default": "config",
              "named": [],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "./database/pg",
              "default": null,
              "named": [
                "initializeDatabase"
              ],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "./utils/chatState",
              "default": null,
              "named": [
                "isChatPaused"
              ],
              "line": 8,
              "isLocal": true
            },
            {
              "source": "./utils/logger",
              "default": "logger",
              "named": [],
              "line": 9,
              "isLocal": true
            },
            {
              "source": "./services/agentExecutor",
              "default": null,
              "named": [
                "SalvaCellAgentExecutor",
                "OllamaError"
              ],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "./core/OrchestrationController",
              "default": "orchestrationController",
              "named": [],
              "line": 11,
              "isLocal": true
            },
            {
              "source": "./services/serviceRegistry",
              "default": null,
              "named": [
                "registerService"
              ],
              "line": 12,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{ SalvaCellPureOrchestrator }",
              "type": "commonjs",
              "line": 257
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\auth",
      "fileCount": 1,
      "files": [
        {
          "name": "admin.js",
          "path": "src\\auth\\admin.js",
          "size": 2624,
          "lines": 85,
          "functions": [
            {
              "name": "isAdmin",
              "type": "function",
              "line": 11,
              "isExported": false
            },
            {
              "name": "addAdmin",
              "type": "function",
              "line": 38,
              "isExported": false
            },
            {
              "name": "removeAdmin",
              "type": "function",
              "line": 59,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 13,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 26,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    isAdmin,\n    addAdmin,\n    removeAdmin\n}",
              "type": "commonjs",
              "line": 80
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\core",
      "fileCount": 1,
      "files": [
        {
          "name": "OrchestrationController.js",
          "path": "src\\core\\OrchestrationController.js",
          "size": 26580,
          "lines": 672,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 32,
              "isExported": false
            },
            {
              "name": "initialize",
              "type": "unknown",
              "line": 65,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 70,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 104,
              "isExported": false
            },
            {
              "name": "establishCrossLayerCoordination",
              "type": "unknown",
              "line": 115,
              "isExported": false
            },
            {
              "name": "executeOperation",
              "type": "unknown",
              "line": 141,
              "isExported": false
            },
            {
              "name": "handlePerformanceDegradation",
              "type": "unknown",
              "line": 214,
              "isExported": false
            },
            {
              "name": "handleSystemHealthChange",
              "type": "unknown",
              "line": 233,
              "isExported": false
            },
            {
              "name": "updateSuccessMetrics",
              "type": "unknown",
              "line": 251,
              "isExported": false
            },
            {
              "name": "updateFailureMetrics",
              "type": "unknown",
              "line": 272,
              "isExported": false
            },
            {
              "name": "getSystemStatus",
              "type": "unknown",
              "line": 289,
              "isExported": false
            },
            {
              "name": "optimizeSystem",
              "type": "unknown",
              "line": 341,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 383,
              "isExported": false
            },
            {
              "name": "getCircuitBreaker",
              "type": "unknown",
              "line": 421,
              "isExported": false
            },
            {
              "name": "getGracefulDegradationManager",
              "type": "unknown",
              "line": 429,
              "isExported": false
            },
            {
              "name": "getPerformanceController",
              "type": "unknown",
              "line": 437,
              "isExported": false
            },
            {
              "name": "getResilienceController",
              "type": "unknown",
              "line": 445,
              "isExported": false
            },
            {
              "name": "getAdminEscalationSystem",
              "type": "unknown",
              "line": 453,
              "isExported": false
            },
            {
              "name": "getAdaptiveLearningEngine",
              "type": "unknown",
              "line": 461,
              "isExported": false
            },
            {
              "name": "getUncertaintyDetector",
              "type": "unknown",
              "line": 469,
              "isExported": false
            },
            {
              "name": "processIntelligentQuery",
              "type": "unknown",
              "line": 479,
              "isExported": false
            },
            {
              "name": "extractSituationFromQuery",
              "type": "unknown",
              "line": 567,
              "isExported": false
            },
            {
              "name": "detectQueryType",
              "type": "unknown",
              "line": 581,
              "isExported": false
            },
            {
              "name": "extractDeviceModel",
              "type": "unknown",
              "line": 589,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 596,
              "isExported": false
            },
            {
              "name": "detectServiceType",
              "type": "unknown",
              "line": 604,
              "isExported": false
            },
            {
              "name": "setupIntelligenceCoordination",
              "type": "unknown",
              "line": 615,
              "isExported": false
            },
            {
              "name": "recordAdminDecisionForLearning",
              "type": "unknown",
              "line": 634,
              "isExported": false
            },
            {
              "name": "extractSituationFromEscalation",
              "type": "unknown",
              "line": 659,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "OrchestrationController",
              "extends": null,
              "line": 31,
              "isExported": false,
              "methods": [
                {
                  "name": "initialize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "establishCrossLayerCoordination",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeOperation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handlePerformanceDegradation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleSystemHealthChange",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateSuccessMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateFailureMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSystemStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimizeSystem",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCircuitBreaker",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getGracefulDegradationManager",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getPerformanceController",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getResilienceController",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getAdminEscalationSystem",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getAdaptiveLearningEngine",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getUncertaintyDetector",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processIntelligentQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractSituationFromQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectQueryType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractDeviceModel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectServiceType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "setupIntelligenceCoordination",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordAdminDecisionForLearning",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractSituationFromEscalation",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 12,
              "isLocal": true
            },
            {
              "source": "../utils/config",
              "default": "config",
              "named": [],
              "line": 13,
              "isLocal": true
            },
            {
              "source": "./performance/PerformanceController",
              "default": "PerformanceController",
              "named": [],
              "line": 14,
              "isLocal": true
            },
            {
              "source": "./resilience/ResilienceController",
              "default": "ResilienceController",
              "named": [],
              "line": 15,
              "isLocal": true
            },
            {
              "source": "./intelligence/AdminEscalationSystem",
              "default": "AdminEscalationSystem",
              "named": [],
              "line": 16,
              "isLocal": true
            },
            {
              "source": "./intelligence/AdaptiveLearningEngine",
              "default": "AdaptiveLearningEngine",
              "named": [],
              "line": 17,
              "isLocal": true
            },
            {
              "source": "./intelligence/UncertaintyDetector",
              "default": "UncertaintyDetector",
              "named": [],
              "line": 18,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "orchestrationController",
              "type": "commonjs",
              "line": 671
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\core\\intelligence",
      "fileCount": 6,
      "files": [
        {
          "name": "AdaptiveLearningEngine.js",
          "path": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
          "size": 19103,
          "lines": 544,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 18,
              "isExported": false
            },
            {
              "name": "recordAdminDecision",
              "type": "unknown",
              "line": 40,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 75,
              "isExported": false
            },
            {
              "name": "checkForAutoDecision",
              "type": "unknown",
              "line": 85,
              "isExported": false
            },
            {
              "name": "checkForNewAutoDecision",
              "type": "unknown",
              "line": 108,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 111,
              "isExported": false
            },
            {
              "name": "analyzeDecisionConsistency",
              "type": "unknown",
              "line": 146,
              "isExported": false
            },
            {
              "name": "requestAutoDecisionApproval",
              "type": "unknown",
              "line": 189,
              "isExported": false
            },
            {
              "name": "formatApprovalRequest",
              "type": "unknown",
              "line": 209,
              "isExported": false
            },
            {
              "name": "handleApprovalResponse",
              "type": "unknown",
              "line": 232,
              "isExported": false
            },
            {
              "name": "approveAutoDecision",
              "type": "unknown",
              "line": 248,
              "isExported": false
            },
            {
              "name": "rejectAutoDecision",
              "type": "unknown",
              "line": 284,
              "isExported": false
            },
            {
              "name": "generateSituationPattern",
              "type": "unknown",
              "line": 303,
              "isExported": false
            },
            {
              "name": "normalizeResponse",
              "type": "unknown",
              "line": 346,
              "isExported": false
            },
            {
              "name": "normalizeDeviceModel",
              "type": "unknown",
              "line": 359,
              "isExported": false
            },
            {
              "name": "categorizeTimeOfDay",
              "type": "unknown",
              "line": 371,
              "isExported": false
            },
            {
              "name": "describeSituationFromPattern",
              "type": "unknown",
              "line": 383,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 390,
              "isExported": false
            },
            {
              "name": "saveDecisionToDatabase",
              "type": "unknown",
              "line": 419,
              "isExported": false
            },
            {
              "name": "saveAutoDecisionToDatabase",
              "type": "unknown",
              "line": 435,
              "isExported": false
            },
            {
              "name": "markDecisionSuccess",
              "type": "unknown",
              "line": 451,
              "isExported": false
            },
            {
              "name": "updateAccuracyMetrics",
              "type": "unknown",
              "line": 474,
              "isExported": false
            },
            {
              "name": "forEach",
              "type": "arrow",
              "line": 479,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 497,
              "isExported": false
            },
            {
              "name": "getPendingApprovals",
              "type": "unknown",
              "line": 510,
              "isExported": false
            },
            {
              "name": "getActiveAutoDecisions",
              "type": "unknown",
              "line": 518,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 531,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "AdaptiveLearningEngine",
              "extends": null,
              "line": 17,
              "isExported": false,
              "methods": [
                {
                  "name": "recordAdminDecision",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkForAutoDecision",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkForNewAutoDecision",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeDecisionConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "requestAutoDecisionApproval",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "formatApprovalRequest",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleApprovalResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "approveAutoDecision",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "rejectAutoDecision",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateSituationPattern",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeDeviceModel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "categorizeTimeOfDay",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "describeSituationFromPattern",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "saveDecisionToDatabase",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "saveAutoDecisionToDatabase",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "markDecisionSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateAccuracyMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forEach",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getPendingApprovals",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getActiveAutoDecisions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../../database/pg",
              "default": null,
              "named": [
                "initializeDatabase"
              ],
              "line": 11,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "adaptiveLearningEngine",
              "type": "commonjs",
              "line": 543
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "AdminEscalationSystem.js",
          "path": "src\\core\\intelligence\\AdminEscalationSystem.js",
          "size": 16512,
          "lines": 407,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 22,
              "isExported": false
            },
            {
              "name": "needsEscalation",
              "type": "unknown",
              "line": 44,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 60,
              "isExported": false
            },
            {
              "name": "escalateToAdmin",
              "type": "unknown",
              "line": 76,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 89,
              "isExported": false
            },
            {
              "name": "processEscalation",
              "type": "unknown",
              "line": 102,
              "isExported": false
            },
            {
              "name": "handleAdminResponse",
              "type": "unknown",
              "line": 142,
              "isExported": false
            },
            {
              "name": "formulateNaturalResponse",
              "type": "unknown",
              "line": 184,
              "isExported": false
            },
            {
              "name": "cleanAdminResponse",
              "type": "unknown",
              "line": 205,
              "isExported": false
            },
            {
              "name": "setupAdminTimeout",
              "type": "unknown",
              "line": 217,
              "isExported": false
            },
            {
              "name": "handleAdminTimeout",
              "type": "unknown",
              "line": 230,
              "isExported": false
            },
            {
              "name": "clearAdminTimeout",
              "type": "unknown",
              "line": 264,
              "isExported": false
            },
            {
              "name": "enqueueEscalation",
              "type": "unknown",
              "line": 278,
              "isExported": false
            },
            {
              "name": "processNextInQueue",
              "type": "unknown",
              "line": 291,
              "isExported": false
            },
            {
              "name": "generateConsultaId",
              "type": "unknown",
              "line": 302,
              "isExported": false
            },
            {
              "name": "getCurrentEscalation",
              "type": "unknown",
              "line": 306,
              "isExported": false
            },
            {
              "name": "releaseAdmin",
              "type": "unknown",
              "line": 312,
              "isExported": false
            },
            {
              "name": "recordSuccessfulEscalation",
              "type": "unknown",
              "line": 316,
              "isExported": false
            },
            {
              "name": "formatAdminMessage",
              "type": "unknown",
              "line": 333,
              "isExported": false
            },
            {
              "name": "sendToAdmin",
              "type": "unknown",
              "line": 352,
              "isExported": false
            },
            {
              "name": "getCustomerWaitMessage",
              "type": "unknown",
              "line": 366,
              "isExported": false
            },
            {
              "name": "getEscalationReason",
              "type": "unknown",
              "line": 373,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 382,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 393,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "AdminEscalationSystem",
              "extends": null,
              "line": 21,
              "isExported": false,
              "methods": [
                {
                  "name": "needsEscalation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "escalateToAdmin",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processEscalation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleAdminResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "formulateNaturalResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanAdminResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "setupAdminTimeout",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleAdminTimeout",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "clearAdminTimeout",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enqueueEscalation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processNextInQueue",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateConsultaId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCurrentEscalation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "releaseAdmin",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordSuccessfulEscalation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "formatAdminMessage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "sendToAdmin",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCustomerWaitMessage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEscalationReason",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../../utils/config",
              "default": "config",
              "named": [],
              "line": 11,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "adminEscalationSystem",
              "type": "commonjs",
              "line": 406
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "ContextAwareResponseGenerator.js",
          "path": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
          "size": 47248,
          "lines": 1186,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "generateResponse",
              "type": "unknown",
              "line": 49,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 99,
              "isExported": false
            },
            {
              "name": "analyzeClientContext",
              "type": "unknown",
              "line": 122,
              "isExported": false
            },
            {
              "name": "updateClientContext",
              "type": "unknown",
              "line": 166,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 176,
              "isExported": false
            },
            {
              "name": "determineResponseType",
              "type": "unknown",
              "line": 223,
              "isExported": false
            },
            {
              "name": "getTemporalContext",
              "type": "unknown",
              "line": 262,
              "isExported": false
            },
            {
              "name": "createPersonalizedResponse",
              "type": "unknown",
              "line": 305,
              "isExported": false
            },
            {
              "name": "createPersonalizationVariables",
              "type": "unknown",
              "line": 366,
              "isExported": false
            },
            {
              "name": "getResponseTemplate",
              "type": "unknown",
              "line": 433,
              "isExported": false
            },
            {
              "name": "populateTemplate",
              "type": "unknown",
              "line": 449,
              "isExported": false
            },
            {
              "name": "applyPersonalityStyle",
              "type": "unknown",
              "line": 473,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 477,
              "isExported": false
            },
            {
              "name": "addContextualElements",
              "type": "unknown",
              "line": 514,
              "isExported": false
            },
            {
              "name": "updateConversationMemory",
              "type": "unknown",
              "line": 545,
              "isExported": false
            },
            {
              "name": "getConversationHistory",
              "type": "unknown",
              "line": 569,
              "isExported": false
            },
            {
              "name": "updateMetrics",
              "type": "unknown",
              "line": 578,
              "isExported": false
            },
            {
              "name": "generateFallbackResponse",
              "type": "unknown",
              "line": 602,
              "isExported": false
            },
            {
              "name": "extractDeviceType",
              "type": "unknown",
              "line": 622,
              "isExported": false
            },
            {
              "name": "extractServiceType",
              "type": "unknown",
              "line": 640,
              "isExported": false
            },
            {
              "name": "analyzeCommunicationStyle",
              "type": "unknown",
              "line": 657,
              "isExported": false
            },
            {
              "name": "initializeTemplates",
              "type": "unknown",
              "line": 672,
              "isExported": false
            },
            {
              "name": "loadBusinessContext",
              "type": "unknown",
              "line": 745,
              "isExported": false
            },
            {
              "name": "addAdditionalTemplates",
              "type": "unknown",
              "line": 774,
              "isExported": false
            },
            {
              "name": "enrichClientBehavior",
              "type": "unknown",
              "line": 881,
              "isExported": false
            },
            {
              "name": "analyzeSentiment",
              "type": "unknown",
              "line": 919,
              "isExported": false
            },
            {
              "name": "applySentimentAdjustments",
              "type": "unknown",
              "line": 950,
              "isExported": false
            },
            {
              "name": "getContextStats",
              "type": "unknown",
              "line": 967,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 1021,
              "isExported": false
            },
            {
              "name": "cleanupOldData",
              "type": "unknown",
              "line": 1043,
              "isExported": false
            },
            {
              "name": "exportContextData",
              "type": "unknown",
              "line": 1068,
              "isExported": false
            },
            {
              "name": "importContextData",
              "type": "unknown",
              "line": 1100,
              "isExported": false
            },
            {
              "name": "optimizeTemplates",
              "type": "unknown",
              "line": 1137,
              "isExported": false
            },
            {
              "name": "generateOptimizationSuggestions",
              "type": "unknown",
              "line": 1167,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ContextAwareResponseGenerator",
              "extends": null,
              "line": 20,
              "isExported": true,
              "methods": [
                {
                  "name": "generateResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeClientContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateClientContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "determineResponseType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getTemporalContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createPersonalizedResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createPersonalizationVariables",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getResponseTemplate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "populateTemplate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "applyPersonalityStyle",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "addContextualElements",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateConversationMemory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getConversationHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateFallbackResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractDeviceType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractServiceType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeCommunicationStyle",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializeTemplates",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "loadBusinessContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "addAdditionalTemplates",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enrichClientBehavior",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeSentiment",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "applySentimentAdjustments",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getContextStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanupOldData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "exportContextData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "importContextData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimizeTemplates",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateOptimizationSuggestions",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../../utils/config",
              "default": "config",
              "named": [],
              "line": 11,
              "isLocal": true
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 12,
              "isLocal": false
            },
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 13,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "ContextAwareResponseGenerator",
              "type": "commonjs",
              "line": 1185
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "MultiModalReasoningEngine.js",
          "path": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "size": 18645,
          "lines": 478,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "processQuery",
              "type": "unknown",
              "line": 48,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 89,
              "isExported": false
            },
            {
              "name": "classifyQuery",
              "type": "unknown",
              "line": 110,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 121,
              "isExported": false
            },
            {
              "name": "analyzeTextComplexity",
              "type": "unknown",
              "line": 153,
              "isExported": false
            },
            {
              "name": "containsTechnicalTerms",
              "type": "unknown",
              "line": 181,
              "isExported": false
            },
            {
              "name": "selectReasoningStrategy",
              "type": "unknown",
              "line": 196,
              "isExported": false
            },
            {
              "name": "executeReasoning",
              "type": "unknown",
              "line": 213,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 230,
              "isExported": false
            },
            {
              "name": "executeReasoningStep",
              "type": "unknown",
              "line": 250,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 255,
              "isExported": false
            },
            {
              "name": "performTextAnalysis",
              "type": "unknown",
              "line": 285,
              "isExported": false
            },
            {
              "name": "performImageAnalysis",
              "type": "unknown",
              "line": 296,
              "isExported": false
            },
            {
              "name": "performKnowledgeLookup",
              "type": "unknown",
              "line": 308,
              "isExported": false
            },
            {
              "name": "performPriceAnalysis",
              "type": "unknown",
              "line": 320,
              "isExported": false
            },
            {
              "name": "performContextIntegration",
              "type": "unknown",
              "line": 332,
              "isExported": false
            },
            {
              "name": "performSynthesis",
              "type": "unknown",
              "line": 345,
              "isExported": false
            },
            {
              "name": "assessConfidence",
              "type": "unknown",
              "line": 358,
              "isExported": false
            },
            {
              "name": "decideAction",
              "type": "unknown",
              "line": 369,
              "isExported": false
            },
            {
              "name": "calculateOverallConfidence",
              "type": "unknown",
              "line": 385,
              "isExported": false
            },
            {
              "name": "generateConclusions",
              "type": "unknown",
              "line": 393,
              "isExported": false
            },
            {
              "name": "formulateReasoning",
              "type": "unknown",
              "line": 405,
              "isExported": false
            },
            {
              "name": "updateMetrics",
              "type": "unknown",
              "line": 410,
              "isExported": false
            },
            {
              "name": "initializeReasoningStrategies",
              "type": "unknown",
              "line": 429,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "MultiModalReasoningEngine",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "processQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "classifyQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeTextComplexity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "containsTechnicalTerms",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "selectReasoningStrategy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeReasoning",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeReasoningStep",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performTextAnalysis",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performImageAnalysis",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performKnowledgeLookup",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performPriceAnalysis",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performContextIntegration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performSynthesis",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "assessConfidence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "decideAction",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateOverallConfidence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateConclusions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "formulateReasoning",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializeReasoningStrategies",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../../utils/config",
              "default": "config",
              "named": [],
              "line": 11,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "multiModalReasoningEngine",
              "type": "commonjs",
              "line": 477
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "PredictiveAnalyticsEngine.js",
          "path": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
          "size": 14904,
          "lines": 324,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "generatePredictions",
              "type": "unknown",
              "line": 50,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 84,
              "isExported": false
            },
            {
              "name": "predictBehavior",
              "type": "unknown",
              "line": 100,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 111,
              "isExported": false
            },
            {
              "name": "predictNeeds",
              "type": "unknown",
              "line": 128,
              "isExported": false
            },
            {
              "name": "predictOptimalTiming",
              "type": "unknown",
              "line": 156,
              "isExported": false
            },
            {
              "name": "predictDeviceLifecycle",
              "type": "unknown",
              "line": 183,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 195,
              "isExported": false
            },
            {
              "name": "generateProactiveActions",
              "type": "unknown",
              "line": 218,
              "isExported": false
            },
            {
              "name": "initializePredictionModels",
              "type": "unknown",
              "line": 258,
              "isExported": false
            },
            {
              "name": "loadHistoricalTrends",
              "type": "unknown",
              "line": 262,
              "isExported": false
            },
            {
              "name": "aggregateInsights",
              "type": "unknown",
              "line": 268,
              "isExported": false
            },
            {
              "name": "generateRecommendations",
              "type": "unknown",
              "line": 282,
              "isExported": false
            },
            {
              "name": "calculateOverallConfidence",
              "type": "unknown",
              "line": 289,
              "isExported": false
            },
            {
              "name": "countHighConfidencePredictions",
              "type": "unknown",
              "line": 295,
              "isExported": false
            },
            {
              "name": "calculateContactProbability",
              "type": "unknown",
              "line": 300,
              "isExported": false
            },
            {
              "name": "predictPreferredTime",
              "type": "unknown",
              "line": 301,
              "isExported": false
            },
            {
              "name": "predictCommunicationStyle",
              "type": "unknown",
              "line": 302,
              "isExported": false
            },
            {
              "name": "predictUrgencyPattern",
              "type": "unknown",
              "line": 303,
              "isExported": false
            },
            {
              "name": "calculateServiceLoyalty",
              "type": "unknown",
              "line": 304,
              "isExported": false
            },
            {
              "name": "predictLikelyServices",
              "type": "unknown",
              "line": 305,
              "isExported": false
            },
            {
              "name": "predictUpgradeWindow",
              "type": "unknown",
              "line": 306,
              "isExported": false
            },
            {
              "name": "predictMaintenanceNeeds",
              "type": "unknown",
              "line": 307,
              "isExported": false
            },
            {
              "name": "estimateBudgetRange",
              "type": "unknown",
              "line": 308,
              "isExported": false
            },
            {
              "name": "analyzeBestHours",
              "type": "unknown",
              "line": 309,
              "isExported": false
            },
            {
              "name": "predictBestDays",
              "type": "unknown",
              "line": 310,
              "isExported": false
            },
            {
              "name": "estimateResponseExpectation",
              "type": "unknown",
              "line": 311,
              "isExported": false
            },
            {
              "name": "getSeasonalFactors",
              "type": "unknown",
              "line": 312,
              "isExported": false
            },
            {
              "name": "getGenericLifecycle",
              "type": "unknown",
              "line": 313,
              "isExported": false
            },
            {
              "name": "determineCurrentPhase",
              "type": "unknown",
              "line": 314,
              "isExported": false
            },
            {
              "name": "predictExpectedIssues",
              "type": "unknown",
              "line": 315,
              "isExported": false
            },
            {
              "name": "suggestMaintenanceSchedule",
              "type": "unknown",
              "line": 316,
              "isExported": false
            },
            {
              "name": "predictReplacementWindow",
              "type": "unknown",
              "line": 317,
              "isExported": false
            },
            {
              "name": "calculateProactiveConfidence",
              "type": "unknown",
              "line": 318,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "PredictiveAnalyticsEngine",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "generatePredictions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictBehavior",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictNeeds",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictOptimalTiming",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictDeviceLifecycle",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateProactiveActions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializePredictionModels",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "loadHistoricalTrends",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "aggregateInsights",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateRecommendations",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateOverallConfidence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "countHighConfidencePredictions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateContactProbability",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictPreferredTime",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictCommunicationStyle",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictUrgencyPattern",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateServiceLoyalty",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictLikelyServices",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictUpgradeWindow",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictMaintenanceNeeds",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "estimateBudgetRange",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeBestHours",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictBestDays",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "estimateResponseExpectation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSeasonalFactors",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getGenericLifecycle",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "determineCurrentPhase",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictExpectedIssues",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "suggestMaintenanceSchedule",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "predictReplacementWindow",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateProactiveConfidence",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../../utils/config",
              "default": "config",
              "named": [],
              "line": 11,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "predictiveAnalyticsEngine",
              "type": "commonjs",
              "line": 323
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "UncertaintyDetector.js",
          "path": "src\\core\\intelligence\\UncertaintyDetector.js",
          "size": 18237,
          "lines": 453,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 18,
              "isExported": false
            },
            {
              "name": "analyzeQuery",
              "type": "unknown",
              "line": 41,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 58,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 78,
              "isExported": false
            },
            {
              "name": "detectUncertaintyIndicators",
              "type": "unknown",
              "line": 89,
              "isExported": false
            },
            {
              "name": "analyzeDeviceModel",
              "type": "unknown",
              "line": 162,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 174,
              "isExported": false
            },
            {
              "name": "analyzeQueryComplexity",
              "type": "unknown",
              "line": 196,
              "isExported": false
            },
            {
              "name": "analyzePriceAvailability",
              "type": "unknown",
              "line": 215,
              "isExported": false
            },
            {
              "name": "detectCustomRequests",
              "type": "unknown",
              "line": 227,
              "isExported": false
            },
            {
              "name": "analyzeTechnicalComplexity",
              "type": "unknown",
              "line": 249,
              "isExported": false
            },
            {
              "name": "calculateConfidence",
              "type": "unknown",
              "line": 266,
              "isExported": false
            },
            {
              "name": "prepareEscalationData",
              "type": "unknown",
              "line": 281,
              "isExported": false
            },
            {
              "name": "assessAgentCapabilities",
              "type": "unknown",
              "line": 300,
              "isExported": false
            },
            {
              "name": "loadPriceDatabase",
              "type": "unknown",
              "line": 323,
              "isExported": false
            },
            {
              "name": "parseMarkdownPrices",
              "type": "unknown",
              "line": 342,
              "isExported": false
            },
            {
              "name": "extractBrand",
              "type": "unknown",
              "line": 367,
              "isExported": false
            },
            {
              "name": "checkModelInDatabase",
              "type": "unknown",
              "line": 377,
              "isExported": false
            },
            {
              "name": "findPriceInDatabase",
              "type": "unknown",
              "line": 390,
              "isExported": false
            },
            {
              "name": "normalizeModel",
              "type": "unknown",
              "line": 402,
              "isExported": false
            },
            {
              "name": "detectServiceType",
              "type": "unknown",
              "line": 406,
              "isExported": false
            },
            {
              "name": "containsTechnicalTerms",
              "type": "unknown",
              "line": 414,
              "isExported": false
            },
            {
              "name": "isComplexProblem",
              "type": "unknown",
              "line": 419,
              "isExported": false
            },
            {
              "name": "canProvideServiceInfo",
              "type": "unknown",
              "line": 424,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 429,
              "isExported": false
            },
            {
              "name": "setUncertaintyThreshold",
              "type": "unknown",
              "line": 438,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 445,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "UncertaintyDetector",
              "extends": null,
              "line": 17,
              "isExported": false,
              "methods": [
                {
                  "name": "analyzeQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectUncertaintyIndicators",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeDeviceModel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeQueryComplexity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzePriceAvailability",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectCustomRequests",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeTechnicalComplexity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateConfidence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "prepareEscalationData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "assessAgentCapabilities",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "loadPriceDatabase",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseMarkdownPrices",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractBrand",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkModelInDatabase",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findPriceInDatabase",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeModel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectServiceType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "containsTechnicalTerms",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isComplexProblem",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "canProvideServiceInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "setUncertaintyThreshold",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 11,
              "isLocal": false
            },
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 12,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "uncertaintyDetector",
              "type": "commonjs",
              "line": 452
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": [
        {
          "name": "Grupo 1",
          "files": [
            {
              "name": "AdaptiveLearningEngine.js",
              "path": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
              "size": 19103,
              "lines": 544,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 18,
                  "isExported": false
                },
                {
                  "name": "recordAdminDecision",
                  "type": "unknown",
                  "line": 40,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 75,
                  "isExported": false
                },
                {
                  "name": "checkForAutoDecision",
                  "type": "unknown",
                  "line": 85,
                  "isExported": false
                },
                {
                  "name": "checkForNewAutoDecision",
                  "type": "unknown",
                  "line": 108,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 111,
                  "isExported": false
                },
                {
                  "name": "analyzeDecisionConsistency",
                  "type": "unknown",
                  "line": 146,
                  "isExported": false
                },
                {
                  "name": "requestAutoDecisionApproval",
                  "type": "unknown",
                  "line": 189,
                  "isExported": false
                },
                {
                  "name": "formatApprovalRequest",
                  "type": "unknown",
                  "line": 209,
                  "isExported": false
                },
                {
                  "name": "handleApprovalResponse",
                  "type": "unknown",
                  "line": 232,
                  "isExported": false
                },
                {
                  "name": "approveAutoDecision",
                  "type": "unknown",
                  "line": 248,
                  "isExported": false
                },
                {
                  "name": "rejectAutoDecision",
                  "type": "unknown",
                  "line": 284,
                  "isExported": false
                },
                {
                  "name": "generateSituationPattern",
                  "type": "unknown",
                  "line": 303,
                  "isExported": false
                },
                {
                  "name": "normalizeResponse",
                  "type": "unknown",
                  "line": 346,
                  "isExported": false
                },
                {
                  "name": "normalizeDeviceModel",
                  "type": "unknown",
                  "line": 359,
                  "isExported": false
                },
                {
                  "name": "categorizeTimeOfDay",
                  "type": "unknown",
                  "line": 371,
                  "isExported": false
                },
                {
                  "name": "describeSituationFromPattern",
                  "type": "unknown",
                  "line": 383,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 390,
                  "isExported": false
                },
                {
                  "name": "saveDecisionToDatabase",
                  "type": "unknown",
                  "line": 419,
                  "isExported": false
                },
                {
                  "name": "saveAutoDecisionToDatabase",
                  "type": "unknown",
                  "line": 435,
                  "isExported": false
                },
                {
                  "name": "markDecisionSuccess",
                  "type": "unknown",
                  "line": 451,
                  "isExported": false
                },
                {
                  "name": "updateAccuracyMetrics",
                  "type": "unknown",
                  "line": 474,
                  "isExported": false
                },
                {
                  "name": "forEach",
                  "type": "arrow",
                  "line": 479,
                  "isExported": false
                },
                {
                  "name": "getMetrics",
                  "type": "unknown",
                  "line": 497,
                  "isExported": false
                },
                {
                  "name": "getPendingApprovals",
                  "type": "unknown",
                  "line": 510,
                  "isExported": false
                },
                {
                  "name": "getActiveAutoDecisions",
                  "type": "unknown",
                  "line": 518,
                  "isExported": false
                },
                {
                  "name": "shutdown",
                  "type": "unknown",
                  "line": 531,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "AdaptiveLearningEngine",
                  "extends": null,
                  "line": 17,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "recordAdminDecision",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkForAutoDecision",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkForNewAutoDecision",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeDecisionConsistency",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "requestAutoDecisionApproval",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "formatApprovalRequest",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "handleApprovalResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "approveAutoDecision",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "rejectAutoDecision",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateSituationPattern",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeDeviceModel",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "categorizeTimeOfDay",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "describeSituationFromPattern",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "saveDecisionToDatabase",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "saveAutoDecisionToDatabase",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "markDecisionSuccess",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateAccuracyMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "forEach",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getPendingApprovals",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getActiveAutoDecisions",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "shutdown",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "../../database/pg",
                  "default": null,
                  "named": [
                    "initializeDatabase"
                  ],
                  "line": 11,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "adaptiveLearningEngine",
                  "type": "commonjs",
                  "line": 543
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "AdminEscalationSystem.js",
              "path": "src\\core\\intelligence\\AdminEscalationSystem.js",
              "size": 16512,
              "lines": 407,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 22,
                  "isExported": false
                },
                {
                  "name": "needsEscalation",
                  "type": "unknown",
                  "line": 44,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 60,
                  "isExported": false
                },
                {
                  "name": "escalateToAdmin",
                  "type": "unknown",
                  "line": 76,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 89,
                  "isExported": false
                },
                {
                  "name": "processEscalation",
                  "type": "unknown",
                  "line": 102,
                  "isExported": false
                },
                {
                  "name": "handleAdminResponse",
                  "type": "unknown",
                  "line": 142,
                  "isExported": false
                },
                {
                  "name": "formulateNaturalResponse",
                  "type": "unknown",
                  "line": 184,
                  "isExported": false
                },
                {
                  "name": "cleanAdminResponse",
                  "type": "unknown",
                  "line": 205,
                  "isExported": false
                },
                {
                  "name": "setupAdminTimeout",
                  "type": "unknown",
                  "line": 217,
                  "isExported": false
                },
                {
                  "name": "handleAdminTimeout",
                  "type": "unknown",
                  "line": 230,
                  "isExported": false
                },
                {
                  "name": "clearAdminTimeout",
                  "type": "unknown",
                  "line": 264,
                  "isExported": false
                },
                {
                  "name": "enqueueEscalation",
                  "type": "unknown",
                  "line": 278,
                  "isExported": false
                },
                {
                  "name": "processNextInQueue",
                  "type": "unknown",
                  "line": 291,
                  "isExported": false
                },
                {
                  "name": "generateConsultaId",
                  "type": "unknown",
                  "line": 302,
                  "isExported": false
                },
                {
                  "name": "getCurrentEscalation",
                  "type": "unknown",
                  "line": 306,
                  "isExported": false
                },
                {
                  "name": "releaseAdmin",
                  "type": "unknown",
                  "line": 312,
                  "isExported": false
                },
                {
                  "name": "recordSuccessfulEscalation",
                  "type": "unknown",
                  "line": 316,
                  "isExported": false
                },
                {
                  "name": "formatAdminMessage",
                  "type": "unknown",
                  "line": 333,
                  "isExported": false
                },
                {
                  "name": "sendToAdmin",
                  "type": "unknown",
                  "line": 352,
                  "isExported": false
                },
                {
                  "name": "getCustomerWaitMessage",
                  "type": "unknown",
                  "line": 366,
                  "isExported": false
                },
                {
                  "name": "getEscalationReason",
                  "type": "unknown",
                  "line": 373,
                  "isExported": false
                },
                {
                  "name": "getMetrics",
                  "type": "unknown",
                  "line": 382,
                  "isExported": false
                },
                {
                  "name": "shutdown",
                  "type": "unknown",
                  "line": 393,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "AdminEscalationSystem",
                  "extends": null,
                  "line": 21,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "needsEscalation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "escalateToAdmin",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processEscalation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "handleAdminResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "formulateNaturalResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanAdminResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "setupAdminTimeout",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "handleAdminTimeout",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "clearAdminTimeout",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "enqueueEscalation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processNextInQueue",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateConsultaId",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getCurrentEscalation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "releaseAdmin",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordSuccessfulEscalation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "formatAdminMessage",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "sendToAdmin",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getCustomerWaitMessage",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getEscalationReason",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "shutdown",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "../../utils/config",
                  "default": "config",
                  "named": [],
                  "line": 11,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "adminEscalationSystem",
                  "type": "commonjs",
                  "line": 406
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "ContextAwareResponseGenerator.js",
              "path": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
              "size": 47248,
              "lines": 1186,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "generateResponse",
                  "type": "unknown",
                  "line": 49,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 99,
                  "isExported": false
                },
                {
                  "name": "analyzeClientContext",
                  "type": "unknown",
                  "line": 122,
                  "isExported": false
                },
                {
                  "name": "updateClientContext",
                  "type": "unknown",
                  "line": 166,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 176,
                  "isExported": false
                },
                {
                  "name": "determineResponseType",
                  "type": "unknown",
                  "line": 223,
                  "isExported": false
                },
                {
                  "name": "getTemporalContext",
                  "type": "unknown",
                  "line": 262,
                  "isExported": false
                },
                {
                  "name": "createPersonalizedResponse",
                  "type": "unknown",
                  "line": 305,
                  "isExported": false
                },
                {
                  "name": "createPersonalizationVariables",
                  "type": "unknown",
                  "line": 366,
                  "isExported": false
                },
                {
                  "name": "getResponseTemplate",
                  "type": "unknown",
                  "line": 433,
                  "isExported": false
                },
                {
                  "name": "populateTemplate",
                  "type": "unknown",
                  "line": 449,
                  "isExported": false
                },
                {
                  "name": "applyPersonalityStyle",
                  "type": "unknown",
                  "line": 473,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 477,
                  "isExported": false
                },
                {
                  "name": "addContextualElements",
                  "type": "unknown",
                  "line": 514,
                  "isExported": false
                },
                {
                  "name": "updateConversationMemory",
                  "type": "unknown",
                  "line": 545,
                  "isExported": false
                },
                {
                  "name": "getConversationHistory",
                  "type": "unknown",
                  "line": 569,
                  "isExported": false
                },
                {
                  "name": "updateMetrics",
                  "type": "unknown",
                  "line": 578,
                  "isExported": false
                },
                {
                  "name": "generateFallbackResponse",
                  "type": "unknown",
                  "line": 602,
                  "isExported": false
                },
                {
                  "name": "extractDeviceType",
                  "type": "unknown",
                  "line": 622,
                  "isExported": false
                },
                {
                  "name": "extractServiceType",
                  "type": "unknown",
                  "line": 640,
                  "isExported": false
                },
                {
                  "name": "analyzeCommunicationStyle",
                  "type": "unknown",
                  "line": 657,
                  "isExported": false
                },
                {
                  "name": "initializeTemplates",
                  "type": "unknown",
                  "line": 672,
                  "isExported": false
                },
                {
                  "name": "loadBusinessContext",
                  "type": "unknown",
                  "line": 745,
                  "isExported": false
                },
                {
                  "name": "addAdditionalTemplates",
                  "type": "unknown",
                  "line": 774,
                  "isExported": false
                },
                {
                  "name": "enrichClientBehavior",
                  "type": "unknown",
                  "line": 881,
                  "isExported": false
                },
                {
                  "name": "analyzeSentiment",
                  "type": "unknown",
                  "line": 919,
                  "isExported": false
                },
                {
                  "name": "applySentimentAdjustments",
                  "type": "unknown",
                  "line": 950,
                  "isExported": false
                },
                {
                  "name": "getContextStats",
                  "type": "unknown",
                  "line": 967,
                  "isExported": false
                },
                {
                  "name": "getMetrics",
                  "type": "unknown",
                  "line": 1021,
                  "isExported": false
                },
                {
                  "name": "cleanupOldData",
                  "type": "unknown",
                  "line": 1043,
                  "isExported": false
                },
                {
                  "name": "exportContextData",
                  "type": "unknown",
                  "line": 1068,
                  "isExported": false
                },
                {
                  "name": "importContextData",
                  "type": "unknown",
                  "line": 1100,
                  "isExported": false
                },
                {
                  "name": "optimizeTemplates",
                  "type": "unknown",
                  "line": 1137,
                  "isExported": false
                },
                {
                  "name": "generateOptimizationSuggestions",
                  "type": "unknown",
                  "line": 1167,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ContextAwareResponseGenerator",
                  "extends": null,
                  "line": 20,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "generateResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeClientContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateClientContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "determineResponseType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getTemporalContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createPersonalizedResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createPersonalizationVariables",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getResponseTemplate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "populateTemplate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "applyPersonalityStyle",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "addContextualElements",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateConversationMemory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getConversationHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateFallbackResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractDeviceType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractServiceType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeCommunicationStyle",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "initializeTemplates",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "loadBusinessContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "addAdditionalTemplates",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "enrichClientBehavior",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeSentiment",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "applySentimentAdjustments",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getContextStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanupOldData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "exportContextData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "importContextData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "optimizeTemplates",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateOptimizationSuggestions",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "../../utils/config",
                  "default": "config",
                  "named": [],
                  "line": 11,
                  "isLocal": true
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 12,
                  "isLocal": false
                },
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 13,
                  "isLocal": false
                }
              ],
              "exports": [
                {
                  "name": "ContextAwareResponseGenerator",
                  "type": "commonjs",
                  "line": 1185
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "MultiModalReasoningEngine.js",
              "path": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
              "size": 18645,
              "lines": 478,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "processQuery",
                  "type": "unknown",
                  "line": 48,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 89,
                  "isExported": false
                },
                {
                  "name": "classifyQuery",
                  "type": "unknown",
                  "line": 110,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 121,
                  "isExported": false
                },
                {
                  "name": "analyzeTextComplexity",
                  "type": "unknown",
                  "line": 153,
                  "isExported": false
                },
                {
                  "name": "containsTechnicalTerms",
                  "type": "unknown",
                  "line": 181,
                  "isExported": false
                },
                {
                  "name": "selectReasoningStrategy",
                  "type": "unknown",
                  "line": 196,
                  "isExported": false
                },
                {
                  "name": "executeReasoning",
                  "type": "unknown",
                  "line": 213,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 230,
                  "isExported": false
                },
                {
                  "name": "executeReasoningStep",
                  "type": "unknown",
                  "line": 250,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 255,
                  "isExported": false
                },
                {
                  "name": "performTextAnalysis",
                  "type": "unknown",
                  "line": 285,
                  "isExported": false
                },
                {
                  "name": "performImageAnalysis",
                  "type": "unknown",
                  "line": 296,
                  "isExported": false
                },
                {
                  "name": "performKnowledgeLookup",
                  "type": "unknown",
                  "line": 308,
                  "isExported": false
                },
                {
                  "name": "performPriceAnalysis",
                  "type": "unknown",
                  "line": 320,
                  "isExported": false
                },
                {
                  "name": "performContextIntegration",
                  "type": "unknown",
                  "line": 332,
                  "isExported": false
                },
                {
                  "name": "performSynthesis",
                  "type": "unknown",
                  "line": 345,
                  "isExported": false
                },
                {
                  "name": "assessConfidence",
                  "type": "unknown",
                  "line": 358,
                  "isExported": false
                },
                {
                  "name": "decideAction",
                  "type": "unknown",
                  "line": 369,
                  "isExported": false
                },
                {
                  "name": "calculateOverallConfidence",
                  "type": "unknown",
                  "line": 385,
                  "isExported": false
                },
                {
                  "name": "generateConclusions",
                  "type": "unknown",
                  "line": 393,
                  "isExported": false
                },
                {
                  "name": "formulateReasoning",
                  "type": "unknown",
                  "line": 405,
                  "isExported": false
                },
                {
                  "name": "updateMetrics",
                  "type": "unknown",
                  "line": 410,
                  "isExported": false
                },
                {
                  "name": "initializeReasoningStrategies",
                  "type": "unknown",
                  "line": 429,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "MultiModalReasoningEngine",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "processQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "classifyQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeTextComplexity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "containsTechnicalTerms",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "selectReasoningStrategy",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "executeReasoning",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "executeReasoningStep",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performTextAnalysis",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performImageAnalysis",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performKnowledgeLookup",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performPriceAnalysis",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performContextIntegration",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performSynthesis",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "assessConfidence",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "decideAction",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateOverallConfidence",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateConclusions",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "formulateReasoning",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "initializeReasoningStrategies",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "../../utils/config",
                  "default": "config",
                  "named": [],
                  "line": 11,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "multiModalReasoningEngine",
                  "type": "commonjs",
                  "line": 477
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "PredictiveAnalyticsEngine.js",
              "path": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
              "size": 14904,
              "lines": 324,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "generatePredictions",
                  "type": "unknown",
                  "line": 50,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 84,
                  "isExported": false
                },
                {
                  "name": "predictBehavior",
                  "type": "unknown",
                  "line": 100,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 111,
                  "isExported": false
                },
                {
                  "name": "predictNeeds",
                  "type": "unknown",
                  "line": 128,
                  "isExported": false
                },
                {
                  "name": "predictOptimalTiming",
                  "type": "unknown",
                  "line": 156,
                  "isExported": false
                },
                {
                  "name": "predictDeviceLifecycle",
                  "type": "unknown",
                  "line": 183,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 195,
                  "isExported": false
                },
                {
                  "name": "generateProactiveActions",
                  "type": "unknown",
                  "line": 218,
                  "isExported": false
                },
                {
                  "name": "initializePredictionModels",
                  "type": "unknown",
                  "line": 258,
                  "isExported": false
                },
                {
                  "name": "loadHistoricalTrends",
                  "type": "unknown",
                  "line": 262,
                  "isExported": false
                },
                {
                  "name": "aggregateInsights",
                  "type": "unknown",
                  "line": 268,
                  "isExported": false
                },
                {
                  "name": "generateRecommendations",
                  "type": "unknown",
                  "line": 282,
                  "isExported": false
                },
                {
                  "name": "calculateOverallConfidence",
                  "type": "unknown",
                  "line": 289,
                  "isExported": false
                },
                {
                  "name": "countHighConfidencePredictions",
                  "type": "unknown",
                  "line": 295,
                  "isExported": false
                },
                {
                  "name": "calculateContactProbability",
                  "type": "unknown",
                  "line": 300,
                  "isExported": false
                },
                {
                  "name": "predictPreferredTime",
                  "type": "unknown",
                  "line": 301,
                  "isExported": false
                },
                {
                  "name": "predictCommunicationStyle",
                  "type": "unknown",
                  "line": 302,
                  "isExported": false
                },
                {
                  "name": "predictUrgencyPattern",
                  "type": "unknown",
                  "line": 303,
                  "isExported": false
                },
                {
                  "name": "calculateServiceLoyalty",
                  "type": "unknown",
                  "line": 304,
                  "isExported": false
                },
                {
                  "name": "predictLikelyServices",
                  "type": "unknown",
                  "line": 305,
                  "isExported": false
                },
                {
                  "name": "predictUpgradeWindow",
                  "type": "unknown",
                  "line": 306,
                  "isExported": false
                },
                {
                  "name": "predictMaintenanceNeeds",
                  "type": "unknown",
                  "line": 307,
                  "isExported": false
                },
                {
                  "name": "estimateBudgetRange",
                  "type": "unknown",
                  "line": 308,
                  "isExported": false
                },
                {
                  "name": "analyzeBestHours",
                  "type": "unknown",
                  "line": 309,
                  "isExported": false
                },
                {
                  "name": "predictBestDays",
                  "type": "unknown",
                  "line": 310,
                  "isExported": false
                },
                {
                  "name": "estimateResponseExpectation",
                  "type": "unknown",
                  "line": 311,
                  "isExported": false
                },
                {
                  "name": "getSeasonalFactors",
                  "type": "unknown",
                  "line": 312,
                  "isExported": false
                },
                {
                  "name": "getGenericLifecycle",
                  "type": "unknown",
                  "line": 313,
                  "isExported": false
                },
                {
                  "name": "determineCurrentPhase",
                  "type": "unknown",
                  "line": 314,
                  "isExported": false
                },
                {
                  "name": "predictExpectedIssues",
                  "type": "unknown",
                  "line": 315,
                  "isExported": false
                },
                {
                  "name": "suggestMaintenanceSchedule",
                  "type": "unknown",
                  "line": 316,
                  "isExported": false
                },
                {
                  "name": "predictReplacementWindow",
                  "type": "unknown",
                  "line": 317,
                  "isExported": false
                },
                {
                  "name": "calculateProactiveConfidence",
                  "type": "unknown",
                  "line": 318,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "PredictiveAnalyticsEngine",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "generatePredictions",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictBehavior",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictNeeds",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictOptimalTiming",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictDeviceLifecycle",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateProactiveActions",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "initializePredictionModels",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "loadHistoricalTrends",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "aggregateInsights",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateRecommendations",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateOverallConfidence",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "countHighConfidencePredictions",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateContactProbability",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictPreferredTime",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictCommunicationStyle",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictUrgencyPattern",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateServiceLoyalty",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictLikelyServices",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictUpgradeWindow",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictMaintenanceNeeds",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "estimateBudgetRange",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeBestHours",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictBestDays",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "estimateResponseExpectation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getSeasonalFactors",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getGenericLifecycle",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "determineCurrentPhase",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictExpectedIssues",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "suggestMaintenanceSchedule",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "predictReplacementWindow",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateProactiveConfidence",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "../../utils/config",
                  "default": "config",
                  "named": [],
                  "line": 11,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "predictiveAnalyticsEngine",
                  "type": "commonjs",
                  "line": 323
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 2",
          "files": [
            {
              "name": "UncertaintyDetector.js",
              "path": "src\\core\\intelligence\\UncertaintyDetector.js",
              "size": 18237,
              "lines": 453,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 18,
                  "isExported": false
                },
                {
                  "name": "analyzeQuery",
                  "type": "unknown",
                  "line": 41,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 58,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 78,
                  "isExported": false
                },
                {
                  "name": "detectUncertaintyIndicators",
                  "type": "unknown",
                  "line": 89,
                  "isExported": false
                },
                {
                  "name": "analyzeDeviceModel",
                  "type": "unknown",
                  "line": 162,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 174,
                  "isExported": false
                },
                {
                  "name": "analyzeQueryComplexity",
                  "type": "unknown",
                  "line": 196,
                  "isExported": false
                },
                {
                  "name": "analyzePriceAvailability",
                  "type": "unknown",
                  "line": 215,
                  "isExported": false
                },
                {
                  "name": "detectCustomRequests",
                  "type": "unknown",
                  "line": 227,
                  "isExported": false
                },
                {
                  "name": "analyzeTechnicalComplexity",
                  "type": "unknown",
                  "line": 249,
                  "isExported": false
                },
                {
                  "name": "calculateConfidence",
                  "type": "unknown",
                  "line": 266,
                  "isExported": false
                },
                {
                  "name": "prepareEscalationData",
                  "type": "unknown",
                  "line": 281,
                  "isExported": false
                },
                {
                  "name": "assessAgentCapabilities",
                  "type": "unknown",
                  "line": 300,
                  "isExported": false
                },
                {
                  "name": "loadPriceDatabase",
                  "type": "unknown",
                  "line": 323,
                  "isExported": false
                },
                {
                  "name": "parseMarkdownPrices",
                  "type": "unknown",
                  "line": 342,
                  "isExported": false
                },
                {
                  "name": "extractBrand",
                  "type": "unknown",
                  "line": 367,
                  "isExported": false
                },
                {
                  "name": "checkModelInDatabase",
                  "type": "unknown",
                  "line": 377,
                  "isExported": false
                },
                {
                  "name": "findPriceInDatabase",
                  "type": "unknown",
                  "line": 390,
                  "isExported": false
                },
                {
                  "name": "normalizeModel",
                  "type": "unknown",
                  "line": 402,
                  "isExported": false
                },
                {
                  "name": "detectServiceType",
                  "type": "unknown",
                  "line": 406,
                  "isExported": false
                },
                {
                  "name": "containsTechnicalTerms",
                  "type": "unknown",
                  "line": 414,
                  "isExported": false
                },
                {
                  "name": "isComplexProblem",
                  "type": "unknown",
                  "line": 419,
                  "isExported": false
                },
                {
                  "name": "canProvideServiceInfo",
                  "type": "unknown",
                  "line": 424,
                  "isExported": false
                },
                {
                  "name": "getMetrics",
                  "type": "unknown",
                  "line": 429,
                  "isExported": false
                },
                {
                  "name": "setUncertaintyThreshold",
                  "type": "unknown",
                  "line": 438,
                  "isExported": false
                },
                {
                  "name": "shutdown",
                  "type": "unknown",
                  "line": 445,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "UncertaintyDetector",
                  "extends": null,
                  "line": 17,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "analyzeQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectUncertaintyIndicators",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeDeviceModel",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeQueryComplexity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzePriceAvailability",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectCustomRequests",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeTechnicalComplexity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateConfidence",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "prepareEscalationData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "assessAgentCapabilities",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "loadPriceDatabase",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseMarkdownPrices",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractBrand",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkModelInDatabase",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "findPriceInDatabase",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeModel",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectServiceType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "containsTechnicalTerms",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "isComplexProblem",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "canProvideServiceInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "setUncertaintyThreshold",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "shutdown",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 11,
                  "isLocal": false
                },
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 12,
                  "isLocal": false
                }
              ],
              "exports": [
                {
                  "name": "uncertaintyDetector",
                  "type": "commonjs",
                  "line": 452
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        }
      ]
    },
    {
      "path": "src\\core\\performance",
      "fileCount": 4,
      "files": [
        {
          "name": "ConcurrentProcessor.js",
          "path": "src\\core\\performance\\ConcurrentProcessor.js",
          "size": 13997,
          "lines": 477,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 9,
              "isExported": false
            },
            {
              "name": "initializeWorkerPool",
              "type": "unknown",
              "line": 45,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 46,
              "isExported": false
            },
            {
              "name": "executeTask",
              "type": "unknown",
              "line": 68,
              "isExported": false
            },
            {
              "name": "executeBatch",
              "type": "unknown",
              "line": 98,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 137,
              "isExported": false
            },
            {
              "name": "enqueueTask",
              "type": "unknown",
              "line": 150,
              "isExported": false
            },
            {
              "name": "processQueue",
              "type": "unknown",
              "line": 168,
              "isExported": false
            },
            {
              "name": "while",
              "type": "unknown",
              "line": 169,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 172,
              "isExported": false
            },
            {
              "name": "assignTaskToWorker",
              "type": "unknown",
              "line": 188,
              "isExported": false
            },
            {
              "name": "executeTaskInWorker",
              "type": "unknown",
              "line": 221,
              "isExported": false
            },
            {
              "name": "executeTaskDirect",
              "type": "unknown",
              "line": 243,
              "isExported": false
            },
            {
              "name": "handleTaskCompletion",
              "type": "unknown",
              "line": 269,
              "isExported": false
            },
            {
              "name": "findAvailableWorker",
              "type": "unknown",
              "line": 296,
              "isExported": false
            },
            {
              "name": "createOptimalBatches",
              "type": "unknown",
              "line": 312,
              "isExported": false
            },
            {
              "name": "findInsertionIndex",
              "type": "unknown",
              "line": 326,
              "isExported": false
            },
            {
              "name": "updateAverageExecutionTime",
              "type": "unknown",
              "line": 344,
              "isExported": false
            },
            {
              "name": "startMetricsCollection",
              "type": "unknown",
              "line": 352,
              "isExported": false
            },
            {
              "name": "collectMetrics",
              "type": "unknown",
              "line": 361,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 375,
              "isExported": false
            },
            {
              "name": "generateTaskId",
              "type": "unknown",
              "line": 390,
              "isExported": false
            },
            {
              "name": "generateBatchId",
              "type": "unknown",
              "line": 394,
              "isExported": false
            },
            {
              "name": "sleep",
              "type": "unknown",
              "line": 398,
              "isExported": false
            },
            {
              "name": "optimize",
              "type": "unknown",
              "line": 406,
              "isExported": false
            },
            {
              "name": "forEach",
              "type": "arrow",
              "line": 419,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 457,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ConcurrentProcessor",
              "extends": null,
              "line": 8,
              "isExported": true,
              "methods": [
                {
                  "name": "initializeWorkerPool",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeTask",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeBatch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enqueueTask",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processQueue",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "while",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "assignTaskToWorker",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeTaskInWorker",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeTaskDirect",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleTaskCompletion",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findAvailableWorker",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createOptimalBatches",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findInsertionIndex",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateAverageExecutionTime",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "startMetricsCollection",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "collectMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateTaskId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateBatchId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "sleep",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forEach",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "worker_threads",
              "default": null,
              "named": [
                "Worker"
              ],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "perf_hooks",
              "default": null,
              "named": [
                "performance"
              ],
              "line": 5,
              "isLocal": false
            },
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 6,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "ConcurrentProcessor",
              "type": "commonjs",
              "line": 476
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "MemoryManager.js",
          "path": "src\\core\\performance\\MemoryManager.js",
          "size": 11548,
          "lines": 391,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 8,
              "isExported": false
            },
            {
              "name": "initializeMemoryPools",
              "type": "unknown",
              "line": 42,
              "isExported": false
            },
            {
              "name": "allocateMemory",
              "type": "unknown",
              "line": 73,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 76,
              "isExported": false
            },
            {
              "name": "allocateFromPool",
              "type": "unknown",
              "line": 104,
              "isExported": false
            },
            {
              "name": "performIntelligentCleanup",
              "type": "unknown",
              "line": 144,
              "isExported": false
            },
            {
              "name": "cleanupPool",
              "type": "unknown",
              "line": 181,
              "isExported": false
            },
            {
              "name": "filter",
              "type": "arrow",
              "line": 186,
              "isExported": false
            },
            {
              "name": "forceGarbageCollection",
              "type": "unknown",
              "line": 211,
              "isExported": false
            },
            {
              "name": "getCurrentMemoryUsage",
              "type": "unknown",
              "line": 232,
              "isExported": false
            },
            {
              "name": "getAvailableMemory",
              "type": "unknown",
              "line": 242,
              "isExported": false
            },
            {
              "name": "getTotalSystemMemory",
              "type": "unknown",
              "line": 258,
              "isExported": false
            },
            {
              "name": "startMonitoring",
              "type": "unknown",
              "line": 266,
              "isExported": false
            },
            {
              "name": "monitorMemoryUsage",
              "type": "unknown",
              "line": 279,
              "isExported": false
            },
            {
              "name": "getMemoryMetrics",
              "type": "unknown",
              "line": 306,
              "isExported": false
            },
            {
              "name": "generateAllocationId",
              "type": "unknown",
              "line": 322,
              "isExported": false
            },
            {
              "name": "fallbackAllocation",
              "type": "unknown",
              "line": 326,
              "isExported": false
            },
            {
              "name": "optimizeForOperation",
              "type": "unknown",
              "line": 342,
              "isExported": false
            },
            {
              "name": "forceCleanup",
              "type": "unknown",
              "line": 355,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 375,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "MemoryManager",
              "extends": null,
              "line": 7,
              "isExported": true,
              "methods": [
                {
                  "name": "initializeMemoryPools",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "allocateMemory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "allocateFromPool",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performIntelligentCleanup",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanupPool",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "filter",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forceGarbageCollection",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCurrentMemoryUsage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getAvailableMemory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getTotalSystemMemory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "startMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "monitorMemoryUsage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMemoryMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateAllocationId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "fallbackAllocation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimizeForOperation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forceCleanup",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "perf_hooks",
              "default": null,
              "named": [
                "performance"
              ],
              "line": 5,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "MemoryManager",
              "type": "commonjs",
              "line": 390
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "PerformanceController.js",
          "path": "src\\core\\performance\\PerformanceController.js",
          "size": 12648,
          "lines": 390,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 10,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 37,
              "isExported": false
            },
            {
              "name": "initialize",
              "type": "unknown",
              "line": 46,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 58,
              "isExported": false
            },
            {
              "name": "initializeComponents",
              "type": "unknown",
              "line": 67,
              "isExported": false
            },
            {
              "name": "executeOptimizedQuery",
              "type": "unknown",
              "line": 92,
              "isExported": false
            },
            {
              "name": "executeConcurrentOperations",
              "type": "unknown",
              "line": 123,
              "isExported": false
            },
            {
              "name": "allocateOptimizedMemory",
              "type": "unknown",
              "line": 154,
              "isExported": false
            },
            {
              "name": "getPerformanceMetrics",
              "type": "unknown",
              "line": 166,
              "isExported": false
            },
            {
              "name": "updateMetrics",
              "type": "unknown",
              "line": 190,
              "isExported": false
            },
            {
              "name": "triggerPerformanceDegradation",
              "type": "unknown",
              "line": 208,
              "isExported": false
            },
            {
              "name": "startPerformanceMonitoring",
              "type": "unknown",
              "line": 221,
              "isExported": false
            },
            {
              "name": "performanceHealthCheck",
              "type": "unknown",
              "line": 230,
              "isExported": false
            },
            {
              "name": "executeSequential",
              "type": "unknown",
              "line": 246,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 249,
              "isExported": false
            },
            {
              "name": "optimizeOperation",
              "type": "unknown",
              "line": 267,
              "isExported": false
            },
            {
              "name": "activateEmergencyMode",
              "type": "unknown",
              "line": 287,
              "isExported": false
            },
            {
              "name": "deactivateEmergencyMode",
              "type": "unknown",
              "line": 300,
              "isExported": false
            },
            {
              "name": "optimize",
              "type": "unknown",
              "line": 314,
              "isExported": false
            },
            {
              "name": "getStatus",
              "type": "unknown",
              "line": 352,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 368,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "PerformanceController",
              "extends": null,
              "line": 9,
              "isExported": true,
              "methods": [
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initialize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializeComponents",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeOptimizedQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeConcurrentOperations",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "allocateOptimizedMemory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getPerformanceMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "triggerPerformanceDegradation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "startPerformanceMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performanceHealthCheck",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeSequential",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimizeOperation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "activateEmergencyMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "deactivateEmergencyMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./QueryOptimizer",
              "default": "QueryOptimizer",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "./MemoryManager",
              "default": "MemoryManager",
              "named": [],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "./ConcurrentProcessor",
              "default": "ConcurrentProcessor",
              "named": [],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "PerformanceController",
              "type": "commonjs",
              "line": 389
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "QueryOptimizer.js",
          "path": "src\\core\\performance\\QueryOptimizer.js",
          "size": 14745,
          "lines": 458,
          "functions": [
            {
              "name": "setMode",
              "type": "unknown",
              "line": 5,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 8,
              "isExported": false
            },
            {
              "name": "optimize",
              "type": "unknown",
              "line": 25,
              "isExported": false
            },
            {
              "name": "optimizeCacheContents",
              "type": "unknown",
              "line": 59,
              "isExported": false
            },
            {
              "name": "cleanupFrequencyMap",
              "type": "unknown",
              "line": 75,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 91,
              "isExported": false
            },
            {
              "name": "executeOptimizedQuery",
              "type": "unknown",
              "line": 128,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 161,
              "isExported": false
            },
            {
              "name": "findSemanticMatch",
              "type": "unknown",
              "line": 172,
              "isExported": false
            },
            {
              "name": "executeWithOptimization",
              "type": "unknown",
              "line": 193,
              "isExported": false
            },
            {
              "name": "preprocessQuery",
              "type": "unknown",
              "line": 210,
              "isExported": false
            },
            {
              "name": "calculateAdaptiveTTL",
              "type": "unknown",
              "line": 230,
              "isExported": false
            },
            {
              "name": "generateQueryKey",
              "type": "unknown",
              "line": 243,
              "isExported": false
            },
            {
              "name": "updatePerformanceMetrics",
              "type": "unknown",
              "line": 256,
              "isExported": false
            },
            {
              "name": "getPerformanceMetrics",
              "type": "unknown",
              "line": 267,
              "isExported": false
            },
            {
              "name": "hashString",
              "type": "unknown",
              "line": 282,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 284,
              "isExported": false
            },
            {
              "name": "updateFrequencyMap",
              "type": "unknown",
              "line": 292,
              "isExported": false
            },
            {
              "name": "createTimeoutPromise",
              "type": "unknown",
              "line": 297,
              "isExported": false
            },
            {
              "name": "enrichCachedResult",
              "type": "unknown",
              "line": 303,
              "isExported": false
            },
            {
              "name": "enrichResult",
              "type": "unknown",
              "line": 312,
              "isExported": false
            },
            {
              "name": "generateQueryVector",
              "type": "unknown",
              "line": 321,
              "isExported": false
            },
            {
              "name": "calculateSimilarity",
              "type": "unknown",
              "line": 326,
              "isExported": false
            },
            {
              "name": "extractContextualTerms",
              "type": "unknown",
              "line": 337,
              "isExported": false
            },
            {
              "name": "expandQueryWithContext",
              "type": "unknown",
              "line": 351,
              "isExported": false
            },
            {
              "name": "postProcessResult",
              "type": "unknown",
              "line": 361,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "QueryOptimizer",
              "extends": null,
              "line": 90,
              "isExported": true,
              "methods": [
                {
                  "name": "executeOptimizedQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findSemanticMatch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithOptimization",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "preprocessQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateAdaptiveTTL",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateQueryKey",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updatePerformanceMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getPerformanceMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "hashString",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateFrequencyMap",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createTimeoutPromise",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enrichCachedResult",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enrichResult",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateQueryVector",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSimilarity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractContextualTerms",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "expandQueryWithContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "postProcessResult",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "setMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimizeCacheContents",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanupFrequencyMap",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 87,
              "isLocal": true
            },
            {
              "source": "lru-cache",
              "default": "LRU",
              "named": [],
              "line": 88,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "QueryOptimizer",
              "type": "commonjs",
              "line": 457
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\core\\resilience",
      "fileCount": 5,
      "files": [
        {
          "name": "AdvancedCircuitBreaker.js",
          "path": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "size": 15575,
          "lines": 486,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 8,
              "isExported": false
            },
            {
              "name": "execute",
              "type": "unknown",
              "line": 67,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 85,
              "isExported": false
            },
            {
              "name": "checkCircuitState",
              "type": "unknown",
              "line": 95,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 98,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 108,
              "isExported": false
            },
            {
              "name": "executeWithMonitoring",
              "type": "unknown",
              "line": 130,
              "isExported": false
            },
            {
              "name": "handleSuccess",
              "type": "unknown",
              "line": 170,
              "isExported": false
            },
            {
              "name": "handleFailure",
              "type": "unknown",
              "line": 208,
              "isExported": false
            },
            {
              "name": "transitionToOpen",
              "type": "unknown",
              "line": 251,
              "isExported": false
            },
            {
              "name": "transitionToHalfOpen",
              "type": "unknown",
              "line": 276,
              "isExported": false
            },
            {
              "name": "transitionToClosed",
              "type": "unknown",
              "line": 298,
              "isExported": false
            },
            {
              "name": "shouldAdaptThreshold",
              "type": "unknown",
              "line": 321,
              "isExported": false
            },
            {
              "name": "adaptFailureThreshold",
              "type": "unknown",
              "line": 332,
              "isExported": false
            },
            {
              "name": "recordResponseTime",
              "type": "unknown",
              "line": 374,
              "isExported": false
            },
            {
              "name": "handleSlowResponse",
              "type": "unknown",
              "line": 395,
              "isExported": false
            },
            {
              "name": "startAdaptiveMonitoring",
              "type": "unknown",
              "line": 415,
              "isExported": false
            },
            {
              "name": "performHealthCheck",
              "type": "unknown",
              "line": 424,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 446,
              "isExported": false
            },
            {
              "name": "generateRequestId",
              "type": "unknown",
              "line": 460,
              "isExported": false
            },
            {
              "name": "forceState",
              "type": "unknown",
              "line": 467,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "AdvancedCircuitBreaker",
              "extends": "EventEmitter",
              "line": 7,
              "isExported": true,
              "methods": [
                {
                  "name": "execute",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkCircuitState",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "transitionToOpen",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "transitionToHalfOpen",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "transitionToClosed",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shouldAdaptThreshold",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "adaptFailureThreshold",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordResponseTime",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleSlowResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "startAdaptiveMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performHealthCheck",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateRequestId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forceState",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "events",
              "default": null,
              "named": [
                "EventEmitter"
              ],
              "line": 5,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "AdvancedCircuitBreaker",
              "type": "commonjs",
              "line": 485
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "GracefulDegradationManager.js",
          "path": "src\\core\\resilience\\GracefulDegradationManager.js",
          "size": 20699,
          "lines": 654,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 8,
              "isExported": false
            },
            {
              "name": "initializeServiceRegistry",
              "type": "unknown",
              "line": 60,
              "isExported": false
            },
            {
              "name": "registerService",
              "type": "unknown",
              "line": 87,
              "isExported": false
            },
            {
              "name": "reportServiceHealth",
              "type": "unknown",
              "line": 112,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 115,
              "isExported": false
            },
            {
              "name": "handleServiceFailure",
              "type": "unknown",
              "line": 152,
              "isExported": false
            },
            {
              "name": "handleServiceRecovery",
              "type": "unknown",
              "line": 176,
              "isExported": false
            },
            {
              "name": "applyServiceDegradation",
              "type": "unknown",
              "line": 198,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 199,
              "isExported": false
            },
            {
              "name": "handleCriticalServiceFailure",
              "type": "unknown",
              "line": 215,
              "isExported": false
            },
            {
              "name": "handleImportantServiceFailure",
              "type": "unknown",
              "line": 231,
              "isExported": false
            },
            {
              "name": "handleOptionalServiceFailure",
              "type": "unknown",
              "line": 249,
              "isExported": false
            },
            {
              "name": "increaseDegradationLevel",
              "type": "unknown",
              "line": 262,
              "isExported": false
            },
            {
              "name": "decreaseDegradationLevel",
              "type": "unknown",
              "line": 286,
              "isExported": false
            },
            {
              "name": "applyDegradationMode",
              "type": "unknown",
              "line": 310,
              "isExported": false
            },
            {
              "name": "activateFullOperation",
              "type": "unknown",
              "line": 330,
              "isExported": false
            },
            {
              "name": "activatePartialDegradation",
              "type": "unknown",
              "line": 352,
              "isExported": false
            },
            {
              "name": "activateMinimalOperation",
              "type": "unknown",
              "line": 370,
              "isExported": false
            },
            {
              "name": "activateCriticalMode",
              "type": "unknown",
              "line": 396,
              "isExported": false
            },
            {
              "name": "disableFeature",
              "type": "unknown",
              "line": 417,
              "isExported": false
            },
            {
              "name": "enableFeature",
              "type": "unknown",
              "line": 435,
              "isExported": false
            },
            {
              "name": "isFeatureActive",
              "type": "unknown",
              "line": 453,
              "isExported": false
            },
            {
              "name": "evaluateSystemHealth",
              "type": "unknown",
              "line": 460,
              "isExported": false
            },
            {
              "name": "getUnhealthyServicesCount",
              "type": "unknown",
              "line": 488,
              "isExported": false
            },
            {
              "name": "adjustDegradationLevel",
              "type": "unknown",
              "line": 497,
              "isExported": false
            },
            {
              "name": "getDegradationMode",
              "type": "unknown",
              "line": 513,
              "isExported": false
            },
            {
              "name": "activateEmergencyProtocols",
              "type": "unknown",
              "line": 521,
              "isExported": false
            },
            {
              "name": "initiateEmergencyRecovery",
              "type": "unknown",
              "line": 540,
              "isExported": false
            },
            {
              "name": "initiateServiceRecovery",
              "type": "unknown",
              "line": 559,
              "isExported": false
            },
            {
              "name": "canEnableFeature",
              "type": "unknown",
              "line": 582,
              "isExported": false
            },
            {
              "name": "startHealthMonitoring",
              "type": "unknown",
              "line": 605,
              "isExported": false
            },
            {
              "name": "performHealthCheck",
              "type": "unknown",
              "line": 614,
              "isExported": false
            },
            {
              "name": "getSystemStatus",
              "type": "unknown",
              "line": 635,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "GracefulDegradationManager",
              "extends": "EventEmitter",
              "line": 7,
              "isExported": true,
              "methods": [
                {
                  "name": "initializeServiceRegistry",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "registerService",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "reportServiceHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleServiceFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleServiceRecovery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "applyServiceDegradation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleCriticalServiceFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleImportantServiceFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleOptionalServiceFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "increaseDegradationLevel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "decreaseDegradationLevel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "applyDegradationMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "activateFullOperation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "activatePartialDegradation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "activateMinimalOperation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "activateCriticalMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "disableFeature",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enableFeature",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isFeatureActive",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "evaluateSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getUnhealthyServicesCount",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "adjustDegradationLevel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getDegradationMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "activateEmergencyProtocols",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initiateEmergencyRecovery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initiateServiceRecovery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "canEnableFeature",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "startHealthMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performHealthCheck",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSystemStatus",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "events",
              "default": null,
              "named": [
                "EventEmitter"
              ],
              "line": 5,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "GracefulDegradationManager",
              "type": "commonjs",
              "line": 653
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "HealthMonitoringSystem.js",
          "path": "src\\core\\resilience\\HealthMonitoringSystem.js",
          "size": 5054,
          "lines": 132,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 12,
              "isExported": false
            },
            {
              "name": "startMonitoring",
              "type": "unknown",
              "line": 22,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 23,
              "isExported": false
            },
            {
              "name": "stopMonitoring",
              "type": "unknown",
              "line": 34,
              "isExported": false
            },
            {
              "name": "runHealthChecks",
              "type": "unknown",
              "line": 46,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 50,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 60,
              "isExported": false
            },
            {
              "name": "updateHealthStatus",
              "type": "unknown",
              "line": 89,
              "isExported": false
            },
            {
              "name": "analyzeTrends",
              "type": "unknown",
              "line": 109,
              "isExported": false
            },
            {
              "name": "getSystemHealth",
              "type": "unknown",
              "line": 125,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "HealthMonitoringSystem",
              "extends": null,
              "line": 11,
              "isExported": false,
              "methods": [
                {
                  "name": "startMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "stopMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "runHealthChecks",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateHealthStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeTrends",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 1,
              "isLocal": true
            },
            {
              "source": "../../services/serviceRegistry",
              "default": null,
              "named": [
                "services"
              ],
              "line": 2,
              "isLocal": true
            },
            {
              "source": "./SelfHealingManager",
              "default": "selfHealingManager",
              "named": [],
              "line": 3,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "healthMonitoringSystem",
              "type": "commonjs",
              "line": 132
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "ResilienceController.js",
          "path": "src\\core\\resilience\\ResilienceController.js",
          "size": 9774,
          "lines": 267,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 15,
              "isExported": false
            },
            {
              "name": "initialize",
              "type": "unknown",
              "line": 27,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 28,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 56,
              "isExported": false
            },
            {
              "name": "shutdown",
              "type": "unknown",
              "line": 66,
              "isExported": false
            },
            {
              "name": "executeWithProtection",
              "type": "unknown",
              "line": 94,
              "isExported": false
            },
            {
              "name": "reportFailure",
              "type": "unknown",
              "line": 121,
              "isExported": false
            },
            {
              "name": "activateDegradationMode",
              "type": "unknown",
              "line": 129,
              "isExported": false
            },
            {
              "name": "notifyHealthChange",
              "type": "unknown",
              "line": 140,
              "isExported": false
            },
            {
              "name": "getOverallHealth",
              "type": "unknown",
              "line": 160,
              "isExported": false
            },
            {
              "name": "getSystemHealth",
              "type": "unknown",
              "line": 181,
              "isExported": false
            },
            {
              "name": "getStatus",
              "type": "unknown",
              "line": 194,
              "isExported": false
            },
            {
              "name": "optimize",
              "type": "unknown",
              "line": 210,
              "isExported": false
            },
            {
              "name": "getCircuitBreaker",
              "type": "unknown",
              "line": 251,
              "isExported": false
            },
            {
              "name": "getGracefulDegradationManager",
              "type": "unknown",
              "line": 259,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ResilienceController",
              "extends": null,
              "line": 14,
              "isExported": false,
              "methods": [
                {
                  "name": "initialize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shutdown",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithProtection",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "reportFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "activateDegradationMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "notifyHealthChange",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getOverallHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "optimize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCircuitBreaker",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getGracefulDegradationManager",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 1,
              "isLocal": true
            },
            {
              "source": "./HealthMonitoringSystem",
              "default": "healthMonitoringSystem",
              "named": [],
              "line": 2,
              "isLocal": true
            },
            {
              "source": "./SelfHealingManager",
              "default": "selfHealingManager",
              "named": [],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "./AdvancedCircuitBreaker",
              "default": "AdvancedCircuitBreaker",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "./GracefulDegradationManager",
              "default": "GracefulDegradationManager",
              "named": [],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../../utils/config",
              "default": "config",
              "named": [],
              "line": 6,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "resilienceController",
              "type": "commonjs",
              "line": 266
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "SelfHealingManager.js",
          "path": "src\\core\\resilience\\SelfHealingManager.js",
          "size": 5739,
          "lines": 127,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 11,
              "isExported": false
            },
            {
              "name": "reportFailure",
              "type": "unknown",
              "line": 23,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 29,
              "isExported": false
            },
            {
              "name": "initiateRecovery",
              "type": "unknown",
              "line": 53,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 72,
              "isExported": false
            },
            {
              "name": "restartService",
              "type": "unknown",
              "line": 84,
              "isExported": false
            },
            {
              "name": "injectDependencies",
              "type": "unknown",
              "line": 102,
              "isExported": false
            },
            {
              "name": "validateRecovery",
              "type": "unknown",
              "line": 113,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "SelfHealingManager",
              "extends": null,
              "line": 10,
              "isExported": false,
              "methods": [
                {
                  "name": "reportFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initiateRecovery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "restartService",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "injectDependencies",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateRecovery",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 1,
              "isLocal": true
            },
            {
              "source": "../../services/serviceRegistry",
              "default": null,
              "named": [
                "services",
                "restartService"
              ],
              "line": 2,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "selfHealingManager",
              "type": "commonjs",
              "line": 127
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\database",
      "fileCount": 1,
      "files": [
        {
          "name": "pg.js",
          "path": "src\\database\\pg.js",
          "size": 14010,
          "lines": 384,
          "functions": [
            {
              "name": "initializeDatabase",
              "type": "function",
              "line": 20,
              "isExported": false
            },
            {
              "name": "inspectAndNormalizeSchema",
              "type": "function",
              "line": 45,
              "isExported": false
            },
            {
              "name": "normalizeAdminUsersColumns",
              "type": "function",
              "line": 82,
              "isExported": false
            },
            {
              "name": "createBasicTablesWithInspection",
              "type": "function",
              "line": 115,
              "isExported": false
            },
            {
              "name": "createAdminUsersTableSafely",
              "type": "function",
              "line": 182,
              "isExported": false
            },
            {
              "name": "insertDefaultAdminSafely",
              "type": "function",
              "line": 216,
              "isExported": false
            },
            {
              "name": "verifyTables",
              "type": "function",
              "line": 250,
              "isExported": false
            },
            {
              "name": "getClientByNumber",
              "type": "function",
              "line": 285,
              "isExported": false
            },
            {
              "name": "addOrUpdateClient",
              "type": "function",
              "line": 298,
              "isExported": false
            },
            {
              "name": "buildConversationalContext",
              "type": "function",
              "line": 325,
              "isExported": false
            },
            {
              "name": "getTimeFrame",
              "type": "function",
              "line": 361,
              "isExported": false
            },
            {
              "name": "closeDatabase",
              "type": "function",
              "line": 367,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 39,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 58,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 254,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "pg",
              "default": null,
              "named": [
                "Pool"
              ],
              "line": 1,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 2,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    pool,\n    initializeDatabase,\n    getClientByNumber,\n    addOrUpdateClient,\n    buildConversationalContext,\n    closeDatabase\n}",
              "type": "commonjs",
              "line": 376
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\excel",
      "fileCount": 2,
      "files": [
        {
          "name": "processor.js",
          "path": "src\\excel\\processor.js",
          "size": 3733,
          "lines": 116,
          "functions": [
            {
              "name": "validateColumns",
              "type": "function",
              "line": 11,
              "isExported": false
            },
            {
              "name": "insertDataIntoDB",
              "type": "function",
              "line": 38,
              "isExported": false
            },
            {
              "name": "processExcelFile",
              "type": "function",
              "line": 83,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 20,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 27,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 69,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "xlsx",
              "default": "xlsx",
              "named": [],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    processExcelFile,\n    validateColumns, // Exportado para pruebas unitarias si es necesario\n}",
              "type": "commonjs",
              "line": 112
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "validator.js",
          "path": "src\\excel\\validator.js",
          "size": 32,
          "lines": 1,
          "functions": [],
          "classes": [],
          "imports": [],
          "exports": [],
          "hasExports": false,
          "isModule": false
        }
      ],
      "groups": []
    },
    {
      "path": "src\\monitoring",
      "fileCount": 1,
      "files": [
        {
          "name": "intelligentMonitor.js",
          "path": "src\\monitoring\\intelligentMonitor.js",
          "size": 1493,
          "lines": 51,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 9,
              "isExported": false
            },
            {
              "name": "analyze",
              "type": "unknown",
              "line": 23,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 25,
              "isExported": false
            },
            {
              "name": "selfHeal",
              "type": "unknown",
              "line": 37,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "IntelligentMonitor",
              "extends": "EventEmitter",
              "line": 8,
              "isExported": false,
              "methods": [
                {
                  "name": "analyze",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "selfHeal",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "events",
              "default": "EventEmitter",
              "named": [],
              "line": 5,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 6,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    IntelligentMonitor,\n    intelligentMonitor\n}",
              "type": "commonjs",
              "line": 47
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\responses",
      "fileCount": 1,
      "files": [
        {
          "name": "templates.js",
          "path": "src\\responses\\templates.js",
          "size": 5895,
          "lines": 148,
          "functions": [
            {
              "name": "getGreeting",
              "type": "function",
              "line": 7,
              "isExported": false
            },
            {
              "name": "getAIPresentation",
              "type": "function",
              "line": 18,
              "isExported": false
            },
            {
              "name": "welcomeNewUser",
              "type": "function",
              "line": 26,
              "isExported": false
            },
            {
              "name": "welcomeBackUser",
              "type": "function",
              "line": 35,
              "isExported": false
            },
            {
              "name": "askForName",
              "type": "function",
              "line": 43,
              "isExported": false
            },
            {
              "name": "formatRepairInfo",
              "type": "function",
              "line": 52,
              "isExported": false
            },
            {
              "name": "notFound",
              "type": "function",
              "line": 75,
              "isExported": false
            },
            {
              "name": "generalError",
              "type": "function",
              "line": 83,
              "isExported": false
            },
            {
              "name": "adminModeActivated",
              "type": "function",
              "line": 88,
              "isExported": false
            },
            {
              "name": "adminModeDeactivated",
              "type": "function",
              "line": 92,
              "isExported": false
            },
            {
              "name": "adminHelp",
              "type": "function",
              "line": 96,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [],
          "exports": [
            {
              "name": "{\n    getGreeting,\n    getAIPresentation,\n    welcomeNewUser,\n    welcomeBackUser,\n    askForName,\n    formatRepairInfo,\n    notFound,\n    generalError,\n    adminModeActivated,\n    adminModeDeactivated,\n    adminHelp,\n}",
              "type": "commonjs",
              "line": 135
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\scripts",
      "fileCount": 13,
      "files": [
        {
          "name": "architectural_health_check.js",
          "path": "src\\scripts\\architectural_health_check.js",
          "size": 4919,
          "lines": 130,
          "functions": [
            {
              "name": "architecturalHealthCheck",
              "type": "function",
              "line": 6,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 20,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 27,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "pg",
              "default": null,
              "named": [
                "Pool"
              ],
              "line": 49,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "{ architecturalHealthCheck }",
              "type": "commonjs",
              "line": 130
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "clear_cache_collection.js",
          "path": "src\\scripts\\clear_cache_collection.js",
          "size": 1362,
          "lines": 29,
          "functions": [
            {
              "name": "clearCacheCollection",
              "type": "function",
              "line": 11,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 22,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [],
          "hasExports": false,
          "isModule": false
        },
        {
          "name": "convertMarkdownToPostgreSQL.js",
          "path": "src\\scripts\\convertMarkdownToPostgreSQL.js",
          "size": 16053,
          "lines": 467,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 25,
              "isExported": false
            },
            {
              "name": "executeMigration",
              "type": "unknown",
              "line": 46,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 64,
              "isExported": false
            },
            {
              "name": "verifyMarkdownFiles",
              "type": "unknown",
              "line": 73,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 82,
              "isExported": false
            },
            {
              "name": "cleanCurrentData",
              "type": "unknown",
              "line": 101,
              "isExported": false
            },
            {
              "name": "processAllMarkdownFiles",
              "type": "unknown",
              "line": 136,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 141,
              "isExported": false
            },
            {
              "name": "processSingleMarkdownFile",
              "type": "unknown",
              "line": 151,
              "isExported": false
            },
            {
              "name": "parseMarkdownTable",
              "type": "unknown",
              "line": 209,
              "isExported": false
            },
            {
              "name": "parseTableHeader",
              "type": "unknown",
              "line": 253,
              "isExported": false
            },
            {
              "name": "parseTableRow",
              "type": "unknown",
              "line": 276,
              "isExported": false
            },
            {
              "name": "parsePrice",
              "type": "unknown",
              "line": 330,
              "isExported": false
            },
            {
              "name": "normalizeModel",
              "type": "unknown",
              "line": 342,
              "isExported": false
            },
            {
              "name": "insertRecord",
              "type": "unknown",
              "line": 356,
              "isExported": false
            },
            {
              "name": "generateMigrationReport",
              "type": "unknown",
              "line": 399,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "MarkdownToPostgreSQLConverter",
              "extends": null,
              "line": 24,
              "isExported": true,
              "methods": [
                {
                  "name": "executeMigration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "verifyMarkdownFiles",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanCurrentData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processAllMarkdownFiles",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processSingleMarkdownFile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseMarkdownTable",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseTableHeader",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseTableRow",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parsePrice",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeModel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "insertRecord",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateMigrationReport",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 8,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 9,
              "isLocal": false
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 11,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "MarkdownToPostgreSQLConverter",
              "type": "commonjs",
              "line": 467
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "generateSQLFromExcel.js",
          "path": "src\\scripts\\generateSQLFromExcel.js",
          "size": 9376,
          "lines": 293,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 12,
              "isExported": false
            },
            {
              "name": "processTestFiles",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 31,
              "isExported": false
            },
            {
              "name": "processExcelFile",
              "type": "unknown",
              "line": 41,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 71,
              "isExported": false
            },
            {
              "name": "parseSheetData",
              "type": "unknown",
              "line": 79,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 91,
              "isExported": false
            },
            {
              "name": "looksLikeHeader",
              "type": "unknown",
              "line": 102,
              "isExported": false
            },
            {
              "name": "detectColumns",
              "type": "unknown",
              "line": 115,
              "isExported": false
            },
            {
              "name": "parseDataRowDirect",
              "type": "unknown",
              "line": 145,
              "isExported": false
            },
            {
              "name": "parseDataRow",
              "type": "unknown",
              "line": 187,
              "isExported": false
            },
            {
              "name": "normalizeModel",
              "type": "unknown",
              "line": 216,
              "isExported": false
            },
            {
              "name": "generateInsertSQL",
              "type": "unknown",
              "line": 229,
              "isExported": false
            },
            {
              "name": "generateSQLFile",
              "type": "unknown",
              "line": 242,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "SQLGenerator",
              "extends": null,
              "line": 11,
              "isExported": true,
              "methods": [
                {
                  "name": "processTestFiles",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processExcelFile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseSheetData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "looksLikeHeader",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectColumns",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseDataRowDirect",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseDataRow",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeModel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateInsertSQL",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateSQLFile",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "xlsx",
              "default": "XLSX",
              "named": [],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 5,
              "isLocal": false
            },
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 6,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "SQLGenerator",
              "type": "commonjs",
              "line": 293
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "importExcelData.js",
          "path": "src\\scripts\\importExcelData.js",
          "size": 9412,
          "lines": 298,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 13,
              "isExported": false
            },
            {
              "name": "importTestFiles",
              "type": "unknown",
              "line": 23,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 34,
              "isExported": false
            },
            {
              "name": "processExcelFile",
              "type": "unknown",
              "line": 44,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 76,
              "isExported": false
            },
            {
              "name": "parseSheetData",
              "type": "unknown",
              "line": 85,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 116,
              "isExported": false
            },
            {
              "name": "looksLikeHeader",
              "type": "unknown",
              "line": 127,
              "isExported": false
            },
            {
              "name": "detectColumns",
              "type": "unknown",
              "line": 144,
              "isExported": false
            },
            {
              "name": "parseDataRow",
              "type": "unknown",
              "line": 182,
              "isExported": false
            },
            {
              "name": "normalizeModel",
              "type": "unknown",
              "line": 213,
              "isExported": false
            },
            {
              "name": "insertRepairData",
              "type": "unknown",
              "line": 227,
              "isExported": false
            },
            {
              "name": "printSummary",
              "type": "unknown",
              "line": 267,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ExcelDataImporter",
              "extends": null,
              "line": 12,
              "isExported": true,
              "methods": [
                {
                  "name": "importTestFiles",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processExcelFile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseSheetData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "looksLikeHeader",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectColumns",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseDataRow",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeModel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "insertRepairData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "printSummary",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "xlsx",
              "default": "XLSX",
              "named": [],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 5,
              "isLocal": false
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "ExcelDataImporter",
              "type": "commonjs",
              "line": 298
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "index_intentions.js",
          "path": "src\\scripts\\index_intentions.js",
          "size": 2976,
          "lines": 87,
          "functions": [
            {
              "name": "indexIntentions",
              "type": "function",
              "line": 35,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 17,
              "isExported": false
            },
            {
              "name": "generate",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 28,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 40,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "LangChainEmbeddingAdapter",
              "extends": null,
              "line": 16,
              "isExported": false,
              "methods": [
                {
                  "name": "generate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "../services/embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine"
              ],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "../../intentions_dataset.json",
              "default": "intentionsData",
              "named": [],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 6,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{ indexIntentions }",
              "type": "commonjs",
              "line": 87
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "index_knowledge.js",
          "path": "src\\scripts\\index_knowledge.js",
          "size": 4941,
          "lines": 127,
          "functions": [
            {
              "name": "indexKnowledge",
              "type": "function",
              "line": 38,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 20,
              "isExported": false
            },
            {
              "name": "generate",
              "type": "unknown",
              "line": 24,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 31,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 44,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "LangChainEmbeddingAdapter",
              "extends": null,
              "line": 19,
              "isExported": false,
              "methods": [
                {
                  "name": "generate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "../services/embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine"
              ],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 7,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 8,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "{ indexKnowledge }",
              "type": "commonjs",
              "line": 127
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "index_markdown_prices.js",
          "path": "src\\scripts\\index_markdown_prices.js",
          "size": 9208,
          "lines": 254,
          "functions": [
            {
              "name": "processMarkdownFile",
              "type": "function",
              "line": 24,
              "isExported": false
            },
            {
              "name": "indexMarkdownPrices",
              "type": "function",
              "line": 100,
              "isExported": false
            },
            {
              "name": "cleanExistingPriceChunks",
              "type": "function",
              "line": 202,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 34,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 40,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 133,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 7,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 8,
              "isLocal": false
            },
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 9,
              "isLocal": false
            },
            {
              "source": "../services/embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine"
              ],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 11,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    indexMarkdownPrices,\n    cleanExistingPriceChunks,\n    processMarkdownFile\n}",
              "type": "commonjs",
              "line": 250
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "migrate_to_task_prefixes.js",
          "path": "src\\scripts\\migrate_to_task_prefixes.js",
          "size": 13113,
          "lines": 351,
          "functions": [
            {
              "name": "checkCollections",
              "type": "function",
              "line": 22,
              "isExported": false
            },
            {
              "name": "getCollectionStats",
              "type": "function",
              "line": 44,
              "isExported": false
            },
            {
              "name": "createCollectionBackup",
              "type": "function",
              "line": 74,
              "isExported": false
            },
            {
              "name": "planMigrationStrategy",
              "type": "function",
              "line": 128,
              "isExported": false
            },
            {
              "name": "executeMigrationStrategy",
              "type": "function",
              "line": 175,
              "isExported": false
            },
            {
              "name": "runMigration",
              "type": "function",
              "line": 258,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 35,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 84,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 98,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 185,
              "isExported": false
            },
            {
              "name": "then",
              "type": "arrow",
              "line": 331,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 5,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    runMigration,\n    checkCollections,\n    getCollectionStats,\n    createCollectionBackup\n}",
              "type": "commonjs",
              "line": 346
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "migrateConversations.js",
          "path": "src\\scripts\\migrateConversations.js",
          "size": 9293,
          "lines": 249,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 14,
              "isExported": false
            },
            {
              "name": "migrateAllConversations",
              "type": "unknown",
              "line": 23,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 30,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 44,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 51,
              "isExported": false
            },
            {
              "name": "fetchExistingConversations",
              "type": "unknown",
              "line": 62,
              "isExported": false
            },
            {
              "name": "processConversation",
              "type": "unknown",
              "line": 95,
              "isExported": false
            },
            {
              "name": "extractConversationData",
              "type": "unknown",
              "line": 133,
              "isExported": false
            },
            {
              "name": "updateConversationWithChunkId",
              "type": "unknown",
              "line": 192,
              "isExported": false
            },
            {
              "name": "printMigrationSummary",
              "type": "unknown",
              "line": 207,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ConversationMigrator",
              "extends": null,
              "line": 13,
              "isExported": true,
              "methods": [
                {
                  "name": "migrateAllConversations",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "fetchExistingConversations",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processConversation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractConversationData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateConversationWithChunkId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "printMigrationSummary",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../services/conversationMemory",
              "default": null,
              "named": [
                "conversationMemory"
              ],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "ConversationMigrator",
              "type": "commonjs",
              "line": 249
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "run_evals.js",
          "path": "src\\scripts\\run_evals.js",
          "size": 3228,
          "lines": 83,
          "functions": [
            {
              "name": "runEvals",
              "type": "function",
              "line": 12,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 32,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 42,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 51,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 5,
              "isLocal": false
            },
            {
              "source": "../services/simpleAgentExecutor",
              "default": null,
              "named": [
                "SimpleAgentExecutor"
              ],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "initializeDatabase"
              ],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 8,
              "isLocal": true
            }
          ],
          "exports": [],
          "hasExports": false,
          "isModule": false
        },
        {
          "name": "seed_proactive_knowledge.js",
          "path": "src\\scripts\\seed_proactive_knowledge.js",
          "size": 3687,
          "lines": 67,
          "functions": [
            {
              "name": "seedKnowledge",
              "type": "function",
              "line": 28,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 39,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 46,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 57,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 5,
              "isLocal": true
            }
          ],
          "exports": [],
          "hasExports": false,
          "isModule": false
        },
        {
          "name": "verifyMigration.js",
          "path": "src\\scripts\\verifyMigration.js",
          "size": 10326,
          "lines": 246,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 13,
              "isExported": false
            },
            {
              "name": "verifyMigration",
              "type": "unknown",
              "line": 24,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 41,
              "isExported": false
            },
            {
              "name": "verifyPostgreSQL",
              "type": "unknown",
              "line": 51,
              "isExported": false
            },
            {
              "name": "verifyChromaDB",
              "type": "unknown",
              "line": 96,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 104,
              "isExported": false
            },
            {
              "name": "verifyIntegration",
              "type": "unknown",
              "line": 126,
              "isExported": false
            },
            {
              "name": "printVerificationResults",
              "type": "unknown",
              "line": 168,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "MigrationVerifier",
              "extends": null,
              "line": 12,
              "isExported": true,
              "methods": [
                {
                  "name": "verifyMigration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "verifyPostgreSQL",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "verifyChromaDB",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "verifyIntegration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "printVerificationResults",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../services/conversationMemory",
              "default": null,
              "named": [
                "conversationMemory"
              ],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "../services/tools",
              "default": null,
              "named": [
                "tools"
              ],
              "line": 144,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "MigrationVerifier",
              "type": "commonjs",
              "line": 246
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": [
        {
          "name": "Grupo 1",
          "files": [
            {
              "name": "architectural_health_check.js",
              "path": "src\\scripts\\architectural_health_check.js",
              "size": 4919,
              "lines": 130,
              "functions": [
                {
                  "name": "architecturalHealthCheck",
                  "type": "function",
                  "line": 6,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 20,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 27,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "pg",
                  "default": null,
                  "named": [
                    "Pool"
                  ],
                  "line": 49,
                  "isLocal": false
                }
              ],
              "exports": [
                {
                  "name": "{ architecturalHealthCheck }",
                  "type": "commonjs",
                  "line": 130
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "clear_cache_collection.js",
              "path": "src\\scripts\\clear_cache_collection.js",
              "size": 1362,
              "lines": 29,
              "functions": [
                {
                  "name": "clearCacheCollection",
                  "type": "function",
                  "line": 11,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 22,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                }
              ],
              "exports": [],
              "hasExports": false,
              "isModule": false
            },
            {
              "name": "convertMarkdownToPostgreSQL.js",
              "path": "src\\scripts\\convertMarkdownToPostgreSQL.js",
              "size": 16053,
              "lines": 467,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 25,
                  "isExported": false
                },
                {
                  "name": "executeMigration",
                  "type": "unknown",
                  "line": 46,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 64,
                  "isExported": false
                },
                {
                  "name": "verifyMarkdownFiles",
                  "type": "unknown",
                  "line": 73,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 82,
                  "isExported": false
                },
                {
                  "name": "cleanCurrentData",
                  "type": "unknown",
                  "line": 101,
                  "isExported": false
                },
                {
                  "name": "processAllMarkdownFiles",
                  "type": "unknown",
                  "line": 136,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 141,
                  "isExported": false
                },
                {
                  "name": "processSingleMarkdownFile",
                  "type": "unknown",
                  "line": 151,
                  "isExported": false
                },
                {
                  "name": "parseMarkdownTable",
                  "type": "unknown",
                  "line": 209,
                  "isExported": false
                },
                {
                  "name": "parseTableHeader",
                  "type": "unknown",
                  "line": 253,
                  "isExported": false
                },
                {
                  "name": "parseTableRow",
                  "type": "unknown",
                  "line": 276,
                  "isExported": false
                },
                {
                  "name": "parsePrice",
                  "type": "unknown",
                  "line": 330,
                  "isExported": false
                },
                {
                  "name": "normalizeModel",
                  "type": "unknown",
                  "line": 342,
                  "isExported": false
                },
                {
                  "name": "insertRecord",
                  "type": "unknown",
                  "line": 356,
                  "isExported": false
                },
                {
                  "name": "generateMigrationReport",
                  "type": "unknown",
                  "line": 399,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "MarkdownToPostgreSQLConverter",
                  "extends": null,
                  "line": 24,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "executeMigration",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "verifyMarkdownFiles",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanCurrentData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processAllMarkdownFiles",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processSingleMarkdownFile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseMarkdownTable",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseTableHeader",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseTableRow",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parsePrice",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeModel",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "insertRecord",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateMigrationReport",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 8,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 9,
                  "isLocal": false
                },
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 11,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "MarkdownToPostgreSQLConverter",
                  "type": "commonjs",
                  "line": 467
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "generateSQLFromExcel.js",
              "path": "src\\scripts\\generateSQLFromExcel.js",
              "size": 9376,
              "lines": 293,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 12,
                  "isExported": false
                },
                {
                  "name": "processTestFiles",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 31,
                  "isExported": false
                },
                {
                  "name": "processExcelFile",
                  "type": "unknown",
                  "line": 41,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 71,
                  "isExported": false
                },
                {
                  "name": "parseSheetData",
                  "type": "unknown",
                  "line": 79,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 91,
                  "isExported": false
                },
                {
                  "name": "looksLikeHeader",
                  "type": "unknown",
                  "line": 102,
                  "isExported": false
                },
                {
                  "name": "detectColumns",
                  "type": "unknown",
                  "line": 115,
                  "isExported": false
                },
                {
                  "name": "parseDataRowDirect",
                  "type": "unknown",
                  "line": 145,
                  "isExported": false
                },
                {
                  "name": "parseDataRow",
                  "type": "unknown",
                  "line": 187,
                  "isExported": false
                },
                {
                  "name": "normalizeModel",
                  "type": "unknown",
                  "line": 216,
                  "isExported": false
                },
                {
                  "name": "generateInsertSQL",
                  "type": "unknown",
                  "line": 229,
                  "isExported": false
                },
                {
                  "name": "generateSQLFile",
                  "type": "unknown",
                  "line": 242,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "SQLGenerator",
                  "extends": null,
                  "line": 11,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "processTestFiles",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processExcelFile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseSheetData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "looksLikeHeader",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectColumns",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseDataRowDirect",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseDataRow",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeModel",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateInsertSQL",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateSQLFile",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "xlsx",
                  "default": "XLSX",
                  "named": [],
                  "line": 4,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 5,
                  "isLocal": false
                },
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 6,
                  "isLocal": false
                }
              ],
              "exports": [
                {
                  "name": "SQLGenerator",
                  "type": "commonjs",
                  "line": 293
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "importExcelData.js",
              "path": "src\\scripts\\importExcelData.js",
              "size": 9412,
              "lines": 298,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 13,
                  "isExported": false
                },
                {
                  "name": "importTestFiles",
                  "type": "unknown",
                  "line": 23,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 34,
                  "isExported": false
                },
                {
                  "name": "processExcelFile",
                  "type": "unknown",
                  "line": 44,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 76,
                  "isExported": false
                },
                {
                  "name": "parseSheetData",
                  "type": "unknown",
                  "line": 85,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 116,
                  "isExported": false
                },
                {
                  "name": "looksLikeHeader",
                  "type": "unknown",
                  "line": 127,
                  "isExported": false
                },
                {
                  "name": "detectColumns",
                  "type": "unknown",
                  "line": 144,
                  "isExported": false
                },
                {
                  "name": "parseDataRow",
                  "type": "unknown",
                  "line": 182,
                  "isExported": false
                },
                {
                  "name": "normalizeModel",
                  "type": "unknown",
                  "line": 213,
                  "isExported": false
                },
                {
                  "name": "insertRepairData",
                  "type": "unknown",
                  "line": 227,
                  "isExported": false
                },
                {
                  "name": "printSummary",
                  "type": "unknown",
                  "line": 267,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ExcelDataImporter",
                  "extends": null,
                  "line": 12,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "importTestFiles",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processExcelFile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseSheetData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "looksLikeHeader",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectColumns",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseDataRow",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeModel",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "insertRepairData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "printSummary",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "xlsx",
                  "default": "XLSX",
                  "named": [],
                  "line": 4,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 5,
                  "isLocal": false
                },
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "ExcelDataImporter",
                  "type": "commonjs",
                  "line": 298
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 2",
          "files": [
            {
              "name": "index_intentions.js",
              "path": "src\\scripts\\index_intentions.js",
              "size": 2976,
              "lines": 87,
              "functions": [
                {
                  "name": "indexIntentions",
                  "type": "function",
                  "line": 35,
                  "isExported": false
                },
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 17,
                  "isExported": false
                },
                {
                  "name": "generate",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 28,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 40,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "LangChainEmbeddingAdapter",
                  "extends": null,
                  "line": 16,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "generate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "../services/embeddingEngine",
                  "default": null,
                  "named": [
                    "embeddingEngine"
                  ],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "../../intentions_dataset.json",
                  "default": "intentionsData",
                  "named": [],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 6,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{ indexIntentions }",
                  "type": "commonjs",
                  "line": 87
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "index_knowledge.js",
              "path": "src\\scripts\\index_knowledge.js",
              "size": 4941,
              "lines": 127,
              "functions": [
                {
                  "name": "indexKnowledge",
                  "type": "function",
                  "line": 38,
                  "isExported": false
                },
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 20,
                  "isExported": false
                },
                {
                  "name": "generate",
                  "type": "unknown",
                  "line": 24,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 31,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 44,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "LangChainEmbeddingAdapter",
                  "extends": null,
                  "line": 19,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "generate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "../services/embeddingEngine",
                  "default": null,
                  "named": [
                    "embeddingEngine"
                  ],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 7,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 8,
                  "isLocal": false
                }
              ],
              "exports": [
                {
                  "name": "{ indexKnowledge }",
                  "type": "commonjs",
                  "line": 127
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "index_markdown_prices.js",
              "path": "src\\scripts\\index_markdown_prices.js",
              "size": 9208,
              "lines": 254,
              "functions": [
                {
                  "name": "processMarkdownFile",
                  "type": "function",
                  "line": 24,
                  "isExported": false
                },
                {
                  "name": "indexMarkdownPrices",
                  "type": "function",
                  "line": 100,
                  "isExported": false
                },
                {
                  "name": "cleanExistingPriceChunks",
                  "type": "function",
                  "line": 202,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 34,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 40,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 133,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 7,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 8,
                  "isLocal": false
                },
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 9,
                  "isLocal": false
                },
                {
                  "source": "../services/embeddingEngine",
                  "default": null,
                  "named": [
                    "embeddingEngine"
                  ],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 11,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    indexMarkdownPrices,\n    cleanExistingPriceChunks,\n    processMarkdownFile\n}",
                  "type": "commonjs",
                  "line": 250
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "migrate_to_task_prefixes.js",
              "path": "src\\scripts\\migrate_to_task_prefixes.js",
              "size": 13113,
              "lines": 351,
              "functions": [
                {
                  "name": "checkCollections",
                  "type": "function",
                  "line": 22,
                  "isExported": false
                },
                {
                  "name": "getCollectionStats",
                  "type": "function",
                  "line": 44,
                  "isExported": false
                },
                {
                  "name": "createCollectionBackup",
                  "type": "function",
                  "line": 74,
                  "isExported": false
                },
                {
                  "name": "planMigrationStrategy",
                  "type": "function",
                  "line": 128,
                  "isExported": false
                },
                {
                  "name": "executeMigrationStrategy",
                  "type": "function",
                  "line": 175,
                  "isExported": false
                },
                {
                  "name": "runMigration",
                  "type": "function",
                  "line": 258,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 35,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 84,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 98,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 185,
                  "isExported": false
                },
                {
                  "name": "then",
                  "type": "arrow",
                  "line": 331,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 4,
                  "isLocal": false
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 5,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    runMigration,\n    checkCollections,\n    getCollectionStats,\n    createCollectionBackup\n}",
                  "type": "commonjs",
                  "line": 346
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "migrateConversations.js",
              "path": "src\\scripts\\migrateConversations.js",
              "size": 9293,
              "lines": 249,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 14,
                  "isExported": false
                },
                {
                  "name": "migrateAllConversations",
                  "type": "unknown",
                  "line": 23,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 30,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 44,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 51,
                  "isExported": false
                },
                {
                  "name": "fetchExistingConversations",
                  "type": "unknown",
                  "line": 62,
                  "isExported": false
                },
                {
                  "name": "processConversation",
                  "type": "unknown",
                  "line": 95,
                  "isExported": false
                },
                {
                  "name": "extractConversationData",
                  "type": "unknown",
                  "line": 133,
                  "isExported": false
                },
                {
                  "name": "updateConversationWithChunkId",
                  "type": "unknown",
                  "line": 192,
                  "isExported": false
                },
                {
                  "name": "printMigrationSummary",
                  "type": "unknown",
                  "line": 207,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ConversationMigrator",
                  "extends": null,
                  "line": 13,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "migrateAllConversations",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "fetchExistingConversations",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processConversation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractConversationData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateConversationWithChunkId",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "printMigrationSummary",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "../services/conversationMemory",
                  "default": null,
                  "named": [
                    "conversationMemory"
                  ],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "ConversationMigrator",
                  "type": "commonjs",
                  "line": 249
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 3",
          "files": [
            {
              "name": "run_evals.js",
              "path": "src\\scripts\\run_evals.js",
              "size": 3228,
              "lines": 83,
              "functions": [
                {
                  "name": "runEvals",
                  "type": "function",
                  "line": 12,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 32,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 42,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 51,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 4,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 5,
                  "isLocal": false
                },
                {
                  "source": "../services/simpleAgentExecutor",
                  "default": null,
                  "named": [
                    "SimpleAgentExecutor"
                  ],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "initializeDatabase"
                  ],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 8,
                  "isLocal": true
                }
              ],
              "exports": [],
              "hasExports": false,
              "isModule": false
            },
            {
              "name": "seed_proactive_knowledge.js",
              "path": "src\\scripts\\seed_proactive_knowledge.js",
              "size": 3687,
              "lines": 67,
              "functions": [
                {
                  "name": "seedKnowledge",
                  "type": "function",
                  "line": 28,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 39,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 46,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 57,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 5,
                  "isLocal": true
                }
              ],
              "exports": [],
              "hasExports": false,
              "isModule": false
            },
            {
              "name": "verifyMigration.js",
              "path": "src\\scripts\\verifyMigration.js",
              "size": 10326,
              "lines": 246,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 13,
                  "isExported": false
                },
                {
                  "name": "verifyMigration",
                  "type": "unknown",
                  "line": 24,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 41,
                  "isExported": false
                },
                {
                  "name": "verifyPostgreSQL",
                  "type": "unknown",
                  "line": 51,
                  "isExported": false
                },
                {
                  "name": "verifyChromaDB",
                  "type": "unknown",
                  "line": 96,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 104,
                  "isExported": false
                },
                {
                  "name": "verifyIntegration",
                  "type": "unknown",
                  "line": 126,
                  "isExported": false
                },
                {
                  "name": "printVerificationResults",
                  "type": "unknown",
                  "line": 168,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "MigrationVerifier",
                  "extends": null,
                  "line": 12,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "verifyMigration",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "verifyPostgreSQL",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "verifyChromaDB",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "verifyIntegration",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "printVerificationResults",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "../services/conversationMemory",
                  "default": null,
                  "named": [
                    "conversationMemory"
                  ],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "../services/tools",
                  "default": null,
                  "named": [
                    "tools"
                  ],
                  "line": 144,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "MigrationVerifier",
                  "type": "commonjs",
                  "line": 246
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        }
      ]
    },
    {
      "path": "src\\security",
      "fileCount": 3,
      "files": [
        {
          "name": "advancedRateLimiter.js",
          "path": "src\\security\\advancedRateLimiter.js",
          "size": 26918,
          "lines": 802,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 19,
              "isExported": false
            },
            {
              "name": "refill",
              "type": "unknown",
              "line": 28,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 33,
              "isExported": false
            },
            {
              "name": "consume",
              "type": "unknown",
              "line": 39,
              "isExported": false
            },
            {
              "name": "peek",
              "type": "unknown",
              "line": 50,
              "isExported": false
            },
            {
              "name": "getWaitTime",
              "type": "unknown",
              "line": 55,
              "isExported": false
            },
            {
              "name": "getInfo",
              "type": "unknown",
              "line": 66,
              "isExported": false
            },
            {
              "name": "cleanExpiredRequests",
              "type": "unknown",
              "line": 89,
              "isExported": false
            },
            {
              "name": "addRequest",
              "type": "unknown",
              "line": 95,
              "isExported": false
            },
            {
              "name": "getCurrentCount",
              "type": "unknown",
              "line": 101,
              "isExported": false
            },
            {
              "name": "getResetTime",
              "type": "unknown",
              "line": 106,
              "isExported": false
            },
            {
              "name": "recordActivity",
              "type": "unknown",
              "line": 143,
              "isExported": false
            },
            {
              "name": "analyzePattern",
              "type": "unknown",
              "line": 174,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 195,
              "isExported": false
            },
            {
              "name": "flagAsSuspicious",
              "type": "unknown",
              "line": 221,
              "isExported": false
            },
            {
              "name": "addToBlacklist",
              "type": "unknown",
              "line": 244,
              "isExported": false
            },
            {
              "name": "removeFromBlacklist",
              "type": "unknown",
              "line": 255,
              "isExported": false
            },
            {
              "name": "isBlacklisted",
              "type": "unknown",
              "line": 264,
              "isExported": false
            },
            {
              "name": "isSuspicious",
              "type": "unknown",
              "line": 268,
              "isExported": false
            },
            {
              "name": "getClientInfo",
              "type": "unknown",
              "line": 272,
              "isExported": false
            },
            {
              "name": "cleanup",
              "type": "unknown",
              "line": 280,
              "isExported": false
            },
            {
              "name": "getUserLimits",
              "type": "unknown",
              "line": 389,
              "isExported": false
            },
            {
              "name": "getOrCreateClientBucket",
              "type": "unknown",
              "line": 397,
              "isExported": false
            },
            {
              "name": "checkRateLimit",
              "type": "unknown",
              "line": 435,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 571,
              "isExported": false
            },
            {
              "name": "updateClientLimits",
              "type": "unknown",
              "line": 589,
              "isExported": false
            },
            {
              "name": "getClientStats",
              "type": "unknown",
              "line": 610,
              "isExported": false
            },
            {
              "name": "getSystemMetrics",
              "type": "unknown",
              "line": 631,
              "isExported": false
            },
            {
              "name": "destroy",
              "type": "unknown",
              "line": 689,
              "isExported": false
            },
            {
              "name": "enableBypass",
              "type": "unknown",
              "line": 717,
              "isExported": false
            },
            {
              "name": "middleware",
              "type": "unknown",
              "line": 722,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "TokenBucket",
              "extends": null,
              "line": 18,
              "isExported": false,
              "methods": [
                {
                  "name": "refill",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "consume",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "peek",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getWaitTime",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getInfo",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "SlidingWindowLimiter",
              "extends": null,
              "line": 81,
              "isExported": false,
              "methods": [
                {
                  "name": "cleanExpiredRequests",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "addRequest",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCurrentCount",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getResetTime",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getInfo",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "AbusePatternDetector",
              "extends": null,
              "line": 131,
              "isExported": false,
              "methods": [
                {
                  "name": "recordActivity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzePattern",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "flagAsSuspicious",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "addToBlacklist",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "removeFromBlacklist",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isBlacklisted",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isSuspicious",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getClientInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanup",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "AdvancedRateLimiter",
              "extends": null,
              "line": 310,
              "isExported": false,
              "methods": [
                {
                  "name": "getUserLimits",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getOrCreateClientBucket",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkRateLimit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateClientLimits",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getClientStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSystemMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanup",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "destroy",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "RateLimitMiddleware",
              "extends": null,
              "line": 705,
              "isExported": false,
              "methods": [
                {
                  "name": "enableBypass",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "middleware",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "uuid",
              "default": null,
              "named": [
                "v4: uuidv4"
              ],
              "line": 12,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 13,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    TokenBucket,\n    SlidingWindowLimiter,\n    AbusePatternDetector,\n    AdvancedRateLimiter,\n    RateLimitMiddleware\n}",
              "type": "commonjs",
              "line": 796
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "authLayer.js",
          "path": "src\\security\\authLayer.js",
          "size": 27539,
          "lines": 850,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "matches",
              "type": "unknown",
              "line": 29,
              "isExported": false
            },
            {
              "name": "addPermission",
              "type": "unknown",
              "line": 45,
              "isExported": false
            },
            {
              "name": "removePermission",
              "type": "unknown",
              "line": 53,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 54,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 55,
              "isExported": false
            },
            {
              "name": "hasPermission",
              "type": "unknown",
              "line": 63,
              "isExported": false
            },
            {
              "name": "getPermissionsList",
              "type": "unknown",
              "line": 72,
              "isExported": false
            },
            {
              "name": "sanitizePhoneNumber",
              "type": "unknown",
              "line": 104,
              "isExported": false
            },
            {
              "name": "addRole",
              "type": "unknown",
              "line": 117,
              "isExported": false
            },
            {
              "name": "removeRole",
              "type": "unknown",
              "line": 126,
              "isExported": false
            },
            {
              "name": "hasRole",
              "type": "unknown",
              "line": 146,
              "isExported": false
            },
            {
              "name": "updateActivity",
              "type": "unknown",
              "line": 155,
              "isExported": false
            },
            {
              "name": "setTrustLevel",
              "type": "unknown",
              "line": 160,
              "isExported": false
            },
            {
              "name": "blockUntil",
              "type": "unknown",
              "line": 170,
              "isExported": false
            },
            {
              "name": "isBlocked",
              "type": "unknown",
              "line": 175,
              "isExported": false
            },
            {
              "name": "logAction",
              "type": "unknown",
              "line": 179,
              "isExported": false
            },
            {
              "name": "getHighestRoleLevel",
              "type": "unknown",
              "line": 194,
              "isExported": false
            },
            {
              "name": "toJSON",
              "type": "unknown",
              "line": 202,
              "isExported": false
            },
            {
              "name": "generateToken",
              "type": "unknown",
              "line": 240,
              "isExported": false
            },
            {
              "name": "validateToken",
              "type": "unknown",
              "line": 253,
              "isExported": false
            },
            {
              "name": "refreshActivity",
              "type": "unknown",
              "line": 267,
              "isExported": false
            },
            {
              "name": "isExpired",
              "type": "unknown",
              "line": 271,
              "isExported": false
            },
            {
              "name": "invalidate",
              "type": "unknown",
              "line": 275,
              "isExported": false
            },
            {
              "name": "initializeDefaultRoles",
              "type": "unknown",
              "line": 323,
              "isExported": false
            },
            {
              "name": "authenticateUser",
              "type": "unknown",
              "line": 362,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 472,
              "isExported": false
            },
            {
              "name": "authorizeAction",
              "type": "unknown",
              "line": 488,
              "isExported": false
            },
            {
              "name": "checkRateLimit",
              "type": "unknown",
              "line": 566,
              "isExported": false
            },
            {
              "name": "resetRateLimit",
              "type": "unknown",
              "line": 622,
              "isExported": false
            },
            {
              "name": "getUserByPhone",
              "type": "unknown",
              "line": 634,
              "isExported": false
            },
            {
              "name": "getSession",
              "type": "unknown",
              "line": 638,
              "isExported": false
            },
            {
              "name": "blockUser",
              "type": "unknown",
              "line": 642,
              "isExported": false
            },
            {
              "name": "unblockUser",
              "type": "unknown",
              "line": 658,
              "isExported": false
            },
            {
              "name": "promoteUser",
              "type": "unknown",
              "line": 672,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 704,
              "isExported": false
            },
            {
              "name": "cleanup",
              "type": "unknown",
              "line": 730,
              "isExported": false
            },
            {
              "name": "enableBypass",
              "type": "unknown",
              "line": 770,
              "isExported": false
            },
            {
              "name": "authenticate",
              "type": "unknown",
              "line": 775,
              "isExported": false
            },
            {
              "name": "authorize",
              "type": "unknown",
              "line": 784,
              "isExported": false
            },
            {
              "name": "middleware",
              "type": "unknown",
              "line": 793,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "Permission",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "matches",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "Role",
              "extends": null,
              "line": 35,
              "isExported": false,
              "methods": [
                {
                  "name": "addPermission",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "removePermission",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "hasPermission",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getPermissionsList",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "WhatsAppUser",
              "extends": null,
              "line": 85,
              "isExported": false,
              "methods": [
                {
                  "name": "sanitizePhoneNumber",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "addRole",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "removeRole",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "hasPermission",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "hasRole",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateActivity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "setTrustLevel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "blockUntil",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isBlocked",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "logAction",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getHighestRoleLevel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "toJSON",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "Session",
              "extends": null,
              "line": 222,
              "isExported": false,
              "methods": [
                {
                  "name": "generateToken",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateToken",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "refreshActivity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isExpired",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "invalidate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "addPermission",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "hasPermission",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "AuthenticationManager",
              "extends": null,
              "line": 292,
              "isExported": false,
              "methods": [
                {
                  "name": "initializeDefaultRoles",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "authenticateUser",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "authorizeAction",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkRateLimit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetRateLimit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "sanitizePhoneNumber",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getUserByPhone",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSession",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "blockUser",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "unblockUser",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "promoteUser",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanup",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "AuthMiddleware",
              "extends": null,
              "line": 764,
              "isExported": false,
              "methods": [
                {
                  "name": "enableBypass",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "authenticate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "authorize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "middleware",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "crypto",
              "default": "crypto",
              "named": [],
              "line": 12,
              "isLocal": false
            },
            {
              "source": "uuid",
              "default": null,
              "named": [
                "v4: uuidv4"
              ],
              "line": 13,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 14,
              "isLocal": true
            },
            {
              "source": "../utils/config",
              "default": "config",
              "named": [],
              "line": 15,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    Permission,\n    Role,\n    WhatsAppUser,\n    Session,\n    AuthenticationManager,\n    AuthMiddleware\n}",
              "type": "commonjs",
              "line": 843
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "inputValidator.js",
          "path": "src\\security\\inputValidator.js",
          "size": 17865,
          "lines": 536,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 18,
              "isExported": false
            },
            {
              "name": "validate",
              "type": "unknown",
              "line": 24,
              "isExported": false
            },
            {
              "name": "createResult",
              "type": "unknown",
              "line": 28,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 61,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 143,
              "isExported": false
            },
            {
              "name": "addValidator",
              "type": "unknown",
              "line": 302,
              "isExported": false
            },
            {
              "name": "removeValidator",
              "type": "unknown",
              "line": 311,
              "isExported": false
            },
            {
              "name": "validateInput",
              "type": "unknown",
              "line": 319,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 390,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 415,
              "isExported": false
            },
            {
              "name": "enableBypass",
              "type": "unknown",
              "line": 438,
              "isExported": false
            },
            {
              "name": "middleware",
              "type": "unknown",
              "line": 443,
              "isExported": false
            },
            {
              "name": "createDefault",
              "type": "unknown",
              "line": 504,
              "isExported": false
            },
            {
              "name": "createStrict",
              "type": "unknown",
              "line": 508,
              "isExported": false
            },
            {
              "name": "createPermissive",
              "type": "unknown",
              "line": 514,
              "isExported": false
            },
            {
              "name": "createMiddleware",
              "type": "unknown",
              "line": 520,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ValidationRule",
              "extends": null,
              "line": 17,
              "isExported": false,
              "methods": [
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createResult",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "SQLInjectionValidator",
              "extends": "ValidationRule",
              "line": 45,
              "isExported": false,
              "methods": [
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "XSSValidator",
              "extends": "ValidationRule",
              "line": 86,
              "isExported": false,
              "methods": [
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "LengthValidator",
              "extends": "ValidationRule",
              "line": 132,
              "isExported": false,
              "methods": [
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "EncodingValidator",
              "extends": "ValidationRule",
              "line": 177,
              "isExported": false,
              "methods": [
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "BusinessRuleValidator",
              "extends": "ValidationRule",
              "line": 236,
              "isExported": false,
              "methods": [
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "InputValidationChain",
              "extends": null,
              "line": 281,
              "isExported": false,
              "methods": [
                {
                  "name": "addValidator",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "removeValidator",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateInput",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ValidationMiddleware",
              "extends": null,
              "line": 432,
              "isExported": false,
              "methods": [
                {
                  "name": "enableBypass",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "middleware",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "InputValidatorFactory",
              "extends": null,
              "line": 503,
              "isExported": false,
              "methods": [
                {
                  "name": "createDefault",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "createStrict",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "createPermissive",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "createMiddleware",
                  "isConstructor": false,
                  "isStatic": true
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 11,
              "isLocal": true
            },
            {
              "source": "uuid",
              "default": null,
              "named": [
                "v4: uuidv4"
              ],
              "line": 12,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "{\n    ValidationRule,\n    SQLInjectionValidator,\n    XSSValidator,\n    LengthValidator,\n    EncodingValidator,\n    BusinessRuleValidator,\n    InputValidationChain,\n    ValidationMiddleware,\n    InputValidatorFactory\n}",
              "type": "commonjs",
              "line": 526
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\services",
      "fileCount": 21,
      "files": [
        {
          "name": "agentExecutor.js",
          "path": "src\\services\\agentExecutor.js",
          "size": 5577,
          "lines": 160,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 15,
              "isExported": false
            },
            {
              "name": "initialize",
              "type": "unknown",
              "line": 92,
              "isExported": false
            },
            {
              "name": "execute",
              "type": "unknown",
              "line": 110,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 118,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 126,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "OllamaError",
              "extends": "Error",
              "line": 14,
              "isExported": false,
              "methods": []
            },
            {
              "name": "ToolError",
              "extends": "Error",
              "line": 21,
              "isExported": false,
              "methods": []
            },
            {
              "name": "ValidationError",
              "extends": "Error",
              "line": 28,
              "isExported": false,
              "methods": []
            },
            {
              "name": "SalvaCellAgentExecutor",
              "extends": null,
              "line": 35,
              "isExported": false,
              "methods": [
                {
                  "name": "initialize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "execute",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "langchain/agents",
              "default": null,
              "named": [
                "AgentExecutor",
                "createReactAgent"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "@langchain/community/chat_models/ollama",
              "default": null,
              "named": [
                "ChatOllama"
              ],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "@langchain/core/prompts",
              "default": null,
              "named": [
                "PromptTemplate"
              ],
              "line": 5,
              "isLocal": false
            },
            {
              "source": "rate-limiter-flexible",
              "default": null,
              "named": [
                "RateLimiterMemory"
              ],
              "line": 6,
              "isLocal": false
            },
            {
              "source": "./tools",
              "default": null,
              "named": [
                "tools"
              ],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 8,
              "isLocal": true
            },
            {
              "source": "../utils/config",
              "default": "config",
              "named": [],
              "line": 9,
              "isLocal": true
            },
            {
              "source": "./semanticCache",
              "default": null,
              "named": [
                "findInCache",
                "addToCache"
              ],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "./guardrails",
              "default": null,
              "named": [
                "Guardrails"
              ],
              "line": 11,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{ SalvaCellAgentExecutor, OllamaError, ToolError, ValidationError }",
              "type": "commonjs",
              "line": 160
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "clientHistorySearchEngine.js",
          "path": "src\\services\\clientHistorySearchEngine.js",
          "size": 24743,
          "lines": 804,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "searchClientHistory",
              "type": "unknown",
              "line": 64,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 73,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 122,
              "isExported": false
            },
            {
              "name": "normalizeClientIdentifier",
              "type": "unknown",
              "line": 135,
              "isExported": false
            },
            {
              "name": "searchByAlternativeIdentifiers",
              "type": "unknown",
              "line": 191,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 195,
              "isExported": false
            },
            {
              "name": "generateAlternativeIdentifiers",
              "type": "unknown",
              "line": 223,
              "isExported": false
            },
            {
              "name": "formatClientHistory",
              "type": "unknown",
              "line": 260,
              "isExported": false
            },
            {
              "name": "extractClientProfile",
              "type": "unknown",
              "line": 307,
              "isExported": false
            },
            {
              "name": "groupByIntent",
              "type": "unknown",
              "line": 431,
              "isExported": false
            },
            {
              "name": "analyzeTemporalPatterns",
              "type": "unknown",
              "line": 481,
              "isExported": false
            },
            {
              "name": "searchInClientHistory",
              "type": "unknown",
              "line": 509,
              "isExported": false
            },
            {
              "name": "processSearchResults",
              "type": "unknown",
              "line": 579,
              "isExported": false
            },
            {
              "name": "removeDuplicateResults",
              "type": "unknown",
              "line": 600,
              "isExported": false
            },
            {
              "name": "calculateInteractionFrequency",
              "type": "unknown",
              "line": 615,
              "isExported": false
            },
            {
              "name": "calculateProfileConfidence",
              "type": "unknown",
              "line": 626,
              "isExported": false
            },
            {
              "name": "enrichResultsWithClientContext",
              "type": "unknown",
              "line": 644,
              "isExported": false
            },
            {
              "name": "calculateProfileRelevance",
              "type": "unknown",
              "line": 661,
              "isExported": false
            },
            {
              "name": "getAppliedFilters",
              "type": "unknown",
              "line": 677,
              "isExported": false
            },
            {
              "name": "getEmptyClientHistory",
              "type": "unknown",
              "line": 686,
              "isExported": false
            },
            {
              "name": "getCachedResult",
              "type": "unknown",
              "line": 708,
              "isExported": false
            },
            {
              "name": "cacheResult",
              "type": "unknown",
              "line": 721,
              "isExported": false
            },
            {
              "name": "generateCacheKey",
              "type": "unknown",
              "line": 734,
              "isExported": false
            },
            {
              "name": "cleanExpiredCache",
              "type": "unknown",
              "line": 743,
              "isExported": false
            },
            {
              "name": "getSearchStats",
              "type": "unknown",
              "line": 755,
              "isExported": false
            },
            {
              "name": "clearCache",
              "type": "unknown",
              "line": 780,
              "isExported": false
            },
            {
              "name": "resetMetrics",
              "type": "unknown",
              "line": 788,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ClientHistorySearchEngine",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "searchClientHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeClientIdentifier",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "searchByAlternativeIdentifiers",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateAlternativeIdentifiers",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "formatClientHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractClientProfile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "groupByIntent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeTemporalPatterns",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "searchInClientHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processSearchResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "removeDuplicateResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateInteractionFrequency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateProfileConfidence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enrichResultsWithClientContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateProfileRelevance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getAppliedFilters",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEmptyClientHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCachedResult",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cacheResult",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateCacheKey",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanExpiredCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSearchStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "clearCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    ClientHistorySearchEngine\n}",
              "type": "commonjs",
              "line": 801
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "conversationMemory.js",
          "path": "src\\services\\conversationMemory.js",
          "size": 38386,
          "lines": 1234,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 55,
              "isExported": false
            },
            {
              "name": "generate",
              "type": "unknown",
              "line": 64,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 72,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 86,
              "isExported": false
            },
            {
              "name": "generateQuery",
              "type": "unknown",
              "line": 98,
              "isExported": false
            },
            {
              "name": "generateDocument",
              "type": "unknown",
              "line": 111,
              "isExported": false
            },
            {
              "name": "initialize",
              "type": "unknown",
              "line": 195,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 197,
              "isExported": false
            },
            {
              "name": "storeConversationChunk",
              "type": "unknown",
              "line": 227,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 260,
              "isExported": false
            },
            {
              "name": "searchConversationMemory",
              "type": "unknown",
              "line": 377,
              "isExported": false
            },
            {
              "name": "searchConversationMemoryFallback",
              "type": "unknown",
              "line": 484,
              "isExported": false
            },
            {
              "name": "getClientMemory",
              "type": "unknown",
              "line": 535,
              "isExported": false
            },
            {
              "name": "getClientMemoryFallback",
              "type": "unknown",
              "line": 630,
              "isExported": false
            },
            {
              "name": "storeTraditionalChunk",
              "type": "unknown",
              "line": 682,
              "isExported": false
            },
            {
              "name": "createChunkText",
              "type": "unknown",
              "line": 746,
              "isExported": false
            },
            {
              "name": "buildWhereFilter",
              "type": "unknown",
              "line": 753,
              "isExported": false
            },
            {
              "name": "classifyResponseType",
              "type": "unknown",
              "line": 782,
              "isExported": false
            },
            {
              "name": "getHourCategory",
              "type": "unknown",
              "line": 798,
              "isExported": false
            },
            {
              "name": "storeInPostgreSQL",
              "type": "unknown",
              "line": 808,
              "isExported": false
            },
            {
              "name": "ensureInitialized",
              "type": "unknown",
              "line": 846,
              "isExported": false
            },
            {
              "name": "getMemoryStats",
              "type": "unknown",
              "line": 859,
              "isExported": false
            },
            {
              "name": "calculateSystemHealth",
              "type": "unknown",
              "line": 899,
              "isExported": false
            },
            {
              "name": "getRecentChunksForDeduplication",
              "type": "unknown",
              "line": 943,
              "isExported": false
            },
            {
              "name": "searchClientHistory",
              "type": "unknown",
              "line": 983,
              "isExported": false
            },
            {
              "name": "searchInClientHistory",
              "type": "unknown",
              "line": 1005,
              "isExported": false
            },
            {
              "name": "getClientProfile",
              "type": "unknown",
              "line": 1030,
              "isExported": false
            },
            {
              "name": "findSimilarClients",
              "type": "unknown",
              "line": 1059,
              "isExported": false
            },
            {
              "name": "calculateLoyaltyScore",
              "type": "unknown",
              "line": 1101,
              "isExported": false
            },
            {
              "name": "configureSemanticChunker",
              "type": "unknown",
              "line": 1136,
              "isExported": false
            },
            {
              "name": "configureMetadataEnhancer",
              "type": "unknown",
              "line": 1148,
              "isExported": false
            },
            {
              "name": "getArchitecturalHealth",
              "type": "unknown",
              "line": 1160,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "EnhancedLangChainEmbeddingAdapter",
              "extends": null,
              "line": 54,
              "isExported": false,
              "methods": [
                {
                  "name": "generate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateDocument",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ConversationMemory",
              "extends": null,
              "line": 140,
              "isExported": false,
              "methods": [
                {
                  "name": "initialize",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "storeConversationChunk",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "searchConversationMemory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "searchConversationMemoryFallback",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getClientMemory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getClientMemoryFallback",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "storeTraditionalChunk",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createChunkText",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildWhereFilter",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "classifyResponseType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getHourCategory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "storeInPostgreSQL",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "ensureInitialized",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMemoryStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getRecentChunksForDeduplication",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "searchClientHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "searchInClientHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getClientProfile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findSimilarClients",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateLoyaltyScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "configureSemanticChunker",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "configureMetadataEnhancer",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getArchitecturalHealth",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 5,
              "isLocal": false
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "./embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine",
                "getEmbedding"
              ],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "./semanticChunker",
              "default": null,
              "named": [
                "SemanticChunker"
              ],
              "line": 8,
              "isLocal": true
            },
            {
              "source": "./deterministicSearchEngine",
              "default": null,
              "named": [
                "DeterministicSearchEngine"
              ],
              "line": 9,
              "isLocal": true
            },
            {
              "source": "./dynamicLimitOptimizer",
              "default": null,
              "named": [
                "DynamicLimitOptimizer"
              ],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "./markdownContextEnricher",
              "default": null,
              "named": [
                "MarkdownContextEnricher"
              ],
              "line": 11,
              "isLocal": true
            },
            {
              "source": "./simpleDeduplicationEngine",
              "default": null,
              "named": [
                "SimpleDeduplicationEngine"
              ],
              "line": 12,
              "isLocal": true
            },
            {
              "source": "./metadataEnhancer",
              "default": null,
              "named": [
                "MetadataEnhancer"
              ],
              "line": 13,
              "isLocal": true
            },
            {
              "source": "./clientHistorySearchEngine",
              "default": null,
              "named": [
                "ClientHistorySearchEngine"
              ],
              "line": 14,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 15,
              "isLocal": true
            },
            {
              "source": "url",
              "default": null,
              "named": [
                "URL"
              ],
              "line": 38,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "{\n  ConversationMemory,\n  conversationMemory,\n}",
              "type": "commonjs",
              "line": 1230
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "deterministicSearchEngine.js",
          "path": "src\\services\\deterministicSearchEngine.js",
          "size": 27880,
          "lines": 723,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 22,
              "isExported": false
            },
            {
              "name": "performStabilizedSearch",
              "type": "unknown",
              "line": 118,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 132,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 168,
              "isExported": false
            },
            {
              "name": "performMultipleSearches",
              "type": "unknown",
              "line": 182,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 187,
              "isExported": false
            },
            {
              "name": "performSingleSearch",
              "type": "unknown",
              "line": 217,
              "isExported": false
            },
            {
              "name": "stabilizeResults",
              "type": "unknown",
              "line": 249,
              "isExported": false
            },
            {
              "name": "enrichWithMarkdownContext",
              "type": "unknown",
              "line": 344,
              "isExported": false
            },
            {
              "name": "detectQueryContext",
              "type": "unknown",
              "line": 398,
              "isExported": false
            },
            {
              "name": "generateQueryHash",
              "type": "unknown",
              "line": 429,
              "isExported": false
            },
            {
              "name": "normalizeFilters",
              "type": "unknown",
              "line": 449,
              "isExported": false
            },
            {
              "name": "getCachedResult",
              "type": "unknown",
              "line": 465,
              "isExported": false
            },
            {
              "name": "cacheResults",
              "type": "unknown",
              "line": 482,
              "isExported": false
            },
            {
              "name": "getCacheByContext",
              "type": "unknown",
              "line": 500,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 501,
              "isExported": false
            },
            {
              "name": "cleanupCache",
              "type": "unknown",
              "line": 515,
              "isExported": false
            },
            {
              "name": "invalidatePriceCache",
              "type": "unknown",
              "line": 543,
              "isExported": false
            },
            {
              "name": "performFallbackSearch",
              "type": "unknown",
              "line": 555,
              "isExported": false
            },
            {
              "name": "containsAny",
              "type": "unknown",
              "line": 575,
              "isExported": false
            },
            {
              "name": "buildWhereFilter",
              "type": "unknown",
              "line": 579,
              "isExported": false
            },
            {
              "name": "recordMetrics",
              "type": "unknown",
              "line": 609,
              "isExported": false
            },
            {
              "name": "getDeterminismStats",
              "type": "unknown",
              "line": 632,
              "isExported": false
            },
            {
              "name": "getContextHealth",
              "type": "unknown",
              "line": 659,
              "isExported": false
            },
            {
              "name": "calculateContextHealth",
              "type": "unknown",
              "line": 675,
              "isExported": false
            },
            {
              "name": "performMaintenance",
              "type": "unknown",
              "line": 690,
              "isExported": false
            },
            {
              "name": "resetMetrics",
              "type": "unknown",
              "line": 707,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "DeterministicSearchEngine",
              "extends": null,
              "line": 21,
              "isExported": false,
              "methods": [
                {
                  "name": "performStabilizedSearch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performMultipleSearches",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performSingleSearch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "stabilizeResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enrichWithMarkdownContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectQueryContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateQueryHash",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeFilters",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCachedResult",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cacheResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCacheByContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanupCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "invalidatePriceCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performFallbackSearch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "containsAny",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildWhereFilter",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getDeterminismStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getContextHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateContextHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performMaintenance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "crypto",
              "default": "crypto",
              "named": [],
              "line": 7,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 8,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    DeterministicSearchEngine\n}",
              "type": "commonjs",
              "line": 721
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "dynamicLimitOptimizer.js",
          "path": "src\\services\\dynamicLimitOptimizer.js",
          "size": 22909,
          "lines": 589,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "optimizeLimits",
              "type": "unknown",
              "line": 147,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 187,
              "isExported": false
            },
            {
              "name": "analyzeQueryComplexity",
              "type": "unknown",
              "line": 198,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 209,
              "isExported": false
            },
            {
              "name": "detectQueryContext",
              "type": "unknown",
              "line": 252,
              "isExported": false
            },
            {
              "name": "isMultiDeviceQuery",
              "type": "unknown",
              "line": 293,
              "isExported": false
            },
            {
              "name": "calculateOptimalLimits",
              "type": "unknown",
              "line": 316,
              "isExported": false
            },
            {
              "name": "applySafetyConstraints",
              "type": "unknown",
              "line": 361,
              "isExported": false
            },
            {
              "name": "determineSearchStrategy",
              "type": "unknown",
              "line": 388,
              "isExported": false
            },
            {
              "name": "estimateSearchTime",
              "type": "unknown",
              "line": 404,
              "isExported": false
            },
            {
              "name": "getComplexityWeight",
              "type": "unknown",
              "line": 429,
              "isExported": false
            },
            {
              "name": "getComplexityLevel",
              "type": "unknown",
              "line": 440,
              "isExported": false
            },
            {
              "name": "containsAny",
              "type": "unknown",
              "line": 447,
              "isExported": false
            },
            {
              "name": "getFallbackLimits",
              "type": "unknown",
              "line": 451,
              "isExported": false
            },
            {
              "name": "recordOptimization",
              "type": "unknown",
              "line": 470,
              "isExported": false
            },
            {
              "name": "updateAverage",
              "type": "unknown",
              "line": 498,
              "isExported": false
            },
            {
              "name": "getOptimizationStats",
              "type": "unknown",
              "line": 505,
              "isExported": false
            },
            {
              "name": "getContextHealth",
              "type": "unknown",
              "line": 516,
              "isExported": false
            },
            {
              "name": "calculateSystemHealth",
              "type": "unknown",
              "line": 538,
              "isExported": false
            },
            {
              "name": "performMaintenance",
              "type": "unknown",
              "line": 561,
              "isExported": false
            },
            {
              "name": "resetOldMetrics",
              "type": "unknown",
              "line": 573,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "DynamicLimitOptimizer",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "optimizeLimits",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeQueryComplexity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectQueryContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isMultiDeviceQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateOptimalLimits",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "applySafetyConstraints",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "determineSearchStrategy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "estimateSearchTime",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getComplexityWeight",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getComplexityLevel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "containsAny",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getFallbackLimits",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordOptimization",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateAverage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getOptimizationStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getContextHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performMaintenance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetOldMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    DynamicLimitOptimizer\n}",
              "type": "commonjs",
              "line": 587
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "embeddingCircuitBreaker.js",
          "path": "src\\services\\embeddingCircuitBreaker.js",
          "size": 20809,
          "lines": 605,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "execute",
              "type": "unknown",
              "line": 85,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 96,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 108,
              "isExported": false
            },
            {
              "name": "canExecuteOperation",
              "type": "unknown",
              "line": 125,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 128,
              "isExported": false
            },
            {
              "name": "canExecuteInDegradedMode",
              "type": "unknown",
              "line": 166,
              "isExported": false
            },
            {
              "name": "executeWithTimeout",
              "type": "unknown",
              "line": 196,
              "isExported": false
            },
            {
              "name": "handleBlockedOperation",
              "type": "unknown",
              "line": 219,
              "isExported": false
            },
            {
              "name": "recordSuccess",
              "type": "unknown",
              "line": 238,
              "isExported": false
            },
            {
              "name": "recordFailure",
              "type": "unknown",
              "line": 261,
              "isExported": false
            },
            {
              "name": "checkStateTransitionsOnSuccess",
              "type": "unknown",
              "line": 285,
              "isExported": false
            },
            {
              "name": "checkStateTransitionsOnFailure",
              "type": "unknown",
              "line": 305,
              "isExported": false
            },
            {
              "name": "transitionToClosed",
              "type": "unknown",
              "line": 334,
              "isExported": false
            },
            {
              "name": "transitionToOpen",
              "type": "unknown",
              "line": 341,
              "isExported": false
            },
            {
              "name": "transitionToHalfOpen",
              "type": "unknown",
              "line": 351,
              "isExported": false
            },
            {
              "name": "transitionToDegraded",
              "type": "unknown",
              "line": 359,
              "isExported": false
            },
            {
              "name": "shouldAttemptRecovery",
              "type": "unknown",
              "line": 372,
              "isExported": false
            },
            {
              "name": "shouldUseDegradedMode",
              "type": "unknown",
              "line": 376,
              "isExported": false
            },
            {
              "name": "isOperationCritical",
              "type": "unknown",
              "line": 385,
              "isExported": false
            },
            {
              "name": "initializeFallbackStrategies",
              "type": "unknown",
              "line": 409,
              "isExported": false
            },
            {
              "name": "hasFallbackStrategy",
              "type": "unknown",
              "line": 448,
              "isExported": false
            },
            {
              "name": "executeFallback",
              "type": "unknown",
              "line": 453,
              "isExported": false
            },
            {
              "name": "getTimeoutForContext",
              "type": "unknown",
              "line": 485,
              "isExported": false
            },
            {
              "name": "generateOperationId",
              "type": "unknown",
              "line": 499,
              "isExported": false
            },
            {
              "name": "recordOperationAttempt",
              "type": "unknown",
              "line": 503,
              "isExported": false
            },
            {
              "name": "addToHistory",
              "type": "unknown",
              "line": 507,
              "isExported": false
            },
            {
              "name": "resetMetrics",
              "type": "unknown",
              "line": 516,
              "isExported": false
            },
            {
              "name": "notifyStateChange",
              "type": "unknown",
              "line": 522,
              "isExported": false
            },
            {
              "name": "getStatus",
              "type": "unknown",
              "line": 541,
              "isExported": false
            },
            {
              "name": "calculateHealthScore",
              "type": "unknown",
              "line": 571,
              "isExported": false
            },
            {
              "name": "getOperationHistory",
              "type": "unknown",
              "line": 588,
              "isExported": false
            },
            {
              "name": "reset",
              "type": "unknown",
              "line": 592,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "EmbeddingCircuitBreaker",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "execute",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "canExecuteOperation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "canExecuteInDegradedMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithTimeout",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleBlockedOperation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkStateTransitionsOnSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkStateTransitionsOnFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "transitionToClosed",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "transitionToOpen",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "transitionToHalfOpen",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "transitionToDegraded",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shouldAttemptRecovery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shouldUseDegradedMode",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isOperationCritical",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializeFallbackStrategies",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "hasFallbackStrategy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeFallback",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getTimeoutForContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateOperationId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordOperationAttempt",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "addToHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "notifyStateChange",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateHealthScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getOperationHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "reset",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    EmbeddingCircuitBreaker\n}",
              "type": "commonjs",
              "line": 603
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "embeddingEngine.js",
          "path": "src\\services\\embeddingEngine.js",
          "size": 1861,
          "lines": 39,
          "functions": [
            {
              "name": "getEmbeddingEngine",
              "type": "function",
              "line": 15,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 16,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 28,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "@langchain/community/embeddings/ollama",
              "default": null,
              "named": [
                "OllamaEmbeddings"
              ],
              "line": 1,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 2,
              "isLocal": true
            },
            {
              "source": "../utils/retryHandler",
              "default": "retryHandler",
              "named": [],
              "line": 3,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    getEmbeddingEngine // Solo exportar la funci√≥n, la instancia se obtiene as√≠ncronamente\n}",
              "type": "commonjs",
              "line": 37
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "guardrails.js",
          "path": "src\\services\\guardrails.js",
          "size": 5443,
          "lines": 133,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 11,
              "isExported": false
            },
            {
              "name": "processResponse",
              "type": "unknown",
              "line": 30,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 34,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 36,
              "isExported": false
            },
            {
              "name": "checkNoPromises",
              "type": "unknown",
              "line": 59,
              "isExported": false
            },
            {
              "name": "checkNoToxicity",
              "type": "unknown",
              "line": 71,
              "isExported": false
            },
            {
              "name": "checkNoOffTopic",
              "type": "unknown",
              "line": 84,
              "isExported": false
            },
            {
              "name": "checkNoPersonalOpinions",
              "type": "unknown",
              "line": 100,
              "isExported": false
            },
            {
              "name": "checkNoSensitiveInfoRequest",
              "type": "unknown",
              "line": 112,
              "isExported": false
            },
            {
              "name": "checkResponseLength",
              "type": "unknown",
              "line": 124,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "Guardrails",
              "extends": null,
              "line": 10,
              "isExported": false,
              "methods": [
                {
                  "name": "processResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkNoPromises",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkNoToxicity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkNoOffTopic",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkNoPersonalOpinions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkNoSensitiveInfoRequest",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkResponseLength",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "../utils/config",
              "default": "config",
              "named": [],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{ Guardrails }",
              "type": "commonjs",
              "line": 133
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "hallucinationDetector.js",
          "path": "src\\services\\hallucinationDetector.js",
          "size": 1315,
          "lines": 34,
          "functions": [
            {
              "name": "detectHallucination",
              "type": "function",
              "line": 13,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "../utils/responseValidator",
              "default": null,
              "named": [
                "responseValidatorPipeline"
              ],
              "line": 5,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    detectHallucination\n}",
              "type": "commonjs",
              "line": 31
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "markdownContextEnricher.js",
          "path": "src\\services\\markdownContextEnricher.js",
          "size": 19554,
          "lines": 560,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 23,
              "isExported": false
            },
            {
              "name": "initializeCache",
              "type": "unknown",
              "line": 78,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 82,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 89,
              "isExported": false
            },
            {
              "name": "refreshMarkdownCache",
              "type": "unknown",
              "line": 98,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 117,
              "isExported": false
            },
            {
              "name": "extractBrandFromFilename",
              "type": "unknown",
              "line": 155,
              "isExported": false
            },
            {
              "name": "parseMarkdownContent",
              "type": "unknown",
              "line": 167,
              "isExported": false
            },
            {
              "name": "extractPriceRanges",
              "type": "unknown",
              "line": 200,
              "isExported": false
            },
            {
              "name": "extractServiceTypes",
              "type": "unknown",
              "line": 219,
              "isExported": false
            },
            {
              "name": "extractMetadata",
              "type": "unknown",
              "line": 236,
              "isExported": false
            },
            {
              "name": "parseTableModels",
              "type": "unknown",
              "line": 271,
              "isExported": false
            },
            {
              "name": "parsePrice",
              "type": "unknown",
              "line": 301,
              "isExported": false
            },
            {
              "name": "buildGlobalMetadata",
              "type": "unknown",
              "line": 311,
              "isExported": false
            },
            {
              "name": "enrichSearchResults",
              "type": "unknown",
              "line": 341,
              "isExported": false
            },
            {
              "name": "detectEnrichmentType",
              "type": "unknown",
              "line": 375,
              "isExported": false
            },
            {
              "name": "extractBrandsFromQuery",
              "type": "unknown",
              "line": 391,
              "isExported": false
            },
            {
              "name": "buildEnrichmentForResult",
              "type": "unknown",
              "line": 407,
              "isExported": false
            },
            {
              "name": "forEach",
              "type": "arrow",
              "line": 423,
              "isExported": false
            },
            {
              "name": "getRelevantGlobalInfo",
              "type": "unknown",
              "line": 495,
              "isExported": false
            },
            {
              "name": "getBrandInfo",
              "type": "unknown",
              "line": 527,
              "isExported": false
            },
            {
              "name": "getGlobalMetadata",
              "type": "unknown",
              "line": 531,
              "isExported": false
            },
            {
              "name": "getStandardInfo",
              "type": "unknown",
              "line": 535,
              "isExported": false
            },
            {
              "name": "getCacheStats",
              "type": "unknown",
              "line": 539,
              "isExported": false
            },
            {
              "name": "forceRefresh",
              "type": "unknown",
              "line": 552,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "MarkdownContextEnricher",
              "extends": null,
              "line": 22,
              "isExported": false,
              "methods": [
                {
                  "name": "initializeCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "refreshMarkdownCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractBrandFromFilename",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseMarkdownContent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractPriceRanges",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractServiceTypes",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseTableModels",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parsePrice",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildGlobalMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enrichSearchResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectEnrichmentType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractBrandsFromQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildEnrichmentForResult",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forEach",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getRelevantGlobalInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getBrandInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getGlobalMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStandardInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCacheStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forceRefresh",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 7,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 8,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 9,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    MarkdownContextEnricher\n}",
              "type": "commonjs",
              "line": 558
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "markdownMetadataExtractor.js",
          "path": "src\\services\\markdownMetadataExtractor.js",
          "size": 18701,
          "lines": 592,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 23,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 84,
              "isExported": false
            },
            {
              "name": "initializeCache",
              "type": "unknown",
              "line": 93,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 106,
              "isExported": false
            },
            {
              "name": "refreshCache",
              "type": "unknown",
              "line": 115,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 132,
              "isExported": false
            },
            {
              "name": "extractMetadataFromFile",
              "type": "unknown",
              "line": 170,
              "isExported": false
            },
            {
              "name": "extractBasicInfoFromContent",
              "type": "unknown",
              "line": 205,
              "isExported": false
            },
            {
              "name": "extractBrandFromFilename",
              "type": "unknown",
              "line": 258,
              "isExported": false
            },
            {
              "name": "getDeviceInfo",
              "type": "unknown",
              "line": 273,
              "isExported": false
            },
            {
              "name": "getGlobalInfo",
              "type": "unknown",
              "line": 341,
              "isExported": false
            },
            {
              "name": "getBrandInfo",
              "type": "unknown",
              "line": 354,
              "isExported": false
            },
            {
              "name": "getAllBrands",
              "type": "unknown",
              "line": 383,
              "isExported": false
            },
            {
              "name": "getGlobalStats",
              "type": "unknown",
              "line": 397,
              "isExported": false
            },
            {
              "name": "searchInMetadata",
              "type": "unknown",
              "line": 422,
              "isExported": false
            },
            {
              "name": "ensureCacheValid",
              "type": "unknown",
              "line": 471,
              "isExported": false
            },
            {
              "name": "getTotalModelsCount",
              "type": "unknown",
              "line": 483,
              "isExported": false
            },
            {
              "name": "getCacheStats",
              "type": "unknown",
              "line": 496,
              "isExported": false
            },
            {
              "name": "forceRefresh",
              "type": "unknown",
              "line": 513,
              "isExported": false
            },
            {
              "name": "clearCache",
              "type": "unknown",
              "line": 522,
              "isExported": false
            },
            {
              "name": "healthCheck",
              "type": "unknown",
              "line": 538,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "MarkdownMetadataExtractor",
              "extends": null,
              "line": 22,
              "isExported": false,
              "methods": [
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializeCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "refreshCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractMetadataFromFile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractBasicInfoFromContent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractBrandFromFilename",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getDeviceInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getGlobalInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getBrandInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getAllBrands",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getGlobalStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "searchInMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "ensureCacheValid",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getTotalModelsCount",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCacheStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forceRefresh",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "clearCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "healthCheck",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 7,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 8,
              "isLocal": false
            },
            {
              "source": "js-yaml",
              "default": "yaml",
              "named": [],
              "line": 9,
              "isLocal": false
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    MarkdownMetadataExtractor\n}",
              "type": "commonjs",
              "line": 590
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "metadataEnhancer.js",
          "path": "src\\services\\metadataEnhancer.js",
          "size": 23316,
          "lines": 668,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 37,
              "isExported": false
            },
            {
              "name": "enhanceMetadata",
              "type": "unknown",
              "line": 121,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 172,
              "isExported": false
            },
            {
              "name": "cleanRawMetadata",
              "type": "unknown",
              "line": 183,
              "isExported": false
            },
            {
              "name": "validateMetadata",
              "type": "unknown",
              "line": 210,
              "isExported": false
            },
            {
              "name": "validateField",
              "type": "unknown",
              "line": 256,
              "isExported": false
            },
            {
              "name": "enrichWithMarkdownData",
              "type": "unknown",
              "line": 294,
              "isExported": false
            },
            {
              "name": "applyAutoEnrichment",
              "type": "unknown",
              "line": 343,
              "isExported": false
            },
            {
              "name": "finalizeMetadata",
              "type": "unknown",
              "line": 371,
              "isExported": false
            },
            {
              "name": "isValidType",
              "type": "unknown",
              "line": 388,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 391,
              "isExported": false
            },
            {
              "name": "isChromaCompatibleType",
              "type": "unknown",
              "line": 403,
              "isExported": false
            },
            {
              "name": "attemptTypeConversion",
              "type": "unknown",
              "line": 408,
              "isExported": false
            },
            {
              "name": "mapToValidEnum",
              "type": "unknown",
              "line": 447,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 484,
              "isExported": false
            },
            {
              "name": "normalizeFieldName",
              "type": "unknown",
              "line": 497,
              "isExported": false
            },
            {
              "name": "normalizeClientId",
              "type": "unknown",
              "line": 514,
              "isExported": false
            },
            {
              "name": "normalizeTimestamp",
              "type": "unknown",
              "line": 532,
              "isExported": false
            },
            {
              "name": "normalizeIntent",
              "type": "unknown",
              "line": 547,
              "isExported": false
            },
            {
              "name": "cleanFieldValue",
              "type": "unknown",
              "line": 558,
              "isExported": false
            },
            {
              "name": "calculateConfidenceScore",
              "type": "unknown",
              "line": 578,
              "isExported": false
            },
            {
              "name": "mapServiceType",
              "type": "unknown",
              "line": 590,
              "isExported": false
            },
            {
              "name": "extractDeviceBrand",
              "type": "unknown",
              "line": 603,
              "isExported": false
            },
            {
              "name": "createFallbackMetadata",
              "type": "unknown",
              "line": 622,
              "isExported": false
            },
            {
              "name": "getEnhancementStats",
              "type": "unknown",
              "line": 637,
              "isExported": false
            },
            {
              "name": "resetMetrics",
              "type": "unknown",
              "line": 653,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "MetadataEnhancer",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enhanceMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanRawMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateField",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enrichWithMarkdownData",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "applyAutoEnrichment",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "finalizeMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isValidType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isChromaCompatibleType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "attemptTypeConversion",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "mapToValidEnum",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeFieldName",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeClientId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeTimestamp",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeIntent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanFieldValue",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateConfidenceScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "mapServiceType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractDeviceBrand",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createFallbackMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEnhancementStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./markdownMetadataExtractor",
              "default": null,
              "named": [
                "MarkdownMetadataExtractor"
              ],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 8,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    MetadataEnhancer\n}",
              "type": "commonjs",
              "line": 666
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "priceExtractionSystem.js",
          "path": "src\\services\\priceExtractionSystem.js",
          "size": 11948,
          "lines": 276,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 36,
              "isExported": false
            },
            {
              "name": "extractWithLLM",
              "type": "unknown",
              "line": 44,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 53,
              "isExported": false
            },
            {
              "name": "extractPrice",
              "type": "unknown",
              "line": 59,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 67,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 79,
              "isExported": false
            },
            {
              "name": "exactDatabaseMatch",
              "type": "unknown",
              "line": 119,
              "isExported": false
            },
            {
              "name": "fuzzyDatabaseMatch",
              "type": "unknown",
              "line": 146,
              "isExported": false
            },
            {
              "name": "fallbackSearch",
              "type": "unknown",
              "line": 210,
              "isExported": false
            },
            {
              "name": "normalizeQuery",
              "type": "unknown",
              "line": 244,
              "isExported": false
            },
            {
              "name": "getStrategyName",
              "type": "unknown",
              "line": 252,
              "isExported": false
            },
            {
              "name": "validateResult",
              "type": "unknown",
              "line": 261,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "PriceExtractionSystem",
              "extends": null,
              "line": 35,
              "isExported": false,
              "methods": [
                {
                  "name": "extractWithLLM",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractPrice",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "exactDatabaseMatch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "fuzzyDatabaseMatch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "fallbackSearch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "normalizeQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStrategyName",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateResult",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 2,
              "isLocal": true
            },
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "./embeddingEngine",
              "default": null,
              "named": [
                "getEmbeddingEngine"
              ],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "./knowledge/KnowledgeCoherenceLayer",
              "default": null,
              "named": [
                "KnowledgeCoherenceLayer"
              ],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "@langchain/community/chat_models/ollama",
              "default": null,
              "named": [
                "ChatOllama"
              ],
              "line": 7,
              "isLocal": false
            },
            {
              "source": "@langchain/core/output_parsers",
              "default": null,
              "named": [
                "JsonOutputParser"
              ],
              "line": 8,
              "isLocal": false
            },
            {
              "source": "../utils/config",
              "default": "config",
              "named": [],
              "line": 9,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    PriceExtractionSystem,\n    priceExtractionSystem\n}",
              "type": "commonjs",
              "line": 273
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "semanticCache.js",
          "path": "src\\services\\semanticCache.js",
          "size": 9004,
          "lines": 217,
          "functions": [
            {
              "name": "initializeCache",
              "type": "function",
              "line": 37,
              "isExported": false
            },
            {
              "name": "findInCache",
              "type": "function",
              "line": 68,
              "isExported": false
            },
            {
              "name": "addToCache",
              "type": "function",
              "line": 132,
              "isExported": false
            },
            {
              "name": "invalidateCache",
              "type": "function",
              "line": 165,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 17,
              "isExported": false
            },
            {
              "name": "generate",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 41,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 55,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 180,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "LangChainEmbeddingAdapter",
              "extends": null,
              "line": 16,
              "isExported": false,
              "methods": [
                {
                  "name": "generate",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 1,
              "isLocal": false
            },
            {
              "source": "./embeddingEngine",
              "default": null,
              "named": [
                "getEmbeddingEngine"
              ],
              "line": 2,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "../utils/retryHandler",
              "default": "retryHandler",
              "named": [],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    findInCache,\n    addToCache,\n    invalidateCache,\n    initializeCache // Exportar para permitir inicializaci√≥n expl√≠cita si es necesario\n}",
              "type": "commonjs",
              "line": 212
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "semanticChunker.js",
          "path": "src\\services\\semanticChunker.js",
          "size": 26314,
          "lines": 675,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "createSemanticChunks",
              "type": "unknown",
              "line": 81,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 113,
              "isExported": false
            },
            {
              "name": "createSlidingWindowChunks",
              "type": "unknown",
              "line": 129,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 135,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 144,
              "isExported": false
            },
            {
              "name": "createContextualChunk",
              "type": "unknown",
              "line": 178,
              "isExported": false
            },
            {
              "name": "extractMarkdownContext",
              "type": "unknown",
              "line": 246,
              "isExported": false
            },
            {
              "name": "buildEnhancedMetadata",
              "type": "unknown",
              "line": 280,
              "isExported": false
            },
            {
              "name": "analyzeConversationFlow",
              "type": "unknown",
              "line": 327,
              "isExported": false
            },
            {
              "name": "calculateSemanticDensity",
              "type": "unknown",
              "line": 359,
              "isExported": false
            },
            {
              "name": "determineFlowStage",
              "type": "unknown",
              "line": 396,
              "isExported": false
            },
            {
              "name": "calculateContinuityScore",
              "type": "unknown",
              "line": 414,
              "isExported": false
            },
            {
              "name": "areRelatedIntents",
              "type": "unknown",
              "line": 459,
              "isExported": false
            },
            {
              "name": "extractMarkdownKeywords",
              "type": "unknown",
              "line": 479,
              "isExported": false
            },
            {
              "name": "createConversationEntry",
              "type": "unknown",
              "line": 490,
              "isExported": false
            },
            {
              "name": "updateConversationBuffer",
              "type": "unknown",
              "line": 501,
              "isExported": false
            },
            {
              "name": "getClientConversations",
              "type": "unknown",
              "line": 517,
              "isExported": false
            },
            {
              "name": "getWindowConfig",
              "type": "unknown",
              "line": 521,
              "isExported": false
            },
            {
              "name": "createFallbackChunk",
              "type": "unknown",
              "line": 536,
              "isExported": false
            },
            {
              "name": "truncateChunk",
              "type": "unknown",
              "line": 554,
              "isExported": false
            },
            {
              "name": "containsAny",
              "type": "unknown",
              "line": 568,
              "isExported": false
            },
            {
              "name": "classifyResponseType",
              "type": "unknown",
              "line": 573,
              "isExported": false
            },
            {
              "name": "getHourCategory",
              "type": "unknown",
              "line": 582,
              "isExported": false
            },
            {
              "name": "getChunkerStats",
              "type": "unknown",
              "line": 594,
              "isExported": false
            },
            {
              "name": "detectPattern",
              "type": "unknown",
              "line": 623,
              "isExported": false
            },
            {
              "name": "matchesPattern",
              "type": "unknown",
              "line": 654,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "SemanticChunker",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "createSemanticChunks",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createSlidingWindowChunks",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createContextualChunk",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractMarkdownContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildEnhancedMetadata",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeConversationFlow",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSemanticDensity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "determineFlowStage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateContinuityScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "areRelatedIntents",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractMarkdownKeywords",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createConversationEntry",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateConversationBuffer",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getClientConversations",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getWindowConfig",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createFallbackChunk",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "truncateChunk",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "containsAny",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "classifyResponseType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getHourCategory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getChunkerStats",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ConversationPatternAnalyzer",
              "extends": null,
              "line": 613,
              "isExported": false,
              "methods": [
                {
                  "name": "detectPattern",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "matchesPattern",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "./embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine"
              ],
              "line": 8,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    SemanticChunker,\n    ConversationPatternAnalyzer\n}",
              "type": "commonjs",
              "line": 672
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "semanticRouter.js",
          "path": "src\\services\\semanticRouter.js",
          "size": 7437,
          "lines": 170,
          "functions": [
            {
              "name": "classifyIntent",
              "type": "function",
              "line": 44,
              "isExported": false
            },
            {
              "name": "determineIntentByKeywords",
              "type": "function",
              "line": 110,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 18,
              "isExported": false
            },
            {
              "name": "generate",
              "type": "unknown",
              "line": 22,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 29,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 49,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "LangChainEmbeddingAdapter",
              "extends": null,
              "line": 17,
              "isExported": false,
              "methods": [
                {
                  "name": "generate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "./embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine"
              ],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 5,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    classifyIntent,\n}",
              "type": "commonjs",
              "line": 167
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "serviceRegistry.js",
          "path": "src\\services\\serviceRegistry.js",
          "size": 2066,
          "lines": 56,
          "functions": [
            {
              "name": "registerService",
              "type": "function",
              "line": 19,
              "isExported": false
            },
            {
              "name": "restartService",
              "type": "function",
              "line": 31,
              "isExported": false
            },
            {
              "name": "if",
              "type": "function",
              "line": 35,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 41,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 2,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    services,\n    registerService,\n    restartService,\n}",
              "type": "commonjs",
              "line": 51
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "simpleAgentExecutor.js",
          "path": "src\\services\\simpleAgentExecutor.js",
          "size": 5184,
          "lines": 127,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 14,
              "isExported": false
            },
            {
              "name": "execute",
              "type": "unknown",
              "line": 46,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 55,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 75,
              "isExported": false
            },
            {
              "name": "executeWithLLM",
              "type": "unknown",
              "line": 107,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "OllamaError",
              "extends": "Error",
              "line": 13,
              "isExported": false,
              "methods": []
            },
            {
              "name": "SimpleAgentExecutor",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "execute",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithLLM",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "@langchain/community/chat_models/ollama",
              "default": null,
              "named": [
                "ChatOllama"
              ],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "rate-limiter-flexible",
              "default": null,
              "named": [
                "RateLimiterMemory"
              ],
              "line": 5,
              "isLocal": false
            },
            {
              "source": "./tools",
              "default": null,
              "named": [
                "tools"
              ],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "../utils/config",
              "default": "config",
              "named": [],
              "line": 8,
              "isLocal": true
            },
            {
              "source": "./semanticCache",
              "default": null,
              "named": [
                "findInCache",
                "addToCache"
              ],
              "line": 9,
              "isLocal": true
            },
            {
              "source": "./guardrails",
              "default": null,
              "named": [
                "Guardrails"
              ],
              "line": 10,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{ SimpleAgentExecutor }",
              "type": "commonjs",
              "line": 127
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "simpleDeduplicationEngine.js",
          "path": "src\\services\\simpleDeduplicationEngine.js",
          "size": 22466,
          "lines": 614,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 22,
              "isExported": false
            },
            {
              "name": "checkForDuplicates",
              "type": "unknown",
              "line": 84,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 124,
              "isExported": false
            },
            {
              "name": "classifyInformationType",
              "type": "unknown",
              "line": 140,
              "isExported": false
            },
            {
              "name": "findDuplicatesWithContext",
              "type": "unknown",
              "line": 172,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 179,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 189,
              "isExported": false
            },
            {
              "name": "calculateContextualSimilarity",
              "type": "unknown",
              "line": 218,
              "isExported": false
            },
            {
              "name": "calculateJaccardSimilarity",
              "type": "unknown",
              "line": 265,
              "isExported": false
            },
            {
              "name": "calculateMetadataSimilarity",
              "type": "unknown",
              "line": 281,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 292,
              "isExported": false
            },
            {
              "name": "calculateMarkdownContextSimilarity",
              "type": "unknown",
              "line": 328,
              "isExported": false
            },
            {
              "name": "makeConservativeDecision",
              "type": "unknown",
              "line": 369,
              "isExported": false
            },
            {
              "name": "isPriorityType",
              "type": "unknown",
              "line": 420,
              "isExported": false
            },
            {
              "name": "getThresholdForType",
              "type": "unknown",
              "line": 424,
              "isExported": false
            },
            {
              "name": "getWeightsForType",
              "type": "unknown",
              "line": 428,
              "isExported": false
            },
            {
              "name": "containsPatterns",
              "type": "unknown",
              "line": 440,
              "isExported": false
            },
            {
              "name": "tokenizeText",
              "type": "unknown",
              "line": 445,
              "isExported": false
            },
            {
              "name": "hashText",
              "type": "unknown",
              "line": 452,
              "isExported": false
            },
            {
              "name": "calculateDeviceSimilarity",
              "type": "unknown",
              "line": 462,
              "isExported": false
            },
            {
              "name": "getDuplicateReason",
              "type": "unknown",
              "line": 476,
              "isExported": false
            },
            {
              "name": "getRelevantMarkdownContext",
              "type": "unknown",
              "line": 483,
              "isExported": false
            },
            {
              "name": "recordMetrics",
              "type": "unknown",
              "line": 508,
              "isExported": false
            },
            {
              "name": "recordPreservation",
              "type": "unknown",
              "line": 541,
              "isExported": false
            },
            {
              "name": "getDeduplicationStats",
              "type": "unknown",
              "line": 546,
              "isExported": false
            },
            {
              "name": "calculateSystemHealth",
              "type": "unknown",
              "line": 563,
              "isExported": false
            },
            {
              "name": "performMaintenance",
              "type": "unknown",
              "line": 588,
              "isExported": false
            },
            {
              "name": "resetDailyMetrics",
              "type": "unknown",
              "line": 605,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "SimpleDeduplicationEngine",
              "extends": null,
              "line": 21,
              "isExported": false,
              "methods": [
                {
                  "name": "checkForDuplicates",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "classifyInformationType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findDuplicatesWithContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateContextualSimilarity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateJaccardSimilarity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateMetadataSimilarity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateMarkdownContextSimilarity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "makeConservativeDecision",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isPriorityType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getThresholdForType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getWeightsForType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "containsPatterns",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "tokenizeText",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "hashText",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateDeviceSimilarity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getDuplicateReason",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getRelevantMarkdownContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordPreservation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getDeduplicationStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performMaintenance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetDailyMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./markdownContextEnricher",
              "default": null,
              "named": [
                "MarkdownContextEnricher"
              ],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 8,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    SimpleDeduplicationEngine\n}",
              "type": "commonjs",
              "line": 612
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "tools.js",
          "path": "src\\services\\tools.js",
          "size": 41919,
          "lines": 992,
          "functions": [
            {
              "name": "validateArguments",
              "type": "function",
              "line": 21,
              "isExported": false
            },
            {
              "name": "determineKnowledgeContext",
              "type": "function",
              "line": 613,
              "isExported": false
            },
            {
              "name": "knowledgeSearchFallback",
              "type": "function",
              "line": 638,
              "isExported": false
            },
            {
              "name": "getArchitecturalHealth",
              "type": "function",
              "line": 930,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 28,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 37,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 58,
              "isExported": false
            },
            {
              "name": "generate",
              "type": "unknown",
              "line": 65,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 73,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 87,
              "isExported": false
            },
            {
              "name": "generateQuery",
              "type": "unknown",
              "line": 96,
              "isExported": false
            },
            {
              "name": "generateDocument",
              "type": "unknown",
              "line": 109,
              "isExported": false
            },
            {
              "name": "validatePriceConsistency",
              "type": "unknown",
              "line": 145,
              "isExported": false
            },
            {
              "name": "extractDeviceInfo",
              "type": "unknown",
              "line": 228,
              "isExported": false
            },
            {
              "name": "extractPrices",
              "type": "unknown",
              "line": 266,
              "isExported": false
            },
            {
              "name": "comparePrices",
              "type": "unknown",
              "line": 293,
              "isExported": false
            },
            {
              "name": "calculatePriceVariance",
              "type": "unknown",
              "line": 338,
              "isExported": false
            },
            {
              "name": "validateProductAvailability",
              "type": "unknown",
              "line": 348,
              "isExported": false
            },
            {
              "name": "clearCache",
              "type": "unknown",
              "line": 391,
              "isExported": false
            },
            {
              "name": "getValidationStats",
              "type": "unknown",
              "line": 399,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "EnhancedLangChainEmbeddingAdapter",
              "extends": null,
              "line": 57,
              "isExported": false,
              "methods": [
                {
                  "name": "generate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateDocument",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "CrossSourceValidator",
              "extends": null,
              "line": 132,
              "isExported": false,
              "methods": [
                {
                  "name": "validatePriceConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractDeviceInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractPrices",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "comparePrices",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculatePriceVariance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateProductAvailability",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "clearCache",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getValidationStats",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "langchain/tools",
              "default": null,
              "named": [
                "DynamicTool"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "chromadb",
              "default": null,
              "named": [
                "ChromaClient"
              ],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "./embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine",
                "getEmbedding"
              ],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "./priceExtractionSystem",
              "default": null,
              "named": [
                "priceExtractionSystem"
              ],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "./conversationMemory",
              "default": null,
              "named": [
                "conversationMemory"
              ],
              "line": 8,
              "isLocal": true
            },
            {
              "source": "./deterministicSearchEngine",
              "default": null,
              "named": [
                "DeterministicSearchEngine"
              ],
              "line": 9,
              "isLocal": true
            },
            {
              "source": "./dynamicLimitOptimizer",
              "default": null,
              "named": [
                "DynamicLimitOptimizer"
              ],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "./markdownContextEnricher",
              "default": null,
              "named": [
                "MarkdownContextEnricher"
              ],
              "line": 11,
              "isLocal": true
            },
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 12,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    tools,\n    crossSourceValidator,\n    performanceMonitor,\n    getArchitecturalHealth\n}",
              "type": "commonjs",
              "line": 986
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "validatedEmbeddingEngine.js",
          "path": "src\\services\\validatedEmbeddingEngine.js",
          "size": 27444,
          "lines": 668,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 22,
              "isExported": false
            },
            {
              "name": "initializeDimensions",
              "type": "unknown",
              "line": 91,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 110,
              "isExported": false
            },
            {
              "name": "embedDocument",
              "type": "unknown",
              "line": 120,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 133,
              "isExported": false
            },
            {
              "name": "embedQuery",
              "type": "unknown",
              "line": 162,
              "isExported": false
            },
            {
              "name": "embedDocuments",
              "type": "unknown",
              "line": 203,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 214,
              "isExported": false
            },
            {
              "name": "validateEmbedding",
              "type": "unknown",
              "line": 264,
              "isExported": false
            },
            {
              "name": "detectSalvaCellContext",
              "type": "unknown",
              "line": 357,
              "isExported": false
            },
            {
              "name": "validateMarkdownEmbedding",
              "type": "unknown",
              "line": 383,
              "isExported": false
            },
            {
              "name": "calculateEmbeddingQuality",
              "type": "unknown",
              "line": 423,
              "isExported": false
            },
            {
              "name": "attemptRecovery",
              "type": "unknown",
              "line": 451,
              "isExported": false
            },
            {
              "name": "containsAny",
              "type": "unknown",
              "line": 515,
              "isExported": false
            },
            {
              "name": "checkTimeConsistency",
              "type": "unknown",
              "line": 519,
              "isExported": false
            },
            {
              "name": "checkWarrantyConsistency",
              "type": "unknown",
              "line": 525,
              "isExported": false
            },
            {
              "name": "checkPriceConsistency",
              "type": "unknown",
              "line": 531,
              "isExported": false
            },
            {
              "name": "checkContextConsistency",
              "type": "unknown",
              "line": 537,
              "isExported": false
            },
            {
              "name": "checkSalvaCellRelevance",
              "type": "unknown",
              "line": 542,
              "isExported": false
            },
            {
              "name": "calculateVariance",
              "type": "unknown",
              "line": 549,
              "isExported": false
            },
            {
              "name": "cleanTextForEmbedding",
              "type": "unknown",
              "line": 554,
              "isExported": false
            },
            {
              "name": "recordValidation",
              "type": "unknown",
              "line": 566,
              "isExported": false
            },
            {
              "name": "checkAlertThresholds",
              "type": "unknown",
              "line": 586,
              "isExported": false
            },
            {
              "name": "triggerAlert",
              "type": "unknown",
              "line": 602,
              "isExported": false
            },
            {
              "name": "ensureDimensionsInitialized",
              "type": "unknown",
              "line": 619,
              "isExported": false
            },
            {
              "name": "getValidationStats",
              "type": "unknown",
              "line": 631,
              "isExported": false
            },
            {
              "name": "resetStats",
              "type": "unknown",
              "line": 651,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ValidatedEmbeddingEngine",
              "extends": "EnhancedEmbeddingEngine",
              "line": 21,
              "isExported": false,
              "methods": [
                {
                  "name": "initializeDimensions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "embedDocument",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "embedQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "embedDocuments",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateEmbedding",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectSalvaCellContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateMarkdownEmbedding",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateEmbeddingQuality",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "attemptRecovery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "containsAny",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkTimeConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkWarrantyConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkPriceConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkContextConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkSalvaCellRelevance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateVariance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanTextForEmbedding",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordValidation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkAlertThresholds",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "triggerAlert",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "ensureDimensionsInitialized",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getValidationStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetStats",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../utils/logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "./embeddingEngine",
              "default": null,
              "named": [
                "EnhancedEmbeddingEngine"
              ],
              "line": 8,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    ValidatedEmbeddingEngine\n}",
              "type": "commonjs",
              "line": 666
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": [
        {
          "name": "Grupo 1",
          "files": [
            {
              "name": "agentExecutor.js",
              "path": "src\\services\\agentExecutor.js",
              "size": 5577,
              "lines": 160,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 15,
                  "isExported": false
                },
                {
                  "name": "initialize",
                  "type": "unknown",
                  "line": 92,
                  "isExported": false
                },
                {
                  "name": "execute",
                  "type": "unknown",
                  "line": 110,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 118,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 126,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "OllamaError",
                  "extends": "Error",
                  "line": 14,
                  "isExported": false,
                  "methods": []
                },
                {
                  "name": "ToolError",
                  "extends": "Error",
                  "line": 21,
                  "isExported": false,
                  "methods": []
                },
                {
                  "name": "ValidationError",
                  "extends": "Error",
                  "line": 28,
                  "isExported": false,
                  "methods": []
                },
                {
                  "name": "SalvaCellAgentExecutor",
                  "extends": null,
                  "line": 35,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "initialize",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "execute",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "langchain/agents",
                  "default": null,
                  "named": [
                    "AgentExecutor",
                    "createReactAgent"
                  ],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "@langchain/community/chat_models/ollama",
                  "default": null,
                  "named": [
                    "ChatOllama"
                  ],
                  "line": 4,
                  "isLocal": false
                },
                {
                  "source": "@langchain/core/prompts",
                  "default": null,
                  "named": [
                    "PromptTemplate"
                  ],
                  "line": 5,
                  "isLocal": false
                },
                {
                  "source": "rate-limiter-flexible",
                  "default": null,
                  "named": [
                    "RateLimiterMemory"
                  ],
                  "line": 6,
                  "isLocal": false
                },
                {
                  "source": "./tools",
                  "default": null,
                  "named": [
                    "tools"
                  ],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 8,
                  "isLocal": true
                },
                {
                  "source": "../utils/config",
                  "default": "config",
                  "named": [],
                  "line": 9,
                  "isLocal": true
                },
                {
                  "source": "./semanticCache",
                  "default": null,
                  "named": [
                    "findInCache",
                    "addToCache"
                  ],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "./guardrails",
                  "default": null,
                  "named": [
                    "Guardrails"
                  ],
                  "line": 11,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{ SalvaCellAgentExecutor, OllamaError, ToolError, ValidationError }",
                  "type": "commonjs",
                  "line": 160
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "clientHistorySearchEngine.js",
              "path": "src\\services\\clientHistorySearchEngine.js",
              "size": 24743,
              "lines": 804,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "searchClientHistory",
                  "type": "unknown",
                  "line": 64,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 73,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 122,
                  "isExported": false
                },
                {
                  "name": "normalizeClientIdentifier",
                  "type": "unknown",
                  "line": 135,
                  "isExported": false
                },
                {
                  "name": "searchByAlternativeIdentifiers",
                  "type": "unknown",
                  "line": 191,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 195,
                  "isExported": false
                },
                {
                  "name": "generateAlternativeIdentifiers",
                  "type": "unknown",
                  "line": 223,
                  "isExported": false
                },
                {
                  "name": "formatClientHistory",
                  "type": "unknown",
                  "line": 260,
                  "isExported": false
                },
                {
                  "name": "extractClientProfile",
                  "type": "unknown",
                  "line": 307,
                  "isExported": false
                },
                {
                  "name": "groupByIntent",
                  "type": "unknown",
                  "line": 431,
                  "isExported": false
                },
                {
                  "name": "analyzeTemporalPatterns",
                  "type": "unknown",
                  "line": 481,
                  "isExported": false
                },
                {
                  "name": "searchInClientHistory",
                  "type": "unknown",
                  "line": 509,
                  "isExported": false
                },
                {
                  "name": "processSearchResults",
                  "type": "unknown",
                  "line": 579,
                  "isExported": false
                },
                {
                  "name": "removeDuplicateResults",
                  "type": "unknown",
                  "line": 600,
                  "isExported": false
                },
                {
                  "name": "calculateInteractionFrequency",
                  "type": "unknown",
                  "line": 615,
                  "isExported": false
                },
                {
                  "name": "calculateProfileConfidence",
                  "type": "unknown",
                  "line": 626,
                  "isExported": false
                },
                {
                  "name": "enrichResultsWithClientContext",
                  "type": "unknown",
                  "line": 644,
                  "isExported": false
                },
                {
                  "name": "calculateProfileRelevance",
                  "type": "unknown",
                  "line": 661,
                  "isExported": false
                },
                {
                  "name": "getAppliedFilters",
                  "type": "unknown",
                  "line": 677,
                  "isExported": false
                },
                {
                  "name": "getEmptyClientHistory",
                  "type": "unknown",
                  "line": 686,
                  "isExported": false
                },
                {
                  "name": "getCachedResult",
                  "type": "unknown",
                  "line": 708,
                  "isExported": false
                },
                {
                  "name": "cacheResult",
                  "type": "unknown",
                  "line": 721,
                  "isExported": false
                },
                {
                  "name": "generateCacheKey",
                  "type": "unknown",
                  "line": 734,
                  "isExported": false
                },
                {
                  "name": "cleanExpiredCache",
                  "type": "unknown",
                  "line": 743,
                  "isExported": false
                },
                {
                  "name": "getSearchStats",
                  "type": "unknown",
                  "line": 755,
                  "isExported": false
                },
                {
                  "name": "clearCache",
                  "type": "unknown",
                  "line": 780,
                  "isExported": false
                },
                {
                  "name": "resetMetrics",
                  "type": "unknown",
                  "line": 788,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ClientHistorySearchEngine",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "searchClientHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeClientIdentifier",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "searchByAlternativeIdentifiers",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateAlternativeIdentifiers",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "formatClientHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractClientProfile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "groupByIntent",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeTemporalPatterns",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "searchInClientHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processSearchResults",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "removeDuplicateResults",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateInteractionFrequency",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateProfileConfidence",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "enrichResultsWithClientContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateProfileRelevance",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getAppliedFilters",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getEmptyClientHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getCachedResult",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cacheResult",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateCacheKey",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanExpiredCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getSearchStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "clearCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    ClientHistorySearchEngine\n}",
                  "type": "commonjs",
                  "line": 801
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "conversationMemory.js",
              "path": "src\\services\\conversationMemory.js",
              "size": 38386,
              "lines": 1234,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 55,
                  "isExported": false
                },
                {
                  "name": "generate",
                  "type": "unknown",
                  "line": 64,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 72,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 86,
                  "isExported": false
                },
                {
                  "name": "generateQuery",
                  "type": "unknown",
                  "line": 98,
                  "isExported": false
                },
                {
                  "name": "generateDocument",
                  "type": "unknown",
                  "line": 111,
                  "isExported": false
                },
                {
                  "name": "initialize",
                  "type": "unknown",
                  "line": 195,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 197,
                  "isExported": false
                },
                {
                  "name": "storeConversationChunk",
                  "type": "unknown",
                  "line": 227,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 260,
                  "isExported": false
                },
                {
                  "name": "searchConversationMemory",
                  "type": "unknown",
                  "line": 377,
                  "isExported": false
                },
                {
                  "name": "searchConversationMemoryFallback",
                  "type": "unknown",
                  "line": 484,
                  "isExported": false
                },
                {
                  "name": "getClientMemory",
                  "type": "unknown",
                  "line": 535,
                  "isExported": false
                },
                {
                  "name": "getClientMemoryFallback",
                  "type": "unknown",
                  "line": 630,
                  "isExported": false
                },
                {
                  "name": "storeTraditionalChunk",
                  "type": "unknown",
                  "line": 682,
                  "isExported": false
                },
                {
                  "name": "createChunkText",
                  "type": "unknown",
                  "line": 746,
                  "isExported": false
                },
                {
                  "name": "buildWhereFilter",
                  "type": "unknown",
                  "line": 753,
                  "isExported": false
                },
                {
                  "name": "classifyResponseType",
                  "type": "unknown",
                  "line": 782,
                  "isExported": false
                },
                {
                  "name": "getHourCategory",
                  "type": "unknown",
                  "line": 798,
                  "isExported": false
                },
                {
                  "name": "storeInPostgreSQL",
                  "type": "unknown",
                  "line": 808,
                  "isExported": false
                },
                {
                  "name": "ensureInitialized",
                  "type": "unknown",
                  "line": 846,
                  "isExported": false
                },
                {
                  "name": "getMemoryStats",
                  "type": "unknown",
                  "line": 859,
                  "isExported": false
                },
                {
                  "name": "calculateSystemHealth",
                  "type": "unknown",
                  "line": 899,
                  "isExported": false
                },
                {
                  "name": "getRecentChunksForDeduplication",
                  "type": "unknown",
                  "line": 943,
                  "isExported": false
                },
                {
                  "name": "searchClientHistory",
                  "type": "unknown",
                  "line": 983,
                  "isExported": false
                },
                {
                  "name": "searchInClientHistory",
                  "type": "unknown",
                  "line": 1005,
                  "isExported": false
                },
                {
                  "name": "getClientProfile",
                  "type": "unknown",
                  "line": 1030,
                  "isExported": false
                },
                {
                  "name": "findSimilarClients",
                  "type": "unknown",
                  "line": 1059,
                  "isExported": false
                },
                {
                  "name": "calculateLoyaltyScore",
                  "type": "unknown",
                  "line": 1101,
                  "isExported": false
                },
                {
                  "name": "configureSemanticChunker",
                  "type": "unknown",
                  "line": 1136,
                  "isExported": false
                },
                {
                  "name": "configureMetadataEnhancer",
                  "type": "unknown",
                  "line": 1148,
                  "isExported": false
                },
                {
                  "name": "getArchitecturalHealth",
                  "type": "unknown",
                  "line": 1160,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "EnhancedLangChainEmbeddingAdapter",
                  "extends": null,
                  "line": 54,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "generate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateDocument",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                },
                {
                  "name": "ConversationMemory",
                  "extends": null,
                  "line": 140,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "initialize",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "storeConversationChunk",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "searchConversationMemory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "searchConversationMemoryFallback",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getClientMemory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getClientMemoryFallback",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "storeTraditionalChunk",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createChunkText",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "buildWhereFilter",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "classifyResponseType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getHourCategory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "storeInPostgreSQL",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "ensureInitialized",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getMemoryStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateSystemHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getRecentChunksForDeduplication",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "searchClientHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "searchInClientHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getClientProfile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "findSimilarClients",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateLoyaltyScore",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "configureSemanticChunker",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "configureMetadataEnhancer",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getArchitecturalHealth",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 5,
                  "isLocal": false
                },
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "./embeddingEngine",
                  "default": null,
                  "named": [
                    "embeddingEngine",
                    "getEmbedding"
                  ],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "./semanticChunker",
                  "default": null,
                  "named": [
                    "SemanticChunker"
                  ],
                  "line": 8,
                  "isLocal": true
                },
                {
                  "source": "./deterministicSearchEngine",
                  "default": null,
                  "named": [
                    "DeterministicSearchEngine"
                  ],
                  "line": 9,
                  "isLocal": true
                },
                {
                  "source": "./dynamicLimitOptimizer",
                  "default": null,
                  "named": [
                    "DynamicLimitOptimizer"
                  ],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "./markdownContextEnricher",
                  "default": null,
                  "named": [
                    "MarkdownContextEnricher"
                  ],
                  "line": 11,
                  "isLocal": true
                },
                {
                  "source": "./simpleDeduplicationEngine",
                  "default": null,
                  "named": [
                    "SimpleDeduplicationEngine"
                  ],
                  "line": 12,
                  "isLocal": true
                },
                {
                  "source": "./metadataEnhancer",
                  "default": null,
                  "named": [
                    "MetadataEnhancer"
                  ],
                  "line": 13,
                  "isLocal": true
                },
                {
                  "source": "./clientHistorySearchEngine",
                  "default": null,
                  "named": [
                    "ClientHistorySearchEngine"
                  ],
                  "line": 14,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 15,
                  "isLocal": true
                },
                {
                  "source": "url",
                  "default": null,
                  "named": [
                    "URL"
                  ],
                  "line": 38,
                  "isLocal": false
                }
              ],
              "exports": [
                {
                  "name": "{\n  ConversationMemory,\n  conversationMemory,\n}",
                  "type": "commonjs",
                  "line": 1230
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "deterministicSearchEngine.js",
              "path": "src\\services\\deterministicSearchEngine.js",
              "size": 27880,
              "lines": 723,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 22,
                  "isExported": false
                },
                {
                  "name": "performStabilizedSearch",
                  "type": "unknown",
                  "line": 118,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 132,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 168,
                  "isExported": false
                },
                {
                  "name": "performMultipleSearches",
                  "type": "unknown",
                  "line": 182,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 187,
                  "isExported": false
                },
                {
                  "name": "performSingleSearch",
                  "type": "unknown",
                  "line": 217,
                  "isExported": false
                },
                {
                  "name": "stabilizeResults",
                  "type": "unknown",
                  "line": 249,
                  "isExported": false
                },
                {
                  "name": "enrichWithMarkdownContext",
                  "type": "unknown",
                  "line": 344,
                  "isExported": false
                },
                {
                  "name": "detectQueryContext",
                  "type": "unknown",
                  "line": 398,
                  "isExported": false
                },
                {
                  "name": "generateQueryHash",
                  "type": "unknown",
                  "line": 429,
                  "isExported": false
                },
                {
                  "name": "normalizeFilters",
                  "type": "unknown",
                  "line": 449,
                  "isExported": false
                },
                {
                  "name": "getCachedResult",
                  "type": "unknown",
                  "line": 465,
                  "isExported": false
                },
                {
                  "name": "cacheResults",
                  "type": "unknown",
                  "line": 482,
                  "isExported": false
                },
                {
                  "name": "getCacheByContext",
                  "type": "unknown",
                  "line": 500,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 501,
                  "isExported": false
                },
                {
                  "name": "cleanupCache",
                  "type": "unknown",
                  "line": 515,
                  "isExported": false
                },
                {
                  "name": "invalidatePriceCache",
                  "type": "unknown",
                  "line": 543,
                  "isExported": false
                },
                {
                  "name": "performFallbackSearch",
                  "type": "unknown",
                  "line": 555,
                  "isExported": false
                },
                {
                  "name": "containsAny",
                  "type": "unknown",
                  "line": 575,
                  "isExported": false
                },
                {
                  "name": "buildWhereFilter",
                  "type": "unknown",
                  "line": 579,
                  "isExported": false
                },
                {
                  "name": "recordMetrics",
                  "type": "unknown",
                  "line": 609,
                  "isExported": false
                },
                {
                  "name": "getDeterminismStats",
                  "type": "unknown",
                  "line": 632,
                  "isExported": false
                },
                {
                  "name": "getContextHealth",
                  "type": "unknown",
                  "line": 659,
                  "isExported": false
                },
                {
                  "name": "calculateContextHealth",
                  "type": "unknown",
                  "line": 675,
                  "isExported": false
                },
                {
                  "name": "performMaintenance",
                  "type": "unknown",
                  "line": 690,
                  "isExported": false
                },
                {
                  "name": "resetMetrics",
                  "type": "unknown",
                  "line": 707,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "DeterministicSearchEngine",
                  "extends": null,
                  "line": 21,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "performStabilizedSearch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performMultipleSearches",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performSingleSearch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "stabilizeResults",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "enrichWithMarkdownContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectQueryContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateQueryHash",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeFilters",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getCachedResult",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cacheResults",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getCacheByContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanupCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "invalidatePriceCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performFallbackSearch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "containsAny",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "buildWhereFilter",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getDeterminismStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getContextHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateContextHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performMaintenance",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "crypto",
                  "default": "crypto",
                  "named": [],
                  "line": 7,
                  "isLocal": false
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 8,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    DeterministicSearchEngine\n}",
                  "type": "commonjs",
                  "line": 721
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "dynamicLimitOptimizer.js",
              "path": "src\\services\\dynamicLimitOptimizer.js",
              "size": 22909,
              "lines": 589,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "optimizeLimits",
                  "type": "unknown",
                  "line": 147,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 187,
                  "isExported": false
                },
                {
                  "name": "analyzeQueryComplexity",
                  "type": "unknown",
                  "line": 198,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 209,
                  "isExported": false
                },
                {
                  "name": "detectQueryContext",
                  "type": "unknown",
                  "line": 252,
                  "isExported": false
                },
                {
                  "name": "isMultiDeviceQuery",
                  "type": "unknown",
                  "line": 293,
                  "isExported": false
                },
                {
                  "name": "calculateOptimalLimits",
                  "type": "unknown",
                  "line": 316,
                  "isExported": false
                },
                {
                  "name": "applySafetyConstraints",
                  "type": "unknown",
                  "line": 361,
                  "isExported": false
                },
                {
                  "name": "determineSearchStrategy",
                  "type": "unknown",
                  "line": 388,
                  "isExported": false
                },
                {
                  "name": "estimateSearchTime",
                  "type": "unknown",
                  "line": 404,
                  "isExported": false
                },
                {
                  "name": "getComplexityWeight",
                  "type": "unknown",
                  "line": 429,
                  "isExported": false
                },
                {
                  "name": "getComplexityLevel",
                  "type": "unknown",
                  "line": 440,
                  "isExported": false
                },
                {
                  "name": "containsAny",
                  "type": "unknown",
                  "line": 447,
                  "isExported": false
                },
                {
                  "name": "getFallbackLimits",
                  "type": "unknown",
                  "line": 451,
                  "isExported": false
                },
                {
                  "name": "recordOptimization",
                  "type": "unknown",
                  "line": 470,
                  "isExported": false
                },
                {
                  "name": "updateAverage",
                  "type": "unknown",
                  "line": 498,
                  "isExported": false
                },
                {
                  "name": "getOptimizationStats",
                  "type": "unknown",
                  "line": 505,
                  "isExported": false
                },
                {
                  "name": "getContextHealth",
                  "type": "unknown",
                  "line": 516,
                  "isExported": false
                },
                {
                  "name": "calculateSystemHealth",
                  "type": "unknown",
                  "line": 538,
                  "isExported": false
                },
                {
                  "name": "performMaintenance",
                  "type": "unknown",
                  "line": 561,
                  "isExported": false
                },
                {
                  "name": "resetOldMetrics",
                  "type": "unknown",
                  "line": 573,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "DynamicLimitOptimizer",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "optimizeLimits",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeQueryComplexity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectQueryContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "isMultiDeviceQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateOptimalLimits",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "applySafetyConstraints",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "determineSearchStrategy",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "estimateSearchTime",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getComplexityWeight",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getComplexityLevel",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "containsAny",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getFallbackLimits",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordOptimization",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateAverage",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getOptimizationStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getContextHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateSystemHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performMaintenance",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetOldMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    DynamicLimitOptimizer\n}",
                  "type": "commonjs",
                  "line": 587
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 2",
          "files": [
            {
              "name": "embeddingCircuitBreaker.js",
              "path": "src\\services\\embeddingCircuitBreaker.js",
              "size": 20809,
              "lines": 605,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "execute",
                  "type": "unknown",
                  "line": 85,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 96,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 108,
                  "isExported": false
                },
                {
                  "name": "canExecuteOperation",
                  "type": "unknown",
                  "line": 125,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 128,
                  "isExported": false
                },
                {
                  "name": "canExecuteInDegradedMode",
                  "type": "unknown",
                  "line": 166,
                  "isExported": false
                },
                {
                  "name": "executeWithTimeout",
                  "type": "unknown",
                  "line": 196,
                  "isExported": false
                },
                {
                  "name": "handleBlockedOperation",
                  "type": "unknown",
                  "line": 219,
                  "isExported": false
                },
                {
                  "name": "recordSuccess",
                  "type": "unknown",
                  "line": 238,
                  "isExported": false
                },
                {
                  "name": "recordFailure",
                  "type": "unknown",
                  "line": 261,
                  "isExported": false
                },
                {
                  "name": "checkStateTransitionsOnSuccess",
                  "type": "unknown",
                  "line": 285,
                  "isExported": false
                },
                {
                  "name": "checkStateTransitionsOnFailure",
                  "type": "unknown",
                  "line": 305,
                  "isExported": false
                },
                {
                  "name": "transitionToClosed",
                  "type": "unknown",
                  "line": 334,
                  "isExported": false
                },
                {
                  "name": "transitionToOpen",
                  "type": "unknown",
                  "line": 341,
                  "isExported": false
                },
                {
                  "name": "transitionToHalfOpen",
                  "type": "unknown",
                  "line": 351,
                  "isExported": false
                },
                {
                  "name": "transitionToDegraded",
                  "type": "unknown",
                  "line": 359,
                  "isExported": false
                },
                {
                  "name": "shouldAttemptRecovery",
                  "type": "unknown",
                  "line": 372,
                  "isExported": false
                },
                {
                  "name": "shouldUseDegradedMode",
                  "type": "unknown",
                  "line": 376,
                  "isExported": false
                },
                {
                  "name": "isOperationCritical",
                  "type": "unknown",
                  "line": 385,
                  "isExported": false
                },
                {
                  "name": "initializeFallbackStrategies",
                  "type": "unknown",
                  "line": 409,
                  "isExported": false
                },
                {
                  "name": "hasFallbackStrategy",
                  "type": "unknown",
                  "line": 448,
                  "isExported": false
                },
                {
                  "name": "executeFallback",
                  "type": "unknown",
                  "line": 453,
                  "isExported": false
                },
                {
                  "name": "getTimeoutForContext",
                  "type": "unknown",
                  "line": 485,
                  "isExported": false
                },
                {
                  "name": "generateOperationId",
                  "type": "unknown",
                  "line": 499,
                  "isExported": false
                },
                {
                  "name": "recordOperationAttempt",
                  "type": "unknown",
                  "line": 503,
                  "isExported": false
                },
                {
                  "name": "addToHistory",
                  "type": "unknown",
                  "line": 507,
                  "isExported": false
                },
                {
                  "name": "resetMetrics",
                  "type": "unknown",
                  "line": 516,
                  "isExported": false
                },
                {
                  "name": "notifyStateChange",
                  "type": "unknown",
                  "line": 522,
                  "isExported": false
                },
                {
                  "name": "getStatus",
                  "type": "unknown",
                  "line": 541,
                  "isExported": false
                },
                {
                  "name": "calculateHealthScore",
                  "type": "unknown",
                  "line": 571,
                  "isExported": false
                },
                {
                  "name": "getOperationHistory",
                  "type": "unknown",
                  "line": 588,
                  "isExported": false
                },
                {
                  "name": "reset",
                  "type": "unknown",
                  "line": 592,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "EmbeddingCircuitBreaker",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "execute",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "canExecuteOperation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "canExecuteInDegradedMode",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "executeWithTimeout",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "handleBlockedOperation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordSuccess",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordFailure",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkStateTransitionsOnSuccess",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkStateTransitionsOnFailure",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "transitionToClosed",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "transitionToOpen",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "transitionToHalfOpen",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "transitionToDegraded",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "shouldAttemptRecovery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "shouldUseDegradedMode",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "isOperationCritical",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "initializeFallbackStrategies",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "hasFallbackStrategy",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "executeFallback",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getTimeoutForContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateOperationId",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordOperationAttempt",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "addToHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "notifyStateChange",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStatus",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateHealthScore",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getOperationHistory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "reset",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    EmbeddingCircuitBreaker\n}",
                  "type": "commonjs",
                  "line": 603
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "embeddingEngine.js",
              "path": "src\\services\\embeddingEngine.js",
              "size": 1861,
              "lines": 39,
              "functions": [
                {
                  "name": "getEmbeddingEngine",
                  "type": "function",
                  "line": 15,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 16,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 28,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "@langchain/community/embeddings/ollama",
                  "default": null,
                  "named": [
                    "OllamaEmbeddings"
                  ],
                  "line": 1,
                  "isLocal": false
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 2,
                  "isLocal": true
                },
                {
                  "source": "../utils/retryHandler",
                  "default": "retryHandler",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    getEmbeddingEngine // Solo exportar la funci√≥n, la instancia se obtiene as√≠ncronamente\n}",
                  "type": "commonjs",
                  "line": 37
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "guardrails.js",
              "path": "src\\services\\guardrails.js",
              "size": 5443,
              "lines": 133,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 11,
                  "isExported": false
                },
                {
                  "name": "processResponse",
                  "type": "unknown",
                  "line": 30,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 34,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 36,
                  "isExported": false
                },
                {
                  "name": "checkNoPromises",
                  "type": "unknown",
                  "line": 59,
                  "isExported": false
                },
                {
                  "name": "checkNoToxicity",
                  "type": "unknown",
                  "line": 71,
                  "isExported": false
                },
                {
                  "name": "checkNoOffTopic",
                  "type": "unknown",
                  "line": 84,
                  "isExported": false
                },
                {
                  "name": "checkNoPersonalOpinions",
                  "type": "unknown",
                  "line": 100,
                  "isExported": false
                },
                {
                  "name": "checkNoSensitiveInfoRequest",
                  "type": "unknown",
                  "line": 112,
                  "isExported": false
                },
                {
                  "name": "checkResponseLength",
                  "type": "unknown",
                  "line": 124,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "Guardrails",
                  "extends": null,
                  "line": 10,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "processResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkNoPromises",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkNoToxicity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkNoOffTopic",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkNoPersonalOpinions",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkNoSensitiveInfoRequest",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkResponseLength",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "../utils/config",
                  "default": "config",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{ Guardrails }",
                  "type": "commonjs",
                  "line": 133
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "hallucinationDetector.js",
              "path": "src\\services\\hallucinationDetector.js",
              "size": 1315,
              "lines": 34,
              "functions": [
                {
                  "name": "detectHallucination",
                  "type": "function",
                  "line": 13,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "../utils/responseValidator",
                  "default": null,
                  "named": [
                    "responseValidatorPipeline"
                  ],
                  "line": 5,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    detectHallucination\n}",
                  "type": "commonjs",
                  "line": 31
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "markdownContextEnricher.js",
              "path": "src\\services\\markdownContextEnricher.js",
              "size": 19554,
              "lines": 560,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 23,
                  "isExported": false
                },
                {
                  "name": "initializeCache",
                  "type": "unknown",
                  "line": 78,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 82,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 89,
                  "isExported": false
                },
                {
                  "name": "refreshMarkdownCache",
                  "type": "unknown",
                  "line": 98,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 117,
                  "isExported": false
                },
                {
                  "name": "extractBrandFromFilename",
                  "type": "unknown",
                  "line": 155,
                  "isExported": false
                },
                {
                  "name": "parseMarkdownContent",
                  "type": "unknown",
                  "line": 167,
                  "isExported": false
                },
                {
                  "name": "extractPriceRanges",
                  "type": "unknown",
                  "line": 200,
                  "isExported": false
                },
                {
                  "name": "extractServiceTypes",
                  "type": "unknown",
                  "line": 219,
                  "isExported": false
                },
                {
                  "name": "extractMetadata",
                  "type": "unknown",
                  "line": 236,
                  "isExported": false
                },
                {
                  "name": "parseTableModels",
                  "type": "unknown",
                  "line": 271,
                  "isExported": false
                },
                {
                  "name": "parsePrice",
                  "type": "unknown",
                  "line": 301,
                  "isExported": false
                },
                {
                  "name": "buildGlobalMetadata",
                  "type": "unknown",
                  "line": 311,
                  "isExported": false
                },
                {
                  "name": "enrichSearchResults",
                  "type": "unknown",
                  "line": 341,
                  "isExported": false
                },
                {
                  "name": "detectEnrichmentType",
                  "type": "unknown",
                  "line": 375,
                  "isExported": false
                },
                {
                  "name": "extractBrandsFromQuery",
                  "type": "unknown",
                  "line": 391,
                  "isExported": false
                },
                {
                  "name": "buildEnrichmentForResult",
                  "type": "unknown",
                  "line": 407,
                  "isExported": false
                },
                {
                  "name": "forEach",
                  "type": "arrow",
                  "line": 423,
                  "isExported": false
                },
                {
                  "name": "getRelevantGlobalInfo",
                  "type": "unknown",
                  "line": 495,
                  "isExported": false
                },
                {
                  "name": "getBrandInfo",
                  "type": "unknown",
                  "line": 527,
                  "isExported": false
                },
                {
                  "name": "getGlobalMetadata",
                  "type": "unknown",
                  "line": 531,
                  "isExported": false
                },
                {
                  "name": "getStandardInfo",
                  "type": "unknown",
                  "line": 535,
                  "isExported": false
                },
                {
                  "name": "getCacheStats",
                  "type": "unknown",
                  "line": 539,
                  "isExported": false
                },
                {
                  "name": "forceRefresh",
                  "type": "unknown",
                  "line": 552,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "MarkdownContextEnricher",
                  "extends": null,
                  "line": 22,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "initializeCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "refreshMarkdownCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractBrandFromFilename",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseMarkdownContent",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractPriceRanges",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractServiceTypes",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseTableModels",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parsePrice",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "buildGlobalMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "enrichSearchResults",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectEnrichmentType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractBrandsFromQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "buildEnrichmentForResult",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "forEach",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getRelevantGlobalInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getBrandInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getGlobalMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStandardInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getCacheStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "forceRefresh",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 7,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 8,
                  "isLocal": false
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 9,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    MarkdownContextEnricher\n}",
                  "type": "commonjs",
                  "line": 558
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 3",
          "files": [
            {
              "name": "markdownMetadataExtractor.js",
              "path": "src\\services\\markdownMetadataExtractor.js",
              "size": 18701,
              "lines": 592,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 23,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 84,
                  "isExported": false
                },
                {
                  "name": "initializeCache",
                  "type": "unknown",
                  "line": 93,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 106,
                  "isExported": false
                },
                {
                  "name": "refreshCache",
                  "type": "unknown",
                  "line": 115,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 132,
                  "isExported": false
                },
                {
                  "name": "extractMetadataFromFile",
                  "type": "unknown",
                  "line": 170,
                  "isExported": false
                },
                {
                  "name": "extractBasicInfoFromContent",
                  "type": "unknown",
                  "line": 205,
                  "isExported": false
                },
                {
                  "name": "extractBrandFromFilename",
                  "type": "unknown",
                  "line": 258,
                  "isExported": false
                },
                {
                  "name": "getDeviceInfo",
                  "type": "unknown",
                  "line": 273,
                  "isExported": false
                },
                {
                  "name": "getGlobalInfo",
                  "type": "unknown",
                  "line": 341,
                  "isExported": false
                },
                {
                  "name": "getBrandInfo",
                  "type": "unknown",
                  "line": 354,
                  "isExported": false
                },
                {
                  "name": "getAllBrands",
                  "type": "unknown",
                  "line": 383,
                  "isExported": false
                },
                {
                  "name": "getGlobalStats",
                  "type": "unknown",
                  "line": 397,
                  "isExported": false
                },
                {
                  "name": "searchInMetadata",
                  "type": "unknown",
                  "line": 422,
                  "isExported": false
                },
                {
                  "name": "ensureCacheValid",
                  "type": "unknown",
                  "line": 471,
                  "isExported": false
                },
                {
                  "name": "getTotalModelsCount",
                  "type": "unknown",
                  "line": 483,
                  "isExported": false
                },
                {
                  "name": "getCacheStats",
                  "type": "unknown",
                  "line": 496,
                  "isExported": false
                },
                {
                  "name": "forceRefresh",
                  "type": "unknown",
                  "line": 513,
                  "isExported": false
                },
                {
                  "name": "clearCache",
                  "type": "unknown",
                  "line": 522,
                  "isExported": false
                },
                {
                  "name": "healthCheck",
                  "type": "unknown",
                  "line": 538,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "MarkdownMetadataExtractor",
                  "extends": null,
                  "line": 22,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "initializeCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "refreshCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractMetadataFromFile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractBasicInfoFromContent",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractBrandFromFilename",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getDeviceInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getGlobalInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getBrandInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getAllBrands",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getGlobalStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "searchInMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "ensureCacheValid",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getTotalModelsCount",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getCacheStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "forceRefresh",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "clearCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "healthCheck",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 7,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 8,
                  "isLocal": false
                },
                {
                  "source": "js-yaml",
                  "default": "yaml",
                  "named": [],
                  "line": 9,
                  "isLocal": false
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 10,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    MarkdownMetadataExtractor\n}",
                  "type": "commonjs",
                  "line": 590
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "metadataEnhancer.js",
              "path": "src\\services\\metadataEnhancer.js",
              "size": 23316,
              "lines": 668,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 37,
                  "isExported": false
                },
                {
                  "name": "enhanceMetadata",
                  "type": "unknown",
                  "line": 121,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 172,
                  "isExported": false
                },
                {
                  "name": "cleanRawMetadata",
                  "type": "unknown",
                  "line": 183,
                  "isExported": false
                },
                {
                  "name": "validateMetadata",
                  "type": "unknown",
                  "line": 210,
                  "isExported": false
                },
                {
                  "name": "validateField",
                  "type": "unknown",
                  "line": 256,
                  "isExported": false
                },
                {
                  "name": "enrichWithMarkdownData",
                  "type": "unknown",
                  "line": 294,
                  "isExported": false
                },
                {
                  "name": "applyAutoEnrichment",
                  "type": "unknown",
                  "line": 343,
                  "isExported": false
                },
                {
                  "name": "finalizeMetadata",
                  "type": "unknown",
                  "line": 371,
                  "isExported": false
                },
                {
                  "name": "isValidType",
                  "type": "unknown",
                  "line": 388,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 391,
                  "isExported": false
                },
                {
                  "name": "isChromaCompatibleType",
                  "type": "unknown",
                  "line": 403,
                  "isExported": false
                },
                {
                  "name": "attemptTypeConversion",
                  "type": "unknown",
                  "line": 408,
                  "isExported": false
                },
                {
                  "name": "mapToValidEnum",
                  "type": "unknown",
                  "line": 447,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 484,
                  "isExported": false
                },
                {
                  "name": "normalizeFieldName",
                  "type": "unknown",
                  "line": 497,
                  "isExported": false
                },
                {
                  "name": "normalizeClientId",
                  "type": "unknown",
                  "line": 514,
                  "isExported": false
                },
                {
                  "name": "normalizeTimestamp",
                  "type": "unknown",
                  "line": 532,
                  "isExported": false
                },
                {
                  "name": "normalizeIntent",
                  "type": "unknown",
                  "line": 547,
                  "isExported": false
                },
                {
                  "name": "cleanFieldValue",
                  "type": "unknown",
                  "line": 558,
                  "isExported": false
                },
                {
                  "name": "calculateConfidenceScore",
                  "type": "unknown",
                  "line": 578,
                  "isExported": false
                },
                {
                  "name": "mapServiceType",
                  "type": "unknown",
                  "line": 590,
                  "isExported": false
                },
                {
                  "name": "extractDeviceBrand",
                  "type": "unknown",
                  "line": 603,
                  "isExported": false
                },
                {
                  "name": "createFallbackMetadata",
                  "type": "unknown",
                  "line": 622,
                  "isExported": false
                },
                {
                  "name": "getEnhancementStats",
                  "type": "unknown",
                  "line": 637,
                  "isExported": false
                },
                {
                  "name": "resetMetrics",
                  "type": "unknown",
                  "line": 653,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "MetadataEnhancer",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "enhanceMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanRawMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validateMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validateField",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "enrichWithMarkdownData",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "applyAutoEnrichment",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "finalizeMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "isValidType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "isChromaCompatibleType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "attemptTypeConversion",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "mapToValidEnum",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeFieldName",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeClientId",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeTimestamp",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeIntent",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanFieldValue",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateConfidenceScore",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "mapServiceType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractDeviceBrand",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createFallbackMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getEnhancementStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./markdownMetadataExtractor",
                  "default": null,
                  "named": [
                    "MarkdownMetadataExtractor"
                  ],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 8,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    MetadataEnhancer\n}",
                  "type": "commonjs",
                  "line": 666
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "priceExtractionSystem.js",
              "path": "src\\services\\priceExtractionSystem.js",
              "size": 11948,
              "lines": 276,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 36,
                  "isExported": false
                },
                {
                  "name": "extractWithLLM",
                  "type": "unknown",
                  "line": 44,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 53,
                  "isExported": false
                },
                {
                  "name": "extractPrice",
                  "type": "unknown",
                  "line": 59,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 67,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 79,
                  "isExported": false
                },
                {
                  "name": "exactDatabaseMatch",
                  "type": "unknown",
                  "line": 119,
                  "isExported": false
                },
                {
                  "name": "fuzzyDatabaseMatch",
                  "type": "unknown",
                  "line": 146,
                  "isExported": false
                },
                {
                  "name": "fallbackSearch",
                  "type": "unknown",
                  "line": 210,
                  "isExported": false
                },
                {
                  "name": "normalizeQuery",
                  "type": "unknown",
                  "line": 244,
                  "isExported": false
                },
                {
                  "name": "getStrategyName",
                  "type": "unknown",
                  "line": 252,
                  "isExported": false
                },
                {
                  "name": "validateResult",
                  "type": "unknown",
                  "line": 261,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "PriceExtractionSystem",
                  "extends": null,
                  "line": 35,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "extractWithLLM",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractPrice",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "exactDatabaseMatch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "fuzzyDatabaseMatch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "fallbackSearch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "normalizeQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStrategyName",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validateResult",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 2,
                  "isLocal": true
                },
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "./embeddingEngine",
                  "default": null,
                  "named": [
                    "getEmbeddingEngine"
                  ],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "./knowledge/KnowledgeCoherenceLayer",
                  "default": null,
                  "named": [
                    "KnowledgeCoherenceLayer"
                  ],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "@langchain/community/chat_models/ollama",
                  "default": null,
                  "named": [
                    "ChatOllama"
                  ],
                  "line": 7,
                  "isLocal": false
                },
                {
                  "source": "@langchain/core/output_parsers",
                  "default": null,
                  "named": [
                    "JsonOutputParser"
                  ],
                  "line": 8,
                  "isLocal": false
                },
                {
                  "source": "../utils/config",
                  "default": "config",
                  "named": [],
                  "line": 9,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    PriceExtractionSystem,\n    priceExtractionSystem\n}",
                  "type": "commonjs",
                  "line": 273
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "semanticCache.js",
              "path": "src\\services\\semanticCache.js",
              "size": 9004,
              "lines": 217,
              "functions": [
                {
                  "name": "initializeCache",
                  "type": "function",
                  "line": 37,
                  "isExported": false
                },
                {
                  "name": "findInCache",
                  "type": "function",
                  "line": 68,
                  "isExported": false
                },
                {
                  "name": "addToCache",
                  "type": "function",
                  "line": 132,
                  "isExported": false
                },
                {
                  "name": "invalidateCache",
                  "type": "function",
                  "line": 165,
                  "isExported": false
                },
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 17,
                  "isExported": false
                },
                {
                  "name": "generate",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 41,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 55,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 180,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "LangChainEmbeddingAdapter",
                  "extends": null,
                  "line": 16,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "generate",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 1,
                  "isLocal": false
                },
                {
                  "source": "./embeddingEngine",
                  "default": null,
                  "named": [
                    "getEmbeddingEngine"
                  ],
                  "line": 2,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "../utils/retryHandler",
                  "default": "retryHandler",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    findInCache,\n    addToCache,\n    invalidateCache,\n    initializeCache // Exportar para permitir inicializaci√≥n expl√≠cita si es necesario\n}",
                  "type": "commonjs",
                  "line": 212
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "semanticChunker.js",
              "path": "src\\services\\semanticChunker.js",
              "size": 26314,
              "lines": 675,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "createSemanticChunks",
                  "type": "unknown",
                  "line": 81,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 113,
                  "isExported": false
                },
                {
                  "name": "createSlidingWindowChunks",
                  "type": "unknown",
                  "line": 129,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 135,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 144,
                  "isExported": false
                },
                {
                  "name": "createContextualChunk",
                  "type": "unknown",
                  "line": 178,
                  "isExported": false
                },
                {
                  "name": "extractMarkdownContext",
                  "type": "unknown",
                  "line": 246,
                  "isExported": false
                },
                {
                  "name": "buildEnhancedMetadata",
                  "type": "unknown",
                  "line": 280,
                  "isExported": false
                },
                {
                  "name": "analyzeConversationFlow",
                  "type": "unknown",
                  "line": 327,
                  "isExported": false
                },
                {
                  "name": "calculateSemanticDensity",
                  "type": "unknown",
                  "line": 359,
                  "isExported": false
                },
                {
                  "name": "determineFlowStage",
                  "type": "unknown",
                  "line": 396,
                  "isExported": false
                },
                {
                  "name": "calculateContinuityScore",
                  "type": "unknown",
                  "line": 414,
                  "isExported": false
                },
                {
                  "name": "areRelatedIntents",
                  "type": "unknown",
                  "line": 459,
                  "isExported": false
                },
                {
                  "name": "extractMarkdownKeywords",
                  "type": "unknown",
                  "line": 479,
                  "isExported": false
                },
                {
                  "name": "createConversationEntry",
                  "type": "unknown",
                  "line": 490,
                  "isExported": false
                },
                {
                  "name": "updateConversationBuffer",
                  "type": "unknown",
                  "line": 501,
                  "isExported": false
                },
                {
                  "name": "getClientConversations",
                  "type": "unknown",
                  "line": 517,
                  "isExported": false
                },
                {
                  "name": "getWindowConfig",
                  "type": "unknown",
                  "line": 521,
                  "isExported": false
                },
                {
                  "name": "createFallbackChunk",
                  "type": "unknown",
                  "line": 536,
                  "isExported": false
                },
                {
                  "name": "truncateChunk",
                  "type": "unknown",
                  "line": 554,
                  "isExported": false
                },
                {
                  "name": "containsAny",
                  "type": "unknown",
                  "line": 568,
                  "isExported": false
                },
                {
                  "name": "classifyResponseType",
                  "type": "unknown",
                  "line": 573,
                  "isExported": false
                },
                {
                  "name": "getHourCategory",
                  "type": "unknown",
                  "line": 582,
                  "isExported": false
                },
                {
                  "name": "getChunkerStats",
                  "type": "unknown",
                  "line": 594,
                  "isExported": false
                },
                {
                  "name": "detectPattern",
                  "type": "unknown",
                  "line": 623,
                  "isExported": false
                },
                {
                  "name": "matchesPattern",
                  "type": "unknown",
                  "line": 654,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "SemanticChunker",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "createSemanticChunks",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createSlidingWindowChunks",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createContextualChunk",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractMarkdownContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "buildEnhancedMetadata",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeConversationFlow",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateSemanticDensity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "determineFlowStage",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateContinuityScore",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "areRelatedIntents",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractMarkdownKeywords",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createConversationEntry",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateConversationBuffer",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getClientConversations",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getWindowConfig",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createFallbackChunk",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "truncateChunk",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "containsAny",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "classifyResponseType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getHourCategory",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getChunkerStats",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                },
                {
                  "name": "ConversationPatternAnalyzer",
                  "extends": null,
                  "line": 613,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "detectPattern",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "matchesPattern",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "./embeddingEngine",
                  "default": null,
                  "named": [
                    "embeddingEngine"
                  ],
                  "line": 8,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    SemanticChunker,\n    ConversationPatternAnalyzer\n}",
                  "type": "commonjs",
                  "line": 672
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 4",
          "files": [
            {
              "name": "semanticRouter.js",
              "path": "src\\services\\semanticRouter.js",
              "size": 7437,
              "lines": 170,
              "functions": [
                {
                  "name": "classifyIntent",
                  "type": "function",
                  "line": 44,
                  "isExported": false
                },
                {
                  "name": "determineIntentByKeywords",
                  "type": "function",
                  "line": 110,
                  "isExported": false
                },
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 18,
                  "isExported": false
                },
                {
                  "name": "generate",
                  "type": "unknown",
                  "line": 22,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 29,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 49,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "LangChainEmbeddingAdapter",
                  "extends": null,
                  "line": 17,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "generate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "./embeddingEngine",
                  "default": null,
                  "named": [
                    "embeddingEngine"
                  ],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 5,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    classifyIntent,\n}",
                  "type": "commonjs",
                  "line": 167
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "serviceRegistry.js",
              "path": "src\\services\\serviceRegistry.js",
              "size": 2066,
              "lines": 56,
              "functions": [
                {
                  "name": "registerService",
                  "type": "function",
                  "line": 19,
                  "isExported": false
                },
                {
                  "name": "restartService",
                  "type": "function",
                  "line": 31,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "function",
                  "line": 35,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 41,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 2,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    services,\n    registerService,\n    restartService,\n}",
                  "type": "commonjs",
                  "line": 51
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "simpleAgentExecutor.js",
              "path": "src\\services\\simpleAgentExecutor.js",
              "size": 5184,
              "lines": 127,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 14,
                  "isExported": false
                },
                {
                  "name": "execute",
                  "type": "unknown",
                  "line": 46,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 55,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 75,
                  "isExported": false
                },
                {
                  "name": "executeWithLLM",
                  "type": "unknown",
                  "line": 107,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "OllamaError",
                  "extends": "Error",
                  "line": 13,
                  "isExported": false,
                  "methods": []
                },
                {
                  "name": "SimpleAgentExecutor",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "execute",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "executeWithLLM",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "@langchain/community/chat_models/ollama",
                  "default": null,
                  "named": [
                    "ChatOllama"
                  ],
                  "line": 4,
                  "isLocal": false
                },
                {
                  "source": "rate-limiter-flexible",
                  "default": null,
                  "named": [
                    "RateLimiterMemory"
                  ],
                  "line": 5,
                  "isLocal": false
                },
                {
                  "source": "./tools",
                  "default": null,
                  "named": [
                    "tools"
                  ],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "../utils/config",
                  "default": "config",
                  "named": [],
                  "line": 8,
                  "isLocal": true
                },
                {
                  "source": "./semanticCache",
                  "default": null,
                  "named": [
                    "findInCache",
                    "addToCache"
                  ],
                  "line": 9,
                  "isLocal": true
                },
                {
                  "source": "./guardrails",
                  "default": null,
                  "named": [
                    "Guardrails"
                  ],
                  "line": 10,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{ SimpleAgentExecutor }",
                  "type": "commonjs",
                  "line": 127
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "simpleDeduplicationEngine.js",
              "path": "src\\services\\simpleDeduplicationEngine.js",
              "size": 22466,
              "lines": 614,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 22,
                  "isExported": false
                },
                {
                  "name": "checkForDuplicates",
                  "type": "unknown",
                  "line": 84,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 124,
                  "isExported": false
                },
                {
                  "name": "classifyInformationType",
                  "type": "unknown",
                  "line": 140,
                  "isExported": false
                },
                {
                  "name": "findDuplicatesWithContext",
                  "type": "unknown",
                  "line": 172,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 179,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 189,
                  "isExported": false
                },
                {
                  "name": "calculateContextualSimilarity",
                  "type": "unknown",
                  "line": 218,
                  "isExported": false
                },
                {
                  "name": "calculateJaccardSimilarity",
                  "type": "unknown",
                  "line": 265,
                  "isExported": false
                },
                {
                  "name": "calculateMetadataSimilarity",
                  "type": "unknown",
                  "line": 281,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 292,
                  "isExported": false
                },
                {
                  "name": "calculateMarkdownContextSimilarity",
                  "type": "unknown",
                  "line": 328,
                  "isExported": false
                },
                {
                  "name": "makeConservativeDecision",
                  "type": "unknown",
                  "line": 369,
                  "isExported": false
                },
                {
                  "name": "isPriorityType",
                  "type": "unknown",
                  "line": 420,
                  "isExported": false
                },
                {
                  "name": "getThresholdForType",
                  "type": "unknown",
                  "line": 424,
                  "isExported": false
                },
                {
                  "name": "getWeightsForType",
                  "type": "unknown",
                  "line": 428,
                  "isExported": false
                },
                {
                  "name": "containsPatterns",
                  "type": "unknown",
                  "line": 440,
                  "isExported": false
                },
                {
                  "name": "tokenizeText",
                  "type": "unknown",
                  "line": 445,
                  "isExported": false
                },
                {
                  "name": "hashText",
                  "type": "unknown",
                  "line": 452,
                  "isExported": false
                },
                {
                  "name": "calculateDeviceSimilarity",
                  "type": "unknown",
                  "line": 462,
                  "isExported": false
                },
                {
                  "name": "getDuplicateReason",
                  "type": "unknown",
                  "line": 476,
                  "isExported": false
                },
                {
                  "name": "getRelevantMarkdownContext",
                  "type": "unknown",
                  "line": 483,
                  "isExported": false
                },
                {
                  "name": "recordMetrics",
                  "type": "unknown",
                  "line": 508,
                  "isExported": false
                },
                {
                  "name": "recordPreservation",
                  "type": "unknown",
                  "line": 541,
                  "isExported": false
                },
                {
                  "name": "getDeduplicationStats",
                  "type": "unknown",
                  "line": 546,
                  "isExported": false
                },
                {
                  "name": "calculateSystemHealth",
                  "type": "unknown",
                  "line": 563,
                  "isExported": false
                },
                {
                  "name": "performMaintenance",
                  "type": "unknown",
                  "line": 588,
                  "isExported": false
                },
                {
                  "name": "resetDailyMetrics",
                  "type": "unknown",
                  "line": 605,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "SimpleDeduplicationEngine",
                  "extends": null,
                  "line": 21,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "checkForDuplicates",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "classifyInformationType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "findDuplicatesWithContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateContextualSimilarity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateJaccardSimilarity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateMetadataSimilarity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateMarkdownContextSimilarity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "makeConservativeDecision",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "isPriorityType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getThresholdForType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getWeightsForType",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "containsPatterns",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "tokenizeText",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "hashText",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateDeviceSimilarity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getDuplicateReason",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getRelevantMarkdownContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordPreservation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getDeduplicationStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateSystemHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performMaintenance",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetDailyMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./markdownContextEnricher",
                  "default": null,
                  "named": [
                    "MarkdownContextEnricher"
                  ],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 8,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    SimpleDeduplicationEngine\n}",
                  "type": "commonjs",
                  "line": 612
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "tools.js",
              "path": "src\\services\\tools.js",
              "size": 41919,
              "lines": 992,
              "functions": [
                {
                  "name": "validateArguments",
                  "type": "function",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "determineKnowledgeContext",
                  "type": "function",
                  "line": 613,
                  "isExported": false
                },
                {
                  "name": "knowledgeSearchFallback",
                  "type": "function",
                  "line": 638,
                  "isExported": false
                },
                {
                  "name": "getArchitecturalHealth",
                  "type": "function",
                  "line": 930,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 28,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 37,
                  "isExported": false
                },
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 58,
                  "isExported": false
                },
                {
                  "name": "generate",
                  "type": "unknown",
                  "line": 65,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 73,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 87,
                  "isExported": false
                },
                {
                  "name": "generateQuery",
                  "type": "unknown",
                  "line": 96,
                  "isExported": false
                },
                {
                  "name": "generateDocument",
                  "type": "unknown",
                  "line": 109,
                  "isExported": false
                },
                {
                  "name": "validatePriceConsistency",
                  "type": "unknown",
                  "line": 145,
                  "isExported": false
                },
                {
                  "name": "extractDeviceInfo",
                  "type": "unknown",
                  "line": 228,
                  "isExported": false
                },
                {
                  "name": "extractPrices",
                  "type": "unknown",
                  "line": 266,
                  "isExported": false
                },
                {
                  "name": "comparePrices",
                  "type": "unknown",
                  "line": 293,
                  "isExported": false
                },
                {
                  "name": "calculatePriceVariance",
                  "type": "unknown",
                  "line": 338,
                  "isExported": false
                },
                {
                  "name": "validateProductAvailability",
                  "type": "unknown",
                  "line": 348,
                  "isExported": false
                },
                {
                  "name": "clearCache",
                  "type": "unknown",
                  "line": 391,
                  "isExported": false
                },
                {
                  "name": "getValidationStats",
                  "type": "unknown",
                  "line": 399,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "EnhancedLangChainEmbeddingAdapter",
                  "extends": null,
                  "line": 57,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "generate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateDocument",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                },
                {
                  "name": "CrossSourceValidator",
                  "extends": null,
                  "line": 132,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "validatePriceConsistency",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractDeviceInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractPrices",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "comparePrices",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculatePriceVariance",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validateProductAvailability",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "clearCache",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getValidationStats",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "langchain/tools",
                  "default": null,
                  "named": [
                    "DynamicTool"
                  ],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "chromadb",
                  "default": null,
                  "named": [
                    "ChromaClient"
                  ],
                  "line": 4,
                  "isLocal": false
                },
                {
                  "source": "./embeddingEngine",
                  "default": null,
                  "named": [
                    "embeddingEngine",
                    "getEmbedding"
                  ],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "./priceExtractionSystem",
                  "default": null,
                  "named": [
                    "priceExtractionSystem"
                  ],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "./conversationMemory",
                  "default": null,
                  "named": [
                    "conversationMemory"
                  ],
                  "line": 8,
                  "isLocal": true
                },
                {
                  "source": "./deterministicSearchEngine",
                  "default": null,
                  "named": [
                    "DeterministicSearchEngine"
                  ],
                  "line": 9,
                  "isLocal": true
                },
                {
                  "source": "./dynamicLimitOptimizer",
                  "default": null,
                  "named": [
                    "DynamicLimitOptimizer"
                  ],
                  "line": 10,
                  "isLocal": true
                },
                {
                  "source": "./markdownContextEnricher",
                  "default": null,
                  "named": [
                    "MarkdownContextEnricher"
                  ],
                  "line": 11,
                  "isLocal": true
                },
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 12,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    tools,\n    crossSourceValidator,\n    performanceMonitor,\n    getArchitecturalHealth\n}",
                  "type": "commonjs",
                  "line": 986
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 5",
          "files": [
            {
              "name": "validatedEmbeddingEngine.js",
              "path": "src\\services\\validatedEmbeddingEngine.js",
              "size": 27444,
              "lines": 668,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 22,
                  "isExported": false
                },
                {
                  "name": "initializeDimensions",
                  "type": "unknown",
                  "line": 91,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 110,
                  "isExported": false
                },
                {
                  "name": "embedDocument",
                  "type": "unknown",
                  "line": 120,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 133,
                  "isExported": false
                },
                {
                  "name": "embedQuery",
                  "type": "unknown",
                  "line": 162,
                  "isExported": false
                },
                {
                  "name": "embedDocuments",
                  "type": "unknown",
                  "line": 203,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 214,
                  "isExported": false
                },
                {
                  "name": "validateEmbedding",
                  "type": "unknown",
                  "line": 264,
                  "isExported": false
                },
                {
                  "name": "detectSalvaCellContext",
                  "type": "unknown",
                  "line": 357,
                  "isExported": false
                },
                {
                  "name": "validateMarkdownEmbedding",
                  "type": "unknown",
                  "line": 383,
                  "isExported": false
                },
                {
                  "name": "calculateEmbeddingQuality",
                  "type": "unknown",
                  "line": 423,
                  "isExported": false
                },
                {
                  "name": "attemptRecovery",
                  "type": "unknown",
                  "line": 451,
                  "isExported": false
                },
                {
                  "name": "containsAny",
                  "type": "unknown",
                  "line": 515,
                  "isExported": false
                },
                {
                  "name": "checkTimeConsistency",
                  "type": "unknown",
                  "line": 519,
                  "isExported": false
                },
                {
                  "name": "checkWarrantyConsistency",
                  "type": "unknown",
                  "line": 525,
                  "isExported": false
                },
                {
                  "name": "checkPriceConsistency",
                  "type": "unknown",
                  "line": 531,
                  "isExported": false
                },
                {
                  "name": "checkContextConsistency",
                  "type": "unknown",
                  "line": 537,
                  "isExported": false
                },
                {
                  "name": "checkSalvaCellRelevance",
                  "type": "unknown",
                  "line": 542,
                  "isExported": false
                },
                {
                  "name": "calculateVariance",
                  "type": "unknown",
                  "line": 549,
                  "isExported": false
                },
                {
                  "name": "cleanTextForEmbedding",
                  "type": "unknown",
                  "line": 554,
                  "isExported": false
                },
                {
                  "name": "recordValidation",
                  "type": "unknown",
                  "line": 566,
                  "isExported": false
                },
                {
                  "name": "checkAlertThresholds",
                  "type": "unknown",
                  "line": 586,
                  "isExported": false
                },
                {
                  "name": "triggerAlert",
                  "type": "unknown",
                  "line": 602,
                  "isExported": false
                },
                {
                  "name": "ensureDimensionsInitialized",
                  "type": "unknown",
                  "line": 619,
                  "isExported": false
                },
                {
                  "name": "getValidationStats",
                  "type": "unknown",
                  "line": 631,
                  "isExported": false
                },
                {
                  "name": "resetStats",
                  "type": "unknown",
                  "line": 651,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ValidatedEmbeddingEngine",
                  "extends": "EnhancedEmbeddingEngine",
                  "line": 21,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "initializeDimensions",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "embedDocument",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "embedQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "embedDocuments",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validateEmbedding",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "detectSalvaCellContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validateMarkdownEmbedding",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateEmbeddingQuality",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "attemptRecovery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "containsAny",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkTimeConsistency",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkWarrantyConsistency",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkPriceConsistency",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkContextConsistency",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkSalvaCellRelevance",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateVariance",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanTextForEmbedding",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordValidation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkAlertThresholds",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "triggerAlert",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "ensureDimensionsInitialized",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getValidationStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetStats",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../utils/logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "./embeddingEngine",
                  "default": null,
                  "named": [
                    "EnhancedEmbeddingEngine"
                  ],
                  "line": 8,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    ValidatedEmbeddingEngine\n}",
                  "type": "commonjs",
                  "line": 666
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        }
      ]
    },
    {
      "path": "src\\services\\classifiers",
      "fileCount": 1,
      "files": [
        {
          "name": "qwenClassifier.js",
          "path": "src\\services\\classifiers\\qwenClassifier.js",
          "size": 4312,
          "lines": 117,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 13,
              "isExported": false
            },
            {
              "name": "classify",
              "type": "unknown",
              "line": 24,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 38,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 44,
              "isExported": false
            },
            {
              "name": "buildClassificationPrompt",
              "type": "unknown",
              "line": 55,
              "isExported": false
            },
            {
              "name": "parseResponse",
              "type": "unknown",
              "line": 86,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "QwenClassifier",
              "extends": null,
              "line": 12,
              "isExported": false,
              "methods": [
                {
                  "name": "classify",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildClassificationPrompt",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseResponse",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/qwenLocal",
              "default": "QwenLocalClient",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../../../intentions_dataset.json",
              "default": "intentions",
              "named": [],
              "line": 6,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{ QwenClassifier }",
              "type": "commonjs",
              "line": 116
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\services\\eventSourcing",
      "fileCount": 1,
      "files": [
        {
          "name": "EventStore.js",
          "path": "src\\services\\eventSourcing\\EventStore.js",
          "size": 2886,
          "lines": 101,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 17,
              "isExported": false
            },
            {
              "name": "appendEvent",
              "type": "unknown",
              "line": 31,
              "isExported": false
            },
            {
              "name": "getAllEvents",
              "type": "unknown",
              "line": 49,
              "isExported": false
            },
            {
              "name": "getEventsByType",
              "type": "unknown",
              "line": 58,
              "isExported": false
            },
            {
              "name": "_persistEvent",
              "type": "unknown",
              "line": 66,
              "isExported": false
            },
            {
              "name": "_loadEvents",
              "type": "unknown",
              "line": 74,
              "isExported": false
            },
            {
              "name": "_enforceRetention",
              "type": "unknown",
              "line": 86,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 87,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "EventStore",
              "extends": "EventEmitter",
              "line": 16,
              "isExported": false,
              "methods": [
                {
                  "name": "appendEvent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getAllEvents",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEventsByType",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "_persistEvent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "_loadEvents",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "_enforceRetention",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 7,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 8,
              "isLocal": false
            },
            {
              "source": "uuid",
              "default": null,
              "named": [
                "v4: uuidv4"
              ],
              "line": 9,
              "isLocal": false
            },
            {
              "source": "events",
              "default": "EventEmitter",
              "named": [],
              "line": 10,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "{\n    EventStore,\n    eventStore\n}",
              "type": "commonjs",
              "line": 97
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\services\\knowledge",
      "fileCount": 2,
      "files": [
        {
          "name": "KnowledgeCoherenceLayer.js",
          "path": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "size": 76593,
          "lines": 2310,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 21,
              "isExported": false
            },
            {
              "name": "setupCoherenceMonitoring",
              "type": "unknown",
              "line": 83,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 85,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 89,
              "isExported": false
            },
            {
              "name": "searchWithValidation",
              "type": "unknown",
              "line": 114,
              "isExported": false
            },
            {
              "name": "validateSearchResults",
              "type": "unknown",
              "line": 197,
              "isExported": false
            },
            {
              "name": "validateDataFreshness",
              "type": "unknown",
              "line": 284,
              "isExported": false
            },
            {
              "name": "validateSemanticConsistency",
              "type": "unknown",
              "line": 340,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 349,
              "isExported": false
            },
            {
              "name": "validateBusinessLogic",
              "type": "unknown",
              "line": 401,
              "isExported": false
            },
            {
              "name": "performContinuousValidation",
              "type": "unknown",
              "line": 459,
              "isExported": false
            },
            {
              "name": "performHealthCheck",
              "type": "unknown",
              "line": 526,
              "isExported": false
            },
            {
              "name": "calculateValidationScore",
              "type": "unknown",
              "line": 586,
              "isExported": false
            },
            {
              "name": "detectValidationConflicts",
              "type": "unknown",
              "line": 607,
              "isExported": false
            },
            {
              "name": "getIssueSeverity",
              "type": "unknown",
              "line": 627,
              "isExported": false
            },
            {
              "name": "calculateSemanticRelevance",
              "type": "unknown",
              "line": 633,
              "isExported": false
            },
            {
              "name": "detectSemanticContradictions",
              "type": "unknown",
              "line": 656,
              "isExported": false
            },
            {
              "name": "validatePriceRange",
              "type": "unknown",
              "line": 696,
              "isExported": false
            },
            {
              "name": "getBusinessHours",
              "type": "unknown",
              "line": 714,
              "isExported": false
            },
            {
              "name": "isWithinBusinessHours",
              "type": "unknown",
              "line": 723,
              "isExported": false
            },
            {
              "name": "getRecentSearchSamples",
              "type": "unknown",
              "line": 728,
              "isExported": false
            },
            {
              "name": "calculateSearchCoherenceScore",
              "type": "unknown",
              "line": 734,
              "isExported": false
            },
            {
              "name": "updateCoherenceHistory",
              "type": "unknown",
              "line": 742,
              "isExported": false
            },
            {
              "name": "handleSearchConflicts",
              "type": "unknown",
              "line": 754,
              "isExported": false
            },
            {
              "name": "checkPostgreSQLFreshness",
              "type": "unknown",
              "line": 780,
              "isExported": false
            },
            {
              "name": "checkChromaDBFreshness",
              "type": "unknown",
              "line": 810,
              "isExported": false
            },
            {
              "name": "checkPostgreSQLHealth",
              "type": "unknown",
              "line": 820,
              "isExported": false
            },
            {
              "name": "checkChromaDBHealth",
              "type": "unknown",
              "line": 837,
              "isExported": false
            },
            {
              "name": "checkEmbeddingEngineHealth",
              "type": "unknown",
              "line": 854,
              "isExported": false
            },
            {
              "name": "checkCrossValidationHealth",
              "type": "unknown",
              "line": 871,
              "isExported": false
            },
            {
              "name": "handleConflictDetected",
              "type": "unknown",
              "line": 897,
              "isExported": false
            },
            {
              "name": "handleCoherenceDegraded",
              "type": "unknown",
              "line": 911,
              "isExported": false
            },
            {
              "name": "handleValidationCompleted",
              "type": "unknown",
              "line": 924,
              "isExported": false
            },
            {
              "name": "initiateAutoRecovery",
              "type": "unknown",
              "line": 928,
              "isExported": false
            },
            {
              "name": "getCoherenceMetrics",
              "type": "unknown",
              "line": 944,
              "isExported": false
            },
            {
              "name": "getEnhancedMetrics",
              "type": "unknown",
              "line": 1139,
              "isExported": false
            },
            {
              "name": "analyzeCoherenceTrend",
              "type": "unknown",
              "line": 1158,
              "isExported": false
            },
            {
              "name": "search",
              "type": "unknown",
              "line": 1186,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 1189,
              "isExported": false
            },
            {
              "name": "determineOptimalStrategy",
              "type": "unknown",
              "line": 1205,
              "isExported": false
            },
            {
              "name": "executePriceSpecificSearch",
              "type": "unknown",
              "line": 1243,
              "isExported": false
            },
            {
              "name": "executeSemanticSearch",
              "type": "unknown",
              "line": 1278,
              "isExported": false
            },
            {
              "name": "executeHybridSearch",
              "type": "unknown",
              "line": 1307,
              "isExported": false
            },
            {
              "name": "validateSemanticCoherence",
              "type": "unknown",
              "line": 1354,
              "isExported": false
            },
            {
              "name": "enrichWithSemanticContext",
              "type": "unknown",
              "line": 1382,
              "isExported": false
            },
            {
              "name": "formatCoherentResponse",
              "type": "unknown",
              "line": 1419,
              "isExported": false
            },
            {
              "name": "analyzeQuery",
              "type": "unknown",
              "line": 1442,
              "isExported": false
            },
            {
              "name": "detectPriceKeywords",
              "type": "unknown",
              "line": 1452,
              "isExported": false
            },
            {
              "name": "detectDeviceSpecificity",
              "type": "unknown",
              "line": 1457,
              "isExported": false
            },
            {
              "name": "detectGeneralInformation",
              "type": "unknown",
              "line": 1468,
              "isExported": false
            },
            {
              "name": "calculateQueryComplexity",
              "type": "unknown",
              "line": 1473,
              "isExported": false
            },
            {
              "name": "classifyIntent",
              "type": "unknown",
              "line": 1486,
              "isExported": false
            },
            {
              "name": "matchesCategory",
              "type": "unknown",
              "line": 1510,
              "isExported": false
            },
            {
              "name": "basicIntentClassification",
              "type": "unknown",
              "line": 1522,
              "isExported": false
            },
            {
              "name": "extractPriceSearchTerms",
              "type": "unknown",
              "line": 1539,
              "isExported": false
            },
            {
              "name": "mentionsPricing",
              "type": "unknown",
              "line": 1580,
              "isExported": false
            },
            {
              "name": "calculateCoherenceScore",
              "type": "unknown",
              "line": 1585,
              "isExported": false
            },
            {
              "name": "analyzeContext",
              "type": "unknown",
              "line": 1593,
              "isExported": false
            },
            {
              "name": "buildSemanticFilters",
              "type": "unknown",
              "line": 1602,
              "isExported": false
            },
            {
              "name": "processParallelResults",
              "type": "unknown",
              "line": 1616,
              "isExported": false
            },
            {
              "name": "validatePriceCoherence",
              "type": "unknown",
              "line": 1633,
              "isExported": false
            },
            {
              "name": "calculateRecommendationLevel",
              "type": "unknown",
              "line": 1641,
              "isExported": false
            },
            {
              "name": "extractCustomerBenefits",
              "type": "unknown",
              "line": 1656,
              "isExported": false
            },
            {
              "name": "identifySources",
              "type": "unknown",
              "line": 1676,
              "isExported": false
            },
            {
              "name": "forEach",
              "type": "arrow",
              "line": 1679,
              "isExported": false
            },
            {
              "name": "getProcessingLatency",
              "type": "unknown",
              "line": 1690,
              "isExported": false
            },
            {
              "name": "assessCompleteness",
              "type": "unknown",
              "line": 1695,
              "isExported": false
            },
            {
              "name": "assessConsistency",
              "type": "unknown",
              "line": 1700,
              "isExported": false
            },
            {
              "name": "assessRelevance",
              "type": "unknown",
              "line": 1705,
              "isExported": false
            },
            {
              "name": "searchPrices",
              "type": "unknown",
              "line": 1713,
              "isExported": false
            },
            {
              "name": "semanticSearch",
              "type": "unknown",
              "line": 1750,
              "isExported": false
            },
            {
              "name": "findRelatedContext",
              "type": "unknown",
              "line": 1768,
              "isExported": false
            },
            {
              "name": "fuseMultiSourceResults",
              "type": "unknown",
              "line": 1785,
              "isExported": false
            },
            {
              "name": "calculateScore",
              "type": "unknown",
              "line": 1808,
              "isExported": false
            },
            {
              "name": "calculateSourceConsistency",
              "type": "unknown",
              "line": 1823,
              "isExported": false
            },
            {
              "name": "calculateCompleteness",
              "type": "unknown",
              "line": 1828,
              "isExported": false
            },
            {
              "name": "calculateContextualRelevance",
              "type": "unknown",
              "line": 1833,
              "isExported": false
            },
            {
              "name": "get",
              "type": "unknown",
              "line": 1845,
              "isExported": false
            },
            {
              "name": "set",
              "type": "unknown",
              "line": 1857,
              "isExported": false
            },
            {
              "name": "validate",
              "type": "unknown",
              "line": 1866,
              "isExported": false
            },
            {
              "name": "initializeValidationRules",
              "type": "unknown",
              "line": 1890,
              "isExported": false
            },
            {
              "name": "findMatchingResult",
              "type": "unknown",
              "line": 1977,
              "isExported": false
            },
            {
              "name": "calculateSimilarity",
              "type": "unknown",
              "line": 1993,
              "isExported": false
            },
            {
              "name": "stringSimilarity",
              "type": "unknown",
              "line": 2012,
              "isExported": false
            },
            {
              "name": "levenshteinDistance",
              "type": "unknown",
              "line": 2022,
              "isExported": false
            },
            {
              "name": "healthCheck",
              "type": "unknown",
              "line": 2050,
              "isExported": false
            },
            {
              "name": "recordHealthScore",
              "type": "unknown",
              "line": 2084,
              "isExported": false
            },
            {
              "name": "checkHealthAlerts",
              "type": "unknown",
              "line": 2106,
              "isExported": false
            },
            {
              "name": "getHealthTrend",
              "type": "unknown",
              "line": 2114,
              "isExported": false
            },
            {
              "name": "initializeStrategies",
              "type": "unknown",
              "line": 2158,
              "isExported": false
            },
            {
              "name": "resolve",
              "type": "unknown",
              "line": 2187,
              "isExported": false
            },
            {
              "name": "calculateOverallScore",
              "type": "unknown",
              "line": 2234,
              "isExported": false
            },
            {
              "name": "getHealthStatus",
              "type": "unknown",
              "line": 2248,
              "isExported": false
            },
            {
              "name": "generateHealthReport",
              "type": "unknown",
              "line": 2256,
              "isExported": false
            },
            {
              "name": "generateRecommendations",
              "type": "unknown",
              "line": 2266,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "KnowledgeCoherenceLayer",
              "extends": "EventEmitter",
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "setupCoherenceMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "searchWithValidation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateSearchResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateDataFreshness",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateSemanticConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateBusinessLogic",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performContinuousValidation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performHealthCheck",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateValidationScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectValidationConflicts",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getIssueSeverity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSemanticRelevance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectSemanticContradictions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validatePriceRange",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getBusinessHours",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isWithinBusinessHours",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getRecentSearchSamples",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSearchCoherenceScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateCoherenceHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleSearchConflicts",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkPostgreSQLFreshness",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkChromaDBFreshness",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkPostgreSQLHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkChromaDBHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkEmbeddingEngineHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkCrossValidationHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleConflictDetected",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleCoherenceDegraded",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleValidationCompleted",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initiateAutoRecovery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCoherenceMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEnhancedMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeCoherenceTrend",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "search",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "determineOptimalStrategy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executePriceSpecificSearch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeSemanticSearch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeHybridSearch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateSemanticCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "enrichWithSemanticContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "formatCoherentResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectPriceKeywords",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectDeviceSpecificity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectGeneralInformation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateQueryComplexity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "classifyIntent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "matchesCategory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "basicIntentClassification",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractPriceSearchTerms",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "mentionsPricing",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateCoherenceScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildSemanticFilters",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processParallelResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validatePriceCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateRecommendationLevel",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractCustomerBenefits",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "identifySources",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forEach",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getProcessingLatency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "assessCompleteness",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "assessConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "assessRelevance",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "PostgreSQLConnector",
              "extends": null,
              "line": 1712,
              "isExported": false,
              "methods": [
                {
                  "name": "searchPrices",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ChromaDBConnector",
              "extends": null,
              "line": 1749,
              "isExported": false,
              "methods": [
                {
                  "name": "semanticSearch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findRelatedContext",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "CoherenceEngine",
              "extends": null,
              "line": 1784,
              "isExported": false,
              "methods": [
                {
                  "name": "fuseMultiSourceResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSourceConsistency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateCompleteness",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateContextualRelevance",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "IntelligentCaching",
              "extends": null,
              "line": 1839,
              "isExported": false,
              "methods": [
                {
                  "name": "get",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "set",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ConsistencyValidator",
              "extends": null,
              "line": 1865,
              "isExported": false,
              "methods": [
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "RealTimeCrossValidator",
              "extends": null,
              "line": 1884,
              "isExported": false,
              "methods": [
                {
                  "name": "initializeValidationRules",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findMatchingResult",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSimilarity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "stringSimilarity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "levenshteinDistance",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "healthCheck",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "CoherenceHealthMonitor",
              "extends": "EventEmitter",
              "line": 2074,
              "isExported": false,
              "methods": [
                {
                  "name": "recordHealthScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkHealthAlerts",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getHealthTrend",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "AutomaticConflictResolver",
              "extends": null,
              "line": 2152,
              "isExported": false,
              "methods": [
                {
                  "name": "initializeStrategies",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resolve",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "HealthScoringEngine",
              "extends": null,
              "line": 2224,
              "isExported": false,
              "methods": [
                {
                  "name": "calculateOverallScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getHealthStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateHealthReport",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateRecommendations",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "CoherenceLayerError",
              "extends": "Error",
              "line": 2290,
              "isExported": false,
              "methods": []
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 11,
              "isLocal": true
            },
            {
              "source": "../embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine"
              ],
              "line": 12,
              "isLocal": true
            },
            {
              "source": "uuid",
              "default": null,
              "named": [
                "v4: uuidv4"
              ],
              "line": 13,
              "isLocal": false
            },
            {
              "source": "events",
              "default": "EventEmitter",
              "named": [],
              "line": 14,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "{\n    KnowledgeCoherenceLayer,\n    PostgreSQLConnector,\n    ChromaDBConnector,\n    CoherenceEngine,\n    IntelligentCaching,\n    ConsistencyValidator,\n    RealTimeCrossValidator,\n    CoherenceHealthMonitor,\n    AutomaticConflictResolver,\n    HealthScoringEngine,\n    CoherenceLayerError\n}",
              "type": "commonjs",
              "line": 2298
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "TemporalConsistencyEngine.js",
          "path": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "size": 69058,
          "lines": 2138,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 22,
              "isExported": false
            },
            {
              "name": "setupEventHandlers",
              "type": "unknown",
              "line": 84,
              "isExported": false
            },
            {
              "name": "startMonitoring",
              "type": "unknown",
              "line": 104,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 105,
              "isExported": false
            },
            {
              "name": "stopMonitoring",
              "type": "unknown",
              "line": 134,
              "isExported": false
            },
            {
              "name": "performProactiveCheck",
              "type": "unknown",
              "line": 155,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 200,
              "isExported": false
            },
            {
              "name": "processCheckResults",
              "type": "unknown",
              "line": 218,
              "isExported": false
            },
            {
              "name": "handleDataChangeEvent",
              "type": "unknown",
              "line": 264,
              "isExported": false
            },
            {
              "name": "handleSemanticDriftEvent",
              "type": "unknown",
              "line": 278,
              "isExported": false
            },
            {
              "name": "handleConflictEvent",
              "type": "unknown",
              "line": 296,
              "isExported": false
            },
            {
              "name": "handleCoherenceDegradationEvent",
              "type": "unknown",
              "line": 318,
              "isExported": false
            },
            {
              "name": "handleRecoveryEvent",
              "type": "unknown",
              "line": 336,
              "isExported": false
            },
            {
              "name": "calculateCurrentCoherenceScore",
              "type": "unknown",
              "line": 363,
              "isExported": false
            },
            {
              "name": "calculateVectorSpaceCoherence",
              "type": "unknown",
              "line": 417,
              "isExported": false
            },
            {
              "name": "calculateRelationalCoherence",
              "type": "unknown",
              "line": 440,
              "isExported": false
            },
            {
              "name": "calculateConversationalCoherence",
              "type": "unknown",
              "line": 462,
              "isExported": false
            },
            {
              "name": "calculateTemporalCoherence",
              "type": "unknown",
              "line": 481,
              "isExported": false
            },
            {
              "name": "updateCoherenceHistory",
              "type": "unknown",
              "line": 498,
              "isExported": false
            },
            {
              "name": "calculateAverageCoherence",
              "type": "unknown",
              "line": 514,
              "isExported": false
            },
            {
              "name": "analyzeCoherenceTrend",
              "type": "unknown",
              "line": 526,
              "isExported": false
            },
            {
              "name": "shouldTriggerRecovery",
              "type": "unknown",
              "line": 549,
              "isExported": false
            },
            {
              "name": "getRecoveryTriggers",
              "type": "unknown",
              "line": 570,
              "isExported": false
            },
            {
              "name": "calculateRecoveryUrgency",
              "type": "unknown",
              "line": 595,
              "isExported": false
            },
            {
              "name": "performHealthCheck",
              "type": "unknown",
              "line": 611,
              "isExported": false
            },
            {
              "name": "getEnhancedMetrics",
              "type": "unknown",
              "line": 648,
              "isExported": false
            },
            {
              "name": "orchestrateKnowledgeEvolution",
              "type": "unknown",
              "line": 668,
              "isExported": false
            },
            {
              "name": "detectSemanticDrift",
              "type": "unknown",
              "line": 703,
              "isExported": false
            },
            {
              "name": "analyzeEvolutionRequirements",
              "type": "unknown",
              "line": 725,
              "isExported": false
            },
            {
              "name": "captureKnowledgeSnapshot",
              "type": "unknown",
              "line": 747,
              "isExported": false
            },
            {
              "name": "captureOperationalReality",
              "type": "unknown",
              "line": 769,
              "isExported": false
            },
            {
              "name": "executeMigrationStrategy",
              "type": "unknown",
              "line": 790,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 798,
              "isExported": false
            },
            {
              "name": "executeIncrementalMigration",
              "type": "unknown",
              "line": 819,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 823,
              "isExported": false
            },
            {
              "name": "analyzeChangeScope",
              "type": "unknown",
              "line": 867,
              "isExported": false
            },
            {
              "name": "identifyAffectedComponents",
              "type": "unknown",
              "line": 876,
              "isExported": false
            },
            {
              "name": "calculateMigrationComplexity",
              "type": "unknown",
              "line": 885,
              "isExported": false
            },
            {
              "name": "assessEvolutionRisks",
              "type": "unknown",
              "line": 895,
              "isExported": false
            },
            {
              "name": "determineEvolutionStrategy",
              "type": "unknown",
              "line": 905,
              "isExported": false
            },
            {
              "name": "estimateMigrationDuration",
              "type": "unknown",
              "line": 929,
              "isExported": false
            },
            {
              "name": "createRollbackPlan",
              "type": "unknown",
              "line": 939,
              "isExported": false
            },
            {
              "name": "captureVectorSpaceState",
              "type": "unknown",
              "line": 948,
              "isExported": false
            },
            {
              "name": "captureRelationalDataState",
              "type": "unknown",
              "line": 966,
              "isExported": false
            },
            {
              "name": "captureConversationalMemoryState",
              "type": "unknown",
              "line": 980,
              "isExported": false
            },
            {
              "name": "captureSystemConfiguration",
              "type": "unknown",
              "line": 1000,
              "isExported": false
            },
            {
              "name": "generateCoherenceHash",
              "type": "unknown",
              "line": 1012,
              "isExported": false
            },
            {
              "name": "extractCurrentPricing",
              "type": "unknown",
              "line": 1018,
              "isExported": false
            },
            {
              "name": "extractServiceOfferings",
              "type": "unknown",
              "line": 1035,
              "isExported": false
            },
            {
              "name": "extractOperationalPolicies",
              "type": "unknown",
              "line": 1051,
              "isExported": false
            },
            {
              "name": "extractPerformanceMetrics",
              "type": "unknown",
              "line": 1060,
              "isExported": false
            },
            {
              "name": "extractUsagePatterns",
              "type": "unknown",
              "line": 1069,
              "isExported": false
            },
            {
              "name": "extractConversationQuality",
              "type": "unknown",
              "line": 1088,
              "isExported": false
            },
            {
              "name": "extractErrorPatterns",
              "type": "unknown",
              "line": 1106,
              "isExported": false
            },
            {
              "name": "createMigrationPhases",
              "type": "unknown",
              "line": 1115,
              "isExported": false
            },
            {
              "name": "createMigrationCheckpoint",
              "type": "unknown",
              "line": 1142,
              "isExported": false
            },
            {
              "name": "executeMigrationPhase",
              "type": "unknown",
              "line": 1154,
              "isExported": false
            },
            {
              "name": "validatePhaseCoherence",
              "type": "unknown",
              "line": 1168,
              "isExported": false
            },
            {
              "name": "rollbackToCheckpoint",
              "type": "unknown",
              "line": 1178,
              "isExported": false
            },
            {
              "name": "triggerDriftMitigation",
              "type": "unknown",
              "line": 1187,
              "isExported": false
            },
            {
              "name": "analyzeSystemicImpact",
              "type": "unknown",
              "line": 1200,
              "isExported": false
            },
            {
              "name": "validatePreMigrationCoherence",
              "type": "unknown",
              "line": 1209,
              "isExported": false
            },
            {
              "name": "validatePostMigrationCoherence",
              "type": "unknown",
              "line": 1218,
              "isExported": false
            },
            {
              "name": "triggerAutomaticRollback",
              "type": "unknown",
              "line": 1228,
              "isExported": false
            },
            {
              "name": "executeBlueGreenMigration",
              "type": "unknown",
              "line": 1237,
              "isExported": false
            },
            {
              "name": "executeShadowMigration",
              "type": "unknown",
              "line": 1245,
              "isExported": false
            },
            {
              "name": "sleep",
              "type": "unknown",
              "line": 1253,
              "isExported": false
            },
            {
              "name": "getSystemHealth",
              "type": "unknown",
              "line": 1260,
              "isExported": false
            },
            {
              "name": "calculateCoherenceScore",
              "type": "unknown",
              "line": 1272,
              "isExported": false
            },
            {
              "name": "performMaintenanceCheck",
              "type": "unknown",
              "line": 1289,
              "isExported": false
            },
            {
              "name": "generateMaintenanceRecommendations",
              "type": "unknown",
              "line": 1310,
              "isExported": false
            },
            {
              "name": "analyze",
              "type": "unknown",
              "line": 1341,
              "isExported": false
            },
            {
              "name": "analyzeDriftDimensions",
              "type": "unknown",
              "line": 1362,
              "isExported": false
            },
            {
              "name": "analyzeSemanticDrift",
              "type": "unknown",
              "line": 1371,
              "isExported": false
            },
            {
              "name": "analyzeOperationalDrift",
              "type": "unknown",
              "line": 1381,
              "isExported": false
            },
            {
              "name": "analyzeBehavioralDrift",
              "type": "unknown",
              "line": 1391,
              "isExported": false
            },
            {
              "name": "analyzePerformanceDrift",
              "type": "unknown",
              "line": 1401,
              "isExported": false
            },
            {
              "name": "calculateAggregatedSeverity",
              "type": "unknown",
              "line": 1411,
              "isExported": false
            },
            {
              "name": "generateDriftRecommendations",
              "type": "unknown",
              "line": 1421,
              "isExported": false
            },
            {
              "name": "storeSnapshot",
              "type": "unknown",
              "line": 1444,
              "isExported": false
            },
            {
              "name": "generateVersionId",
              "type": "unknown",
              "line": 1459,
              "isExported": false
            },
            {
              "name": "getVersion",
              "type": "unknown",
              "line": 1463,
              "isExported": false
            },
            {
              "name": "listVersions",
              "type": "unknown",
              "line": 1467,
              "isExported": false
            },
            {
              "name": "detectChanges",
              "type": "unknown",
              "line": 1473,
              "isExported": false
            },
            {
              "name": "validate",
              "type": "unknown",
              "line": 1483,
              "isExported": false
            },
            {
              "name": "orchestrateMigration",
              "type": "unknown",
              "line": 1493,
              "isExported": false
            },
            {
              "name": "calculateDistribution",
              "type": "unknown",
              "line": 1504,
              "isExported": false
            },
            {
              "name": "quantify",
              "type": "unknown",
              "line": 1520,
              "isExported": false
            },
            {
              "name": "emit",
              "type": "unknown",
              "line": 1558,
              "isExported": false
            },
            {
              "name": "cleanupOldEvents",
              "type": "unknown",
              "line": 1576,
              "isExported": false
            },
            {
              "name": "getEventHistory",
              "type": "unknown",
              "line": 1581,
              "isExported": false
            },
            {
              "name": "isHealthy",
              "type": "unknown",
              "line": 1589,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 1593,
              "isExported": false
            },
            {
              "name": "validateSources",
              "type": "unknown",
              "line": 1618,
              "isExported": false
            },
            {
              "name": "validatePostgreSQL",
              "type": "unknown",
              "line": 1691,
              "isExported": false
            },
            {
              "name": "validateChromaDB",
              "type": "unknown",
              "line": 1728,
              "isExported": false
            },
            {
              "name": "performCrossValidation",
              "type": "unknown",
              "line": 1749,
              "isExported": false
            },
            {
              "name": "calculateConflictSeverity",
              "type": "unknown",
              "line": 1801,
              "isExported": false
            },
            {
              "name": "healthCheck",
              "type": "unknown",
              "line": 1812,
              "isExported": false
            },
            {
              "name": "registerDefaultStrategies",
              "type": "unknown",
              "line": 1835,
              "isExported": false
            },
            {
              "name": "resolve",
              "type": "unknown",
              "line": 1867,
              "isExported": false
            },
            {
              "name": "start",
              "type": "unknown",
              "line": 1973,
              "isExported": false
            },
            {
              "name": "stop",
              "type": "unknown",
              "line": 1988,
              "isExported": false
            },
            {
              "name": "performWatchCycle",
              "type": "unknown",
              "line": 2003,
              "isExported": false
            },
            {
              "name": "watchDatabaseChanges",
              "type": "unknown",
              "line": 2019,
              "isExported": false
            },
            {
              "name": "watchConfigurationChanges",
              "type": "unknown",
              "line": 2039,
              "isExported": false
            },
            {
              "name": "watchSystemMetrics",
              "type": "unknown",
              "line": 2058,
              "isExported": false
            },
            {
              "name": "captureDbState",
              "type": "unknown",
              "line": 2082,
              "isExported": false
            },
            {
              "name": "hasSignificantChange",
              "type": "unknown",
              "line": 2104,
              "isExported": false
            },
            {
              "name": "getWatchedEntities",
              "type": "unknown",
              "line": 2120,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "TemporalConsistencyEngine",
              "extends": "EventEmitter",
              "line": 21,
              "isExported": false,
              "methods": [
                {
                  "name": "setupEventHandlers",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "startMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "stopMonitoring",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performProactiveCheck",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processCheckResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleDataChangeEvent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleSemanticDriftEvent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleConflictEvent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleCoherenceDegradationEvent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleRecoveryEvent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateCurrentCoherenceScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateVectorSpaceCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateRelationalCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateConversationalCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateTemporalCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateCoherenceHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateAverageCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeCoherenceTrend",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shouldTriggerRecovery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getRecoveryTriggers",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateRecoveryUrgency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performHealthCheck",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEnhancedMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "orchestrateKnowledgeEvolution",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "detectSemanticDrift",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeEvolutionRequirements",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "captureKnowledgeSnapshot",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "captureOperationalReality",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeMigrationStrategy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeIncrementalMigration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeChangeScope",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "identifyAffectedComponents",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateMigrationComplexity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "assessEvolutionRisks",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "determineEvolutionStrategy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "estimateMigrationDuration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createRollbackPlan",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "captureVectorSpaceState",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "captureRelationalDataState",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "captureConversationalMemoryState",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "captureSystemConfiguration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateCoherenceHash",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractCurrentPricing",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractServiceOfferings",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractOperationalPolicies",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractPerformanceMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractUsagePatterns",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractConversationQuality",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractErrorPatterns",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createMigrationPhases",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createMigrationCheckpoint",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeMigrationPhase",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validatePhaseCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "rollbackToCheckpoint",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "triggerDriftMitigation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeSystemicImpact",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validatePreMigrationCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validatePostMigrationCoherence",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "triggerAutomaticRollback",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeBlueGreenMigration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeShadowMigration",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "sleep",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateCoherenceScore",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performMaintenanceCheck",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateMaintenanceRecommendations",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "SemanticDriftDetector",
              "extends": null,
              "line": 1334,
              "isExported": false,
              "methods": [
                {
                  "name": "analyze",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeDriftDimensions",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeSemanticDrift",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeOperationalDrift",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeBehavioralDrift",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzePerformanceDrift",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateAggregatedSeverity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateDriftRecommendations",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "KnowledgeVersionControl",
              "extends": null,
              "line": 1439,
              "isExported": false,
              "methods": [
                {
                  "name": "storeSnapshot",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateVersionId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getVersion",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "listVersions",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ChangeDetectionEngine",
              "extends": null,
              "line": 1472,
              "isExported": false,
              "methods": [
                {
                  "name": "detectChanges",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ConsistencyValidator",
              "extends": null,
              "line": 1482,
              "isExported": false,
              "methods": [
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "MigrationOrchestrator",
              "extends": null,
              "line": 1492,
              "isExported": false,
              "methods": [
                {
                  "name": "orchestrateMigration",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "EmbeddingComparator",
              "extends": null,
              "line": 1503,
              "isExported": false,
              "methods": [
                {
                  "name": "calculateDistribution",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ContextualAnalyzer",
              "extends": null,
              "line": 1510,
              "isExported": false,
              "methods": [
                {
                  "name": "analyze",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "DriftQuantifier",
              "extends": null,
              "line": 1519,
              "isExported": false,
              "methods": [
                {
                  "name": "quantify",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "MigrationPhaseError",
              "extends": "Error",
              "line": 1529,
              "isExported": false,
              "methods": []
            },
            {
              "name": "TemporalEventBus",
              "extends": "EventEmitter",
              "line": 1545,
              "isExported": false,
              "methods": [
                {
                  "name": "emit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanupOldEvents",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEventHistory",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isHealthy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "CrossSourceValidator",
              "extends": null,
              "line": 1611,
              "isExported": false,
              "methods": [
                {
                  "name": "validateSources",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validatePostgreSQL",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateChromaDB",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performCrossValidation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateConflictSeverity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "healthCheck",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "ConflictResolver",
              "extends": null,
              "line": 1825,
              "isExported": false,
              "methods": [
                {
                  "name": "registerDefaultStrategies",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resolve",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isHealthy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "TemporalWatcher",
              "extends": null,
              "line": 1965,
              "isExported": false,
              "methods": [
                {
                  "name": "start",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "stop",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performWatchCycle",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "watchDatabaseChanges",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "watchConfigurationChanges",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "watchSystemMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "captureDbState",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "hasSignificantChange",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isHealthy",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getWatchedEntities",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 10,
              "isLocal": true
            },
            {
              "source": "../embeddingEngine",
              "default": null,
              "named": [
                "embeddingEngine"
              ],
              "line": 11,
              "isLocal": true
            },
            {
              "source": "../../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 12,
              "isLocal": true
            },
            {
              "source": "uuid",
              "default": null,
              "named": [
                "v4: uuidv4"
              ],
              "line": 13,
              "isLocal": false
            },
            {
              "source": "events",
              "default": "EventEmitter",
              "named": [],
              "line": 14,
              "isLocal": false
            },
            {
              "source": "crypto",
              "default": "crypto",
              "named": [],
              "line": 15,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "{\n    TemporalConsistencyEngine,\n    SemanticDriftDetector,\n    KnowledgeVersionControl,\n    ChangeDetectionEngine,\n    ConsistencyValidator,\n    MigrationOrchestrator,\n    MigrationPhaseError,\n    // FASE 1 Enhanced Components\n    TemporalEventBus,\n    CrossSourceValidator,\n    ConflictResolver,\n    TemporalWatcher\n}",
              "type": "commonjs",
              "line": 2125
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\services\\resilience",
      "fileCount": 1,
      "files": [
        {
          "name": "ResilienceManager.js",
          "path": "src\\services\\resilience\\ResilienceManager.js",
          "size": 21613,
          "lines": 652,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 27,
              "isExported": false
            },
            {
              "name": "initializeServices",
              "type": "unknown",
              "line": 97,
              "isExported": false
            },
            {
              "name": "initializeRateLimiters",
              "type": "unknown",
              "line": 137,
              "isExported": false
            },
            {
              "name": "executeWithProtection",
              "type": "unknown",
              "line": 172,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 198,
              "isExported": false
            },
            {
              "name": "checkServiceHealth",
              "type": "unknown",
              "line": 208,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 211,
              "isExported": false
            },
            {
              "name": "applyRateLimit",
              "type": "unknown",
              "line": 224,
              "isExported": false
            },
            {
              "name": "checkServiceRateLimit",
              "type": "unknown",
              "line": 246,
              "isExported": false
            },
            {
              "name": "checkClientRateLimit",
              "type": "unknown",
              "line": 268,
              "isExported": false
            },
            {
              "name": "executeWithCircuitBreaker",
              "type": "unknown",
              "line": 293,
              "isExported": false
            },
            {
              "name": "executeWithTimeout",
              "type": "unknown",
              "line": 323,
              "isExported": false
            },
            {
              "name": "executeWithRetry",
              "type": "unknown",
              "line": 342,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 346,
              "isExported": false
            },
            {
              "name": "handleExecutionError",
              "type": "unknown",
              "line": 380,
              "isExported": false
            },
            {
              "name": "executeAnthropicRequest",
              "type": "unknown",
              "line": 404,
              "isExported": false
            },
            {
              "name": "executeEmbeddingRequest",
              "type": "unknown",
              "line": 408,
              "isExported": false
            },
            {
              "name": "executeDatabaseRequest",
              "type": "unknown",
              "line": 412,
              "isExported": false
            },
            {
              "name": "recordSuccess",
              "type": "unknown",
              "line": 419,
              "isExported": false
            },
            {
              "name": "updateServiceHealth",
              "type": "unknown",
              "line": 435,
              "isExported": false
            },
            {
              "name": "updateSystemHealth",
              "type": "unknown",
              "line": 448,
              "isExported": false
            },
            {
              "name": "isNonRetryableError",
              "type": "unknown",
              "line": 466,
              "isExported": false
            },
            {
              "name": "isCriticalError",
              "type": "unknown",
              "line": 475,
              "isExported": false
            },
            {
              "name": "notifyCriticalError",
              "type": "unknown",
              "line": 483,
              "isExported": false
            },
            {
              "name": "generateExecutionId",
              "type": "unknown",
              "line": 488,
              "isExported": false
            },
            {
              "name": "startTimer",
              "type": "unknown",
              "line": 492,
              "isExported": false
            },
            {
              "name": "sleep",
              "type": "unknown",
              "line": 499,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 507,
              "isExported": false
            },
            {
              "name": "getQuickMetrics",
              "type": "unknown",
              "line": 520,
              "isExported": false
            },
            {
              "name": "getCircuitBreakerStatus",
              "type": "unknown",
              "line": 529,
              "isExported": false
            },
            {
              "name": "getRateLimiterStatus",
              "type": "unknown",
              "line": 537,
              "isExported": false
            },
            {
              "name": "reset",
              "type": "unknown",
              "line": 558,
              "isExported": false
            },
            {
              "name": "forEach",
              "type": "arrow",
              "line": 560,
              "isExported": false
            },
            {
              "name": "updateConfig",
              "type": "unknown",
              "line": 595,
              "isExported": false
            },
            {
              "name": "healthCheck",
              "type": "unknown",
              "line": 603,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ResilienceManager",
              "extends": null,
              "line": 26,
              "isExported": false,
              "methods": [
                {
                  "name": "initializeServices",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "initializeRateLimiters",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithProtection",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkServiceHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "applyRateLimit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkServiceRateLimit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkClientRateLimit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithCircuitBreaker",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithTimeout",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithRetry",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "handleExecutionError",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeAnthropicRequest",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeEmbeddingRequest",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeDatabaseRequest",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateServiceHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isNonRetryableError",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isCriticalError",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "notifyCriticalError",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateExecutionId",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "startTimer",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "sleep",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getQuickMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCircuitBreakerStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getRateLimiterStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "reset",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forEach",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateConfig",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "healthCheck",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "RateLimitError",
              "extends": "Error",
              "line": 633,
              "isExported": false,
              "methods": []
            },
            {
              "name": "TimeoutError",
              "extends": "Error",
              "line": 641,
              "isExported": false,
              "methods": []
            }
          ],
          "imports": [
            {
              "source": "../../utils/logger",
              "default": "logger",
              "named": [],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "../../utils/circuitBreaker",
              "default": "CircuitBreaker",
              "named": [],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "../../utils/rateLimiter",
              "default": null,
              "named": [
                "apiRateLimiter"
              ],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    ResilienceManager,\n    RateLimitError,\n    TimeoutError\n}",
              "type": "commonjs",
              "line": 648
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "src\\utils",
      "fileCount": 20,
      "files": [
        {
          "name": "chatState.js",
          "path": "src\\utils\\chatState.js",
          "size": 1734,
          "lines": 58,
          "functions": [
            {
              "name": "pauseChat",
              "type": "function",
              "line": 15,
              "isExported": false
            },
            {
              "name": "resumeChat",
              "type": "function",
              "line": 36,
              "isExported": false
            },
            {
              "name": "isChatPaused",
              "type": "function",
              "line": 49,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 3,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    pauseChat,\n    resumeChat,\n    isChatPaused,\n}",
              "type": "commonjs",
              "line": 53
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "circuitBreaker.js",
          "path": "src\\utils\\circuitBreaker.js",
          "size": 5525,
          "lines": 175,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 10,
              "isExported": false
            },
            {
              "name": "execute",
              "type": "unknown",
              "line": 47,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 51,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 70,
              "isExported": false
            },
            {
              "name": "executeWithTimeout",
              "type": "unknown",
              "line": 79,
              "isExported": false
            },
            {
              "name": "onSuccess",
              "type": "unknown",
              "line": 99,
              "isExported": false
            },
            {
              "name": "onFailure",
              "type": "unknown",
              "line": 116,
              "isExported": false
            },
            {
              "name": "reset",
              "type": "unknown",
              "line": 139,
              "isExported": false
            },
            {
              "name": "getStatus",
              "type": "unknown",
              "line": 152,
              "isExported": false
            },
            {
              "name": "isAvailable",
              "type": "unknown",
              "line": 168,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "CircuitBreaker",
              "extends": null,
              "line": 9,
              "isExported": true,
              "methods": [
                {
                  "name": "execute",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "executeWithTimeout",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "onSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "onFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "reset",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "isAvailable",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 3,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "CircuitBreaker",
              "type": "commonjs",
              "line": 175
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "claude.js",
          "path": "src\\utils\\claude.js",
          "size": 12421,
          "lines": 220,
          "functions": [
            {
              "name": "getSystemPrompt",
              "type": "function",
              "line": 21,
              "isExported": false
            },
            {
              "name": "interpretQuery",
              "type": "function",
              "line": 184,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 35,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 207,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "@anthropic-ai/sdk",
              "default": "Anthropic",
              "named": [],
              "line": 4,
              "isLocal": false
            },
            {
              "source": "./config",
              "default": "config",
              "named": [],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "getConocimientos"
              ],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    interpretQuery,\n}",
              "type": "commonjs",
              "line": 217
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "config.js",
          "path": "src\\utils\\config.js",
          "size": 7391,
          "lines": 149,
          "functions": [
            {
              "name": "validateConfig",
              "type": "arrow",
              "line": 126,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 136,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 3,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "config",
              "type": "commonjs",
              "line": 148
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "contextCache.js",
          "path": "src\\utils\\contextCache.js",
          "size": 13880,
          "lines": 402,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 10,
              "isExported": false
            },
            {
              "name": "initializeStaticCache",
              "type": "unknown",
              "line": 39,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 43,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 86,
              "isExported": false
            },
            {
              "name": "buildCatalogIndex",
              "type": "unknown",
              "line": 96,
              "isExported": false
            },
            {
              "name": "extractProductKeywords",
              "type": "unknown",
              "line": 154,
              "isExported": false
            },
            {
              "name": "extractBrand",
              "type": "unknown",
              "line": 185,
              "isExported": false
            },
            {
              "name": "getOptimizedClientContext",
              "type": "unknown",
              "line": 215,
              "isExported": false
            },
            {
              "name": "getRelevantProducts",
              "type": "unknown",
              "line": 272,
              "isExported": false
            },
            {
              "name": "searchRelevantProducts",
              "type": "unknown",
              "line": 308,
              "isExported": false
            },
            {
              "name": "normalizeQuery",
              "type": "unknown",
              "line": 352,
              "isExported": false
            },
            {
              "name": "getCacheStats",
              "type": "unknown",
              "line": 365,
              "isExported": false
            },
            {
              "name": "clearAllCaches",
              "type": "unknown",
              "line": 386,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ContextCache",
              "extends": null,
              "line": 9,
              "isExported": false,
              "methods": [
                {
                  "name": "initializeStaticCache",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "buildCatalogIndex",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "extractProductKeywords",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "extractBrand",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "getOptimizedClientContext",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "getRelevantProducts",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "searchRelevantProducts",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "normalizeQuery",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "getCacheStats",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "clearAllCaches",
                  "isConstructor": false,
                  "isStatic": true
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "./lruCache",
              "default": null,
              "named": [
                "LRUCache"
              ],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "contextCache",
              "type": "commonjs",
              "line": 402
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "conversationContext.js",
          "path": "src\\utils\\conversationContext.js",
          "size": 15468,
          "lines": 417,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 11,
              "isExported": false
            },
            {
              "name": "getContext",
              "type": "unknown",
              "line": 52,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 55,
              "isExported": false
            },
            {
              "name": "createNewContext",
              "type": "unknown",
              "line": 74,
              "isExported": false
            },
            {
              "name": "updateContext",
              "type": "unknown",
              "line": 104,
              "isExported": false
            },
            {
              "name": "resolveAnaphora",
              "type": "unknown",
              "line": 156,
              "isExported": false
            },
            {
              "name": "getEnrichedContextForAgent",
              "type": "unknown",
              "line": 207,
              "isExported": false
            },
            {
              "name": "shouldResetContext",
              "type": "unknown",
              "line": 253,
              "isExported": false
            },
            {
              "name": "extractEntities",
              "type": "unknown",
              "line": 265,
              "isExported": false
            },
            {
              "name": "updateContextEntities",
              "type": "unknown",
              "line": 311,
              "isExported": false
            },
            {
              "name": "inferCurrentTopic",
              "type": "unknown",
              "line": 337,
              "isExported": false
            },
            {
              "name": "inferConversationStage",
              "type": "unknown",
              "line": 362,
              "isExported": false
            },
            {
              "name": "getStats",
              "type": "unknown",
              "line": 383,
              "isExported": false
            },
            {
              "name": "cleanupExpiredContexts",
              "type": "unknown",
              "line": 395,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ConversationContext",
              "extends": null,
              "line": 10,
              "isExported": false,
              "methods": [
                {
                  "name": "getContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "createNewContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resolveAnaphora",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEnrichedContextForAgent",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "shouldResetContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractEntities",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateContextEntities",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "inferCurrentTopic",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "inferConversationStage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanupExpiredContexts",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./lruCache",
              "default": null,
              "named": [
                "LRUCache"
              ],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "./fuzzyMatcher",
              "default": null,
              "named": [
                "normalizeQuery",
                "normalizeDeviceName",
                "normalizeRepairType",
                "normalizeQualityType"
              ],
              "line": 5,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "conversationContext",
              "type": "commonjs",
              "line": 417
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "failureHandler.js",
          "path": "src\\utils\\failureHandler.js",
          "size": 10338,
          "lines": 270,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 10,
              "isExported": false
            },
            {
              "name": "recordFailure",
              "type": "unknown",
              "line": 34,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 48,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 93,
              "isExported": false
            },
            {
              "name": "recordSuccess",
              "type": "unknown",
              "line": 111,
              "isExported": false
            },
            {
              "name": "getEscalationMessage",
              "type": "unknown",
              "line": 144,
              "isExported": false
            },
            {
              "name": "checkFailureStatus",
              "type": "unknown",
              "line": 155,
              "isExported": false
            },
            {
              "name": "getFailureStats",
              "type": "unknown",
              "line": 207,
              "isExported": false
            },
            {
              "name": "manualReset",
              "type": "unknown",
              "line": 252,
              "isExported": false
            },
            {
              "name": "updateConfig",
              "type": "unknown",
              "line": 261,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "FailureHandler",
              "extends": null,
              "line": 9,
              "isExported": false,
              "methods": [
                {
                  "name": "recordFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getEscalationMessage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkFailureStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getFailureStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "manualReset",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateConfig",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "failureHandler",
              "type": "commonjs",
              "line": 270
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "fuzzyMatcher.js",
          "path": "src\\utils\\fuzzyMatcher.js",
          "size": 12038,
          "lines": 336,
          "functions": [
            {
              "name": "levenshteinDistance",
              "type": "function",
              "line": 13,
              "isExported": false
            },
            {
              "name": "similarity",
              "type": "function",
              "line": 53,
              "isExported": false
            },
            {
              "name": "findBestMatch",
              "type": "function",
              "line": 128,
              "isExported": false
            },
            {
              "name": "normalizeDeviceName",
              "type": "function",
              "line": 172,
              "isExported": false
            },
            {
              "name": "normalizeRepairType",
              "type": "function",
              "line": 197,
              "isExported": false
            },
            {
              "name": "normalizeQualityType",
              "type": "function",
              "line": 222,
              "isExported": false
            },
            {
              "name": "normalizeQuery",
              "type": "function",
              "line": 247,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 22,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 152,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [],
          "exports": [
            {
              "name": "{\n    similarity,\n    levenshteinDistance,\n    normalizeDeviceName,\n    normalizeRepairType,\n    normalizeQualityType,\n    normalizeQuery,\n    findBestMatch,\n    deviceVariants,\n    repairVariants,\n    qualityVariants\n}",
              "type": "commonjs",
              "line": 325
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "intelligentRouter.js",
          "path": "src\\utils\\intelligentRouter.js",
          "size": 19533,
          "lines": 557,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 12,
              "isExported": false
            },
            {
              "name": "processQuery",
              "type": "unknown",
              "line": 59,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 74,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 99,
              "isExported": false
            },
            {
              "name": "analyzeRouting",
              "type": "unknown",
              "line": 132,
              "isExported": false
            },
            {
              "name": "analyzeComplexity",
              "type": "unknown",
              "line": 193,
              "isExported": false
            },
            {
              "name": "analyzeIntention",
              "type": "unknown",
              "line": 258,
              "isExported": false
            },
            {
              "name": "analyzeContext",
              "type": "unknown",
              "line": 311,
              "isExported": false
            },
            {
              "name": "processWithLocal",
              "type": "unknown",
              "line": 329,
              "isExported": false
            },
            {
              "name": "processWithRemote",
              "type": "unknown",
              "line": 405,
              "isExported": false
            },
            {
              "name": "findProductInRelevant",
              "type": "unknown",
              "line": 434,
              "isExported": false
            },
            {
              "name": "evaluateResponseQuality",
              "type": "unknown",
              "line": 474,
              "isExported": false
            },
            {
              "name": "updateMetrics",
              "type": "unknown",
              "line": 523,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 541,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "IntelligentRouter",
              "extends": null,
              "line": 11,
              "isExported": true,
              "methods": [
                {
                  "name": "processQuery",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeRouting",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeComplexity",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeIntention",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "analyzeContext",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processWithLocal",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "processWithRemote",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "findProductInRelevant",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "evaluateResponseQuality",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./qwenLocal",
              "default": "QwenLocalClient",
              "named": [],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "./claude",
              "default": null,
              "named": [
                "interpretQuery: claudeInterpretQuery"
              ],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "./contextCache",
              "default": "contextCache",
              "named": [],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 6,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "IntelligentRouter",
              "type": "commonjs",
              "line": 557
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "llmJudge.js",
          "path": "src\\utils\\llmJudge.js",
          "size": 14774,
          "lines": 426,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 12,
              "isExported": false
            },
            {
              "name": "evaluateResponse",
              "type": "unknown",
              "line": 64,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 68,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 102,
              "isExported": false
            },
            {
              "name": "buildEvaluationPrompt",
              "type": "unknown",
              "line": 116,
              "isExported": false
            },
            {
              "name": "performEvaluation",
              "type": "unknown",
              "line": 180,
              "isExported": false
            },
            {
              "name": "parseEvaluationResponse",
              "type": "unknown",
              "line": 201,
              "isExported": false
            },
            {
              "name": "validateEvaluation",
              "type": "unknown",
              "line": 223,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 235,
              "isExported": false
            },
            {
              "name": "getFallbackEvaluation",
              "type": "unknown",
              "line": 263,
              "isExported": false
            },
            {
              "name": "generateCacheKey",
              "type": "unknown",
              "line": 295,
              "isExported": false
            },
            {
              "name": "updateMetrics",
              "type": "unknown",
              "line": 311,
              "isExported": false
            },
            {
              "name": "batchEvaluate",
              "type": "unknown",
              "line": 330,
              "isExported": false
            },
            {
              "name": "getStats",
              "type": "unknown",
              "line": 373,
              "isExported": false
            },
            {
              "name": "getResponsesNeedingImprovement",
              "type": "unknown",
              "line": 389,
              "isExported": false
            },
            {
              "name": "cleanupCache",
              "type": "unknown",
              "line": 409,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "LLMJudge",
              "extends": null,
              "line": 11,
              "isExported": false,
              "methods": [
                {
                  "name": "evaluateResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildEvaluationPrompt",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performEvaluation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "parseEvaluationResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validateEvaluation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getFallbackEvaluation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateCacheKey",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "updateMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "batchEvaluate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getResponsesNeedingImprovement",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanupCache",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "@langchain/anthropic",
              "default": null,
              "named": [
                "ChatAnthropic"
              ],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "./lruCache",
              "default": null,
              "named": [
                "LRUCache"
              ],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "./rateLimiter",
              "default": null,
              "named": [
                "apiRateLimiter"
              ],
              "line": 6,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "llmJudge",
              "type": "commonjs",
              "line": 426
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "logger.js",
          "path": "src\\utils\\logger.js",
          "size": 2133,
          "lines": 71,
          "functions": [
            {
              "name": "if",
              "type": "unknown",
              "line": 18,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 49,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "winston",
              "default": "winston",
              "named": [],
              "line": 1,
              "isLocal": false
            },
            {
              "source": "fs",
              "default": "fs",
              "named": [],
              "line": 2,
              "isLocal": false
            },
            {
              "source": "path",
              "default": "path",
              "named": [],
              "line": 3,
              "isLocal": false
            }
          ],
          "exports": [
            {
              "name": "logger",
              "type": "commonjs",
              "line": 70
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "lruCache.js",
          "path": "src\\utils\\lruCache.js",
          "size": 6515,
          "lines": 257,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 8,
              "isExported": false
            },
            {
              "name": "get",
              "type": "unknown",
              "line": 25,
              "isExported": false
            },
            {
              "name": "set",
              "type": "unknown",
              "line": 44,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 50,
              "isExported": false
            },
            {
              "name": "has",
              "type": "unknown",
              "line": 66,
              "isExported": false
            },
            {
              "name": "delete",
              "type": "unknown",
              "line": 75,
              "isExported": false
            },
            {
              "name": "clear",
              "type": "unknown",
              "line": 86,
              "isExported": false
            },
            {
              "name": "size",
              "type": "unknown",
              "line": 95,
              "isExported": false
            },
            {
              "name": "keys",
              "type": "unknown",
              "line": 103,
              "isExported": false
            },
            {
              "name": "values",
              "type": "unknown",
              "line": 111,
              "isExported": false
            },
            {
              "name": "forEach",
              "type": "unknown",
              "line": 119,
              "isExported": false
            },
            {
              "name": "getMetrics",
              "type": "unknown",
              "line": 131,
              "isExported": false
            },
            {
              "name": "resetMetrics",
              "type": "unknown",
              "line": 146,
              "isExported": false
            },
            {
              "name": "getExpiredKeys",
              "type": "unknown",
              "line": 161,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 166,
              "isExported": false
            },
            {
              "name": "evictExpired",
              "type": "unknown",
              "line": 180,
              "isExported": false
            },
            {
              "name": "addMetric",
              "type": "unknown",
              "line": 208,
              "isExported": false
            },
            {
              "name": "getRecentMetric",
              "type": "unknown",
              "line": 221,
              "isExported": false
            },
            {
              "name": "cleanup",
              "type": "unknown",
              "line": 237,
              "isExported": false
            },
            {
              "name": "setMaxAge",
              "type": "unknown",
              "line": 249,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "LRUCache",
              "extends": null,
              "line": 7,
              "isExported": false,
              "methods": [
                {
                  "name": "get",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "set",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "has",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "delete",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "clear",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "size",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "keys",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "values",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "forEach",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getExpiredKeys",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "evictExpired",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "MetricsLRUCache",
              "extends": "LRUCache",
              "line": 197,
              "isExported": false,
              "methods": [
                {
                  "name": "addMetric",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getRecentMetric",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanup",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "setMaxAge",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [],
          "exports": [
            {
              "name": "{\n    LRUCache,\n    MetricsLRUCache\n}",
              "type": "commonjs",
              "line": 254
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "outOfScopeDetector.js",
          "path": "src\\utils\\outOfScopeDetector.js",
          "size": 8182,
          "lines": 233,
          "functions": [
            {
              "name": "detectOutOfScope",
              "type": "function",
              "line": 77,
              "isExported": false
            },
            {
              "name": "calculateConfidence",
              "type": "function",
              "line": 129,
              "isExported": false
            },
            {
              "name": "generateRecommendation",
              "type": "function",
              "line": 161,
              "isExported": false
            },
            {
              "name": "generateEmpathicResponse",
              "type": "function",
              "line": 183,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 86,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 162,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 194,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [],
          "exports": [
            {
              "name": "{\n    detectOutOfScope,\n    generateEmpathicResponse,\n    OUT_OF_SCOPE_KEYWORDS,\n    IN_SCOPE_SERVICES\n}",
              "type": "commonjs",
              "line": 228
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "performanceMonitor.js",
          "path": "src\\utils\\performanceMonitor.js",
          "size": 16229,
          "lines": 501,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 10,
              "isExported": false
            },
            {
              "name": "recordRequest",
              "type": "unknown",
              "line": 53,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 66,
              "isExported": false
            },
            {
              "name": "recordLatency",
              "type": "unknown",
              "line": 100,
              "isExported": false
            },
            {
              "name": "recordSourceStats",
              "type": "unknown",
              "line": 122,
              "isExported": false
            },
            {
              "name": "recordIntentionStats",
              "type": "unknown",
              "line": 137,
              "isExported": false
            },
            {
              "name": "recordHourlyStats",
              "type": "unknown",
              "line": 165,
              "isExported": false
            },
            {
              "name": "checkAlerts",
              "type": "unknown",
              "line": 192,
              "isExported": false
            },
            {
              "name": "generateAlert",
              "type": "unknown",
              "line": 233,
              "isExported": false
            },
            {
              "name": "formatAlertMessage",
              "type": "unknown",
              "line": 261,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 262,
              "isExported": false
            },
            {
              "name": "getErrorRate",
              "type": "unknown",
              "line": 280,
              "isExported": false
            },
            {
              "name": "periodicCleanup",
              "type": "unknown",
              "line": 288,
              "isExported": false
            },
            {
              "name": "logIfNeeded",
              "type": "unknown",
              "line": 314,
              "isExported": false
            },
            {
              "name": "getSummary",
              "type": "unknown",
              "line": 336,
              "isExported": false
            },
            {
              "name": "getPercentile",
              "type": "unknown",
              "line": 391,
              "isExported": false
            },
            {
              "name": "getDetailedMetrics",
              "type": "unknown",
              "line": 402,
              "isExported": false
            },
            {
              "name": "getRecentAlerts",
              "type": "unknown",
              "line": 417,
              "isExported": false
            },
            {
              "name": "getLatencyTrends",
              "type": "unknown",
              "line": 436,
              "isExported": false
            },
            {
              "name": "getCurrentHourAverage",
              "type": "unknown",
              "line": 455,
              "isExported": false
            },
            {
              "name": "reset",
              "type": "unknown",
              "line": 474,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "PerformanceMonitor",
              "extends": null,
              "line": 9,
              "isExported": false,
              "methods": [
                {
                  "name": "recordRequest",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordLatency",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordSourceStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordIntentionStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordHourlyStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkAlerts",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateAlert",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "formatAlertMessage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getErrorRate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "periodicCleanup",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "logIfNeeded",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getSummary",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getPercentile",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getDetailedMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getRecentAlerts",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getLatencyTrends",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getCurrentHourAverage",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "reset",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "./lruCache",
              "default": null,
              "named": [
                "MetricsLRUCache"
              ],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "performanceMonitor",
              "type": "commonjs",
              "line": 501
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "proactiveMonitor.js",
          "path": "src\\utils\\proactiveMonitor.js",
          "size": 15023,
          "lines": 418,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 15,
              "isExported": false
            },
            {
              "name": "start",
              "type": "unknown",
              "line": 50,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 51,
              "isExported": false
            },
            {
              "name": "stop",
              "type": "unknown",
              "line": 76,
              "isExported": false
            },
            {
              "name": "performHealthCheck",
              "type": "unknown",
              "line": 97,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 125,
              "isExported": false
            },
            {
              "name": "checkDatabaseHealth",
              "type": "unknown",
              "line": 134,
              "isExported": false
            },
            {
              "name": "checkAnthropicAPIHealth",
              "type": "unknown",
              "line": 155,
              "isExported": false
            },
            {
              "name": "checkCircuitBreakerHealth",
              "type": "unknown",
              "line": 173,
              "isExported": false
            },
            {
              "name": "checkRateLimiterHealth",
              "type": "unknown",
              "line": 199,
              "isExported": false
            },
            {
              "name": "calculateSystemMetrics",
              "type": "unknown",
              "line": 221,
              "isExported": false
            },
            {
              "name": "evaluateSystemHealth",
              "type": "unknown",
              "line": 265,
              "isExported": false
            },
            {
              "name": "generateAlerts",
              "type": "unknown",
              "line": 293,
              "isExported": false
            },
            {
              "name": "addAlert",
              "type": "unknown",
              "line": 318,
              "isExported": false
            },
            {
              "name": "checkCriticalAlerts",
              "type": "unknown",
              "line": 349,
              "isExported": false
            },
            {
              "name": "getStatus",
              "type": "unknown",
              "line": 366,
              "isExported": false
            },
            {
              "name": "acknowledgeAlert",
              "type": "unknown",
              "line": 383,
              "isExported": false
            },
            {
              "name": "cleanupAlerts",
              "type": "unknown",
              "line": 397,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ProactiveMonitor",
              "extends": null,
              "line": 14,
              "isExported": false,
              "methods": [
                {
                  "name": "start",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "stop",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "performHealthCheck",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkDatabaseHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkAnthropicAPIHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkCircuitBreakerHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkRateLimiterHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "calculateSystemMetrics",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "evaluateSystemHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateAlerts",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "addAlert",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "checkCriticalAlerts",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "acknowledgeAlert",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "cleanupAlerts",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "../database/pg",
              "default": null,
              "named": [
                "pool"
              ],
              "line": 4,
              "isLocal": true
            },
            {
              "source": "./circuitBreaker",
              "default": "circuitBreaker",
              "named": [],
              "line": 5,
              "isLocal": true
            },
            {
              "source": "./rateLimiter",
              "default": null,
              "named": [
                "apiRateLimiter"
              ],
              "line": 6,
              "isLocal": true
            },
            {
              "source": "./failureHandler",
              "default": "failureHandler",
              "named": [],
              "line": 7,
              "isLocal": true
            },
            {
              "source": "./conversationContext",
              "default": "conversationContext",
              "named": [],
              "line": 8,
              "isLocal": true
            },
            {
              "source": "./conversationFSM",
              "default": null,
              "named": [
                "conversationFSM"
              ],
              "line": 9,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "proactiveMonitor",
              "type": "commonjs",
              "line": 418
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "qwenLocal.js",
          "path": "src\\utils\\qwenLocal.js",
          "size": 13539,
          "lines": 378,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 10,
              "isExported": false
            },
            {
              "name": "checkHealth",
              "type": "unknown",
              "line": 29,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 33,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 55,
              "isExported": false
            },
            {
              "name": "generate",
              "type": "unknown",
              "line": 69,
              "isExported": false
            },
            {
              "name": "extractQueryInfo",
              "type": "unknown",
              "line": 125,
              "isExported": false
            },
            {
              "name": "generateConversationalResponse",
              "type": "unknown",
              "line": 178,
              "isExported": false
            },
            {
              "name": "buildExtractionPrompt",
              "type": "unknown",
              "line": 206,
              "isExported": false
            },
            {
              "name": "buildConversationalPrompt",
              "type": "unknown",
              "line": 243,
              "isExported": false
            },
            {
              "name": "getToneStyle",
              "type": "unknown",
              "line": 297,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 298,
              "isExported": false
            },
            {
              "name": "fallbackExtraction",
              "type": "unknown",
              "line": 314,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "QwenLocalClient",
              "extends": null,
              "line": 9,
              "isExported": true,
              "methods": [
                {
                  "name": "checkHealth",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "extractQueryInfo",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "generateConversationalResponse",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildExtractionPrompt",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "buildConversationalPrompt",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getToneStyle",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "switch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "fallbackExtraction",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "axios",
              "default": "axios",
              "named": [],
              "line": 3,
              "isLocal": false
            },
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "QwenLocalClient",
              "type": "commonjs",
              "line": 378
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "rateLimiter.js",
          "path": "src\\utils\\rateLimiter.js",
          "size": 7833,
          "lines": 255,
          "functions": [
            {
              "name": "withRateLimit",
              "type": "function",
              "line": 233,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 10,
              "isExported": false
            },
            {
              "name": "checkLimit",
              "type": "unknown",
              "line": 27,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 34,
              "isExported": false
            },
            {
              "name": "getBucket",
              "type": "unknown",
              "line": 69,
              "isExported": false
            },
            {
              "name": "refillBucket",
              "type": "unknown",
              "line": 91,
              "isExported": false
            },
            {
              "name": "startRefillTimer",
              "type": "unknown",
              "line": 104,
              "isExported": false
            },
            {
              "name": "getStats",
              "type": "unknown",
              "line": 120,
              "isExported": false
            },
            {
              "name": "resetClient",
              "type": "unknown",
              "line": 140,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 215,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "RateLimiter",
              "extends": null,
              "line": 9,
              "isExported": false,
              "methods": [
                {
                  "name": "checkLimit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getBucket",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "refillBucket",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "startRefillTimer",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetClient",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            },
            {
              "name": "APIRateLimiter",
              "extends": null,
              "line": 154,
              "isExported": false,
              "methods": [
                {
                  "name": "checkLimit",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "getStats",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "resetClient",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./lruCache",
              "default": null,
              "named": [
                "LRUCache"
              ],
              "line": 3,
              "isLocal": true
            },
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 4,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    RateLimiter,\n    APIRateLimiter,\n    apiRateLimiter,\n    withRateLimit\n}",
              "type": "commonjs",
              "line": 250
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "responseValidator.js",
          "path": "src\\utils\\responseValidator.js",
          "size": 6167,
          "lines": 180,
          "functions": [
            {
              "name": "detectInventedDataValidator",
              "type": "function",
              "line": 48,
              "isExported": false
            },
            {
              "name": "calculateRiskLevel",
              "type": "function",
              "line": 129,
              "isExported": false
            },
            {
              "name": "sanitizeResponse",
              "type": "function",
              "line": 140,
              "isExported": false
            },
            {
              "name": "getRecommendation",
              "type": "function",
              "line": 154,
              "isExported": false
            },
            {
              "name": "constructor",
              "type": "unknown",
              "line": 6,
              "isExported": false
            },
            {
              "name": "use",
              "type": "unknown",
              "line": 14,
              "isExported": false
            },
            {
              "name": "validate",
              "type": "unknown",
              "line": 24,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 27,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 60,
              "isExported": false
            },
            {
              "name": "switch",
              "type": "unknown",
              "line": 155,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "ValidationPipeline",
              "extends": null,
              "line": 5,
              "isExported": false,
              "methods": [
                {
                  "name": "use",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "validate",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "for",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [],
          "exports": [
            {
              "name": "{\n    responseValidatorPipeline,\n    ValidationPipeline,\n    detectInventedDataValidator,\n    calculateRiskLevel,\n    sanitizeResponse,\n    getRecommendation\n}",
              "type": "commonjs",
              "line": 173
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "retryHandler.js",
          "path": "src\\utils\\retryHandler.js",
          "size": 938,
          "lines": 22,
          "functions": [
            {
              "name": "while",
              "type": "unknown",
              "line": 5,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 8,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 10,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 1,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "retryHandler",
              "type": "commonjs",
              "line": 22
            }
          ],
          "hasExports": true,
          "isModule": true
        },
        {
          "name": "robustSofiaParser.js",
          "path": "src\\utils\\robustSofiaParser.js",
          "size": 11489,
          "lines": 345,
          "functions": [
            {
              "name": "parse",
              "type": "unknown",
              "line": 28,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 29,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 74,
              "isExported": false
            },
            {
              "name": "extractToolCall",
              "type": "unknown",
              "line": 91,
              "isExported": false
            },
            {
              "name": "for",
              "type": "unknown",
              "line": 104,
              "isExported": false
            },
            {
              "name": "isValidToolName",
              "type": "unknown",
              "line": 150,
              "isExported": false
            },
            {
              "name": "parseToolArguments",
              "type": "unknown",
              "line": 171,
              "isExported": false
            },
            {
              "name": "calculateConfidence",
              "type": "unknown",
              "line": 212,
              "isExported": false
            },
            {
              "name": "sanitizeUserResponse",
              "type": "unknown",
              "line": 237,
              "isExported": false
            },
            {
              "name": "validateToolCall",
              "type": "unknown",
              "line": 261,
              "isExported": false
            },
            {
              "name": "getParsingStats",
              "type": "unknown",
              "line": 330,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "RobustSofiaParser",
              "extends": null,
              "line": 20,
              "isExported": false,
              "methods": [
                {
                  "name": "parse",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": true
                },
                {
                  "name": "extractToolCall",
                  "isConstructor": false,
                  "isStatic": true
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "./logger",
              "default": "logger",
              "named": [],
              "line": 7,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "{\n    RobustSofiaParser\n}",
              "type": "commonjs",
              "line": 343
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": [
        {
          "name": "Grupo 1",
          "files": [
            {
              "name": "chatState.js",
              "path": "src\\utils\\chatState.js",
              "size": 1734,
              "lines": 58,
              "functions": [
                {
                  "name": "pauseChat",
                  "type": "function",
                  "line": 15,
                  "isExported": false
                },
                {
                  "name": "resumeChat",
                  "type": "function",
                  "line": 36,
                  "isExported": false
                },
                {
                  "name": "isChatPaused",
                  "type": "function",
                  "line": 49,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    pauseChat,\n    resumeChat,\n    isChatPaused,\n}",
                  "type": "commonjs",
                  "line": 53
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "circuitBreaker.js",
              "path": "src\\utils\\circuitBreaker.js",
              "size": 5525,
              "lines": 175,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 10,
                  "isExported": false
                },
                {
                  "name": "execute",
                  "type": "unknown",
                  "line": 47,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 51,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 70,
                  "isExported": false
                },
                {
                  "name": "executeWithTimeout",
                  "type": "unknown",
                  "line": 79,
                  "isExported": false
                },
                {
                  "name": "onSuccess",
                  "type": "unknown",
                  "line": 99,
                  "isExported": false
                },
                {
                  "name": "onFailure",
                  "type": "unknown",
                  "line": 116,
                  "isExported": false
                },
                {
                  "name": "reset",
                  "type": "unknown",
                  "line": 139,
                  "isExported": false
                },
                {
                  "name": "getStatus",
                  "type": "unknown",
                  "line": 152,
                  "isExported": false
                },
                {
                  "name": "isAvailable",
                  "type": "unknown",
                  "line": 168,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "CircuitBreaker",
                  "extends": null,
                  "line": 9,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "execute",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "executeWithTimeout",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "onSuccess",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "onFailure",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "reset",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStatus",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "isAvailable",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "CircuitBreaker",
                  "type": "commonjs",
                  "line": 175
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "claude.js",
              "path": "src\\utils\\claude.js",
              "size": 12421,
              "lines": 220,
              "functions": [
                {
                  "name": "getSystemPrompt",
                  "type": "function",
                  "line": 21,
                  "isExported": false
                },
                {
                  "name": "interpretQuery",
                  "type": "function",
                  "line": 184,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 35,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 207,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "@anthropic-ai/sdk",
                  "default": "Anthropic",
                  "named": [],
                  "line": 4,
                  "isLocal": false
                },
                {
                  "source": "./config",
                  "default": "config",
                  "named": [],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "getConocimientos"
                  ],
                  "line": 7,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    interpretQuery,\n}",
                  "type": "commonjs",
                  "line": 217
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "config.js",
              "path": "src\\utils\\config.js",
              "size": 7391,
              "lines": 149,
              "functions": [
                {
                  "name": "validateConfig",
                  "type": "arrow",
                  "line": 126,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 136,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "config",
                  "type": "commonjs",
                  "line": 148
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "contextCache.js",
              "path": "src\\utils\\contextCache.js",
              "size": 13880,
              "lines": 402,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 10,
                  "isExported": false
                },
                {
                  "name": "initializeStaticCache",
                  "type": "unknown",
                  "line": 39,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 43,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 86,
                  "isExported": false
                },
                {
                  "name": "buildCatalogIndex",
                  "type": "unknown",
                  "line": 96,
                  "isExported": false
                },
                {
                  "name": "extractProductKeywords",
                  "type": "unknown",
                  "line": 154,
                  "isExported": false
                },
                {
                  "name": "extractBrand",
                  "type": "unknown",
                  "line": 185,
                  "isExported": false
                },
                {
                  "name": "getOptimizedClientContext",
                  "type": "unknown",
                  "line": 215,
                  "isExported": false
                },
                {
                  "name": "getRelevantProducts",
                  "type": "unknown",
                  "line": 272,
                  "isExported": false
                },
                {
                  "name": "searchRelevantProducts",
                  "type": "unknown",
                  "line": 308,
                  "isExported": false
                },
                {
                  "name": "normalizeQuery",
                  "type": "unknown",
                  "line": 352,
                  "isExported": false
                },
                {
                  "name": "getCacheStats",
                  "type": "unknown",
                  "line": 365,
                  "isExported": false
                },
                {
                  "name": "clearAllCaches",
                  "type": "unknown",
                  "line": 386,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ContextCache",
                  "extends": null,
                  "line": 9,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "initializeStaticCache",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "buildCatalogIndex",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "extractProductKeywords",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "extractBrand",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "getOptimizedClientContext",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "getRelevantProducts",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "searchRelevantProducts",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "normalizeQuery",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "getCacheStats",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "clearAllCaches",
                      "isConstructor": false,
                      "isStatic": true
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "./lruCache",
                  "default": null,
                  "named": [
                    "LRUCache"
                  ],
                  "line": 4,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "contextCache",
                  "type": "commonjs",
                  "line": 402
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 2",
          "files": [
            {
              "name": "conversationContext.js",
              "path": "src\\utils\\conversationContext.js",
              "size": 15468,
              "lines": 417,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 11,
                  "isExported": false
                },
                {
                  "name": "getContext",
                  "type": "unknown",
                  "line": 52,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 55,
                  "isExported": false
                },
                {
                  "name": "createNewContext",
                  "type": "unknown",
                  "line": 74,
                  "isExported": false
                },
                {
                  "name": "updateContext",
                  "type": "unknown",
                  "line": 104,
                  "isExported": false
                },
                {
                  "name": "resolveAnaphora",
                  "type": "unknown",
                  "line": 156,
                  "isExported": false
                },
                {
                  "name": "getEnrichedContextForAgent",
                  "type": "unknown",
                  "line": 207,
                  "isExported": false
                },
                {
                  "name": "shouldResetContext",
                  "type": "unknown",
                  "line": 253,
                  "isExported": false
                },
                {
                  "name": "extractEntities",
                  "type": "unknown",
                  "line": 265,
                  "isExported": false
                },
                {
                  "name": "updateContextEntities",
                  "type": "unknown",
                  "line": 311,
                  "isExported": false
                },
                {
                  "name": "inferCurrentTopic",
                  "type": "unknown",
                  "line": 337,
                  "isExported": false
                },
                {
                  "name": "inferConversationStage",
                  "type": "unknown",
                  "line": 362,
                  "isExported": false
                },
                {
                  "name": "getStats",
                  "type": "unknown",
                  "line": 383,
                  "isExported": false
                },
                {
                  "name": "cleanupExpiredContexts",
                  "type": "unknown",
                  "line": 395,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ConversationContext",
                  "extends": null,
                  "line": 10,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "getContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "createNewContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resolveAnaphora",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getEnrichedContextForAgent",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "shouldResetContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractEntities",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateContextEntities",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "inferCurrentTopic",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "inferConversationStage",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanupExpiredContexts",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./lruCache",
                  "default": null,
                  "named": [
                    "LRUCache"
                  ],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "./fuzzyMatcher",
                  "default": null,
                  "named": [
                    "normalizeQuery",
                    "normalizeDeviceName",
                    "normalizeRepairType",
                    "normalizeQualityType"
                  ],
                  "line": 5,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "conversationContext",
                  "type": "commonjs",
                  "line": 417
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "failureHandler.js",
              "path": "src\\utils\\failureHandler.js",
              "size": 10338,
              "lines": 270,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 10,
                  "isExported": false
                },
                {
                  "name": "recordFailure",
                  "type": "unknown",
                  "line": 34,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 48,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 93,
                  "isExported": false
                },
                {
                  "name": "recordSuccess",
                  "type": "unknown",
                  "line": 111,
                  "isExported": false
                },
                {
                  "name": "getEscalationMessage",
                  "type": "unknown",
                  "line": 144,
                  "isExported": false
                },
                {
                  "name": "checkFailureStatus",
                  "type": "unknown",
                  "line": 155,
                  "isExported": false
                },
                {
                  "name": "getFailureStats",
                  "type": "unknown",
                  "line": 207,
                  "isExported": false
                },
                {
                  "name": "manualReset",
                  "type": "unknown",
                  "line": 252,
                  "isExported": false
                },
                {
                  "name": "updateConfig",
                  "type": "unknown",
                  "line": 261,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "FailureHandler",
                  "extends": null,
                  "line": 9,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "recordFailure",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordSuccess",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getEscalationMessage",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkFailureStatus",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getFailureStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "manualReset",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateConfig",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "failureHandler",
                  "type": "commonjs",
                  "line": 270
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "fuzzyMatcher.js",
              "path": "src\\utils\\fuzzyMatcher.js",
              "size": 12038,
              "lines": 336,
              "functions": [
                {
                  "name": "levenshteinDistance",
                  "type": "function",
                  "line": 13,
                  "isExported": false
                },
                {
                  "name": "similarity",
                  "type": "function",
                  "line": 53,
                  "isExported": false
                },
                {
                  "name": "findBestMatch",
                  "type": "function",
                  "line": 128,
                  "isExported": false
                },
                {
                  "name": "normalizeDeviceName",
                  "type": "function",
                  "line": 172,
                  "isExported": false
                },
                {
                  "name": "normalizeRepairType",
                  "type": "function",
                  "line": 197,
                  "isExported": false
                },
                {
                  "name": "normalizeQualityType",
                  "type": "function",
                  "line": 222,
                  "isExported": false
                },
                {
                  "name": "normalizeQuery",
                  "type": "function",
                  "line": 247,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 22,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 152,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [],
              "exports": [
                {
                  "name": "{\n    similarity,\n    levenshteinDistance,\n    normalizeDeviceName,\n    normalizeRepairType,\n    normalizeQualityType,\n    normalizeQuery,\n    findBestMatch,\n    deviceVariants,\n    repairVariants,\n    qualityVariants\n}",
                  "type": "commonjs",
                  "line": 325
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "intelligentRouter.js",
              "path": "src\\utils\\intelligentRouter.js",
              "size": 19533,
              "lines": 557,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 12,
                  "isExported": false
                },
                {
                  "name": "processQuery",
                  "type": "unknown",
                  "line": 59,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 74,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 99,
                  "isExported": false
                },
                {
                  "name": "analyzeRouting",
                  "type": "unknown",
                  "line": 132,
                  "isExported": false
                },
                {
                  "name": "analyzeComplexity",
                  "type": "unknown",
                  "line": 193,
                  "isExported": false
                },
                {
                  "name": "analyzeIntention",
                  "type": "unknown",
                  "line": 258,
                  "isExported": false
                },
                {
                  "name": "analyzeContext",
                  "type": "unknown",
                  "line": 311,
                  "isExported": false
                },
                {
                  "name": "processWithLocal",
                  "type": "unknown",
                  "line": 329,
                  "isExported": false
                },
                {
                  "name": "processWithRemote",
                  "type": "unknown",
                  "line": 405,
                  "isExported": false
                },
                {
                  "name": "findProductInRelevant",
                  "type": "unknown",
                  "line": 434,
                  "isExported": false
                },
                {
                  "name": "evaluateResponseQuality",
                  "type": "unknown",
                  "line": 474,
                  "isExported": false
                },
                {
                  "name": "updateMetrics",
                  "type": "unknown",
                  "line": 523,
                  "isExported": false
                },
                {
                  "name": "getMetrics",
                  "type": "unknown",
                  "line": 541,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "IntelligentRouter",
                  "extends": null,
                  "line": 11,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "processQuery",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeRouting",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeComplexity",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeIntention",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "analyzeContext",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processWithLocal",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "processWithRemote",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "findProductInRelevant",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "evaluateResponseQuality",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./qwenLocal",
                  "default": "QwenLocalClient",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "./claude",
                  "default": null,
                  "named": [
                    "interpretQuery: claudeInterpretQuery"
                  ],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "./contextCache",
                  "default": "contextCache",
                  "named": [],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 6,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "IntelligentRouter",
                  "type": "commonjs",
                  "line": 557
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "llmJudge.js",
              "path": "src\\utils\\llmJudge.js",
              "size": 14774,
              "lines": 426,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 12,
                  "isExported": false
                },
                {
                  "name": "evaluateResponse",
                  "type": "unknown",
                  "line": 64,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 68,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 102,
                  "isExported": false
                },
                {
                  "name": "buildEvaluationPrompt",
                  "type": "unknown",
                  "line": 116,
                  "isExported": false
                },
                {
                  "name": "performEvaluation",
                  "type": "unknown",
                  "line": 180,
                  "isExported": false
                },
                {
                  "name": "parseEvaluationResponse",
                  "type": "unknown",
                  "line": 201,
                  "isExported": false
                },
                {
                  "name": "validateEvaluation",
                  "type": "unknown",
                  "line": 223,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 235,
                  "isExported": false
                },
                {
                  "name": "getFallbackEvaluation",
                  "type": "unknown",
                  "line": 263,
                  "isExported": false
                },
                {
                  "name": "generateCacheKey",
                  "type": "unknown",
                  "line": 295,
                  "isExported": false
                },
                {
                  "name": "updateMetrics",
                  "type": "unknown",
                  "line": 311,
                  "isExported": false
                },
                {
                  "name": "batchEvaluate",
                  "type": "unknown",
                  "line": 330,
                  "isExported": false
                },
                {
                  "name": "getStats",
                  "type": "unknown",
                  "line": 373,
                  "isExported": false
                },
                {
                  "name": "getResponsesNeedingImprovement",
                  "type": "unknown",
                  "line": 389,
                  "isExported": false
                },
                {
                  "name": "cleanupCache",
                  "type": "unknown",
                  "line": 409,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "LLMJudge",
                  "extends": null,
                  "line": 11,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "evaluateResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "buildEvaluationPrompt",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performEvaluation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "parseEvaluationResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validateEvaluation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getFallbackEvaluation",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateCacheKey",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "updateMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "batchEvaluate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getResponsesNeedingImprovement",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanupCache",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "@langchain/anthropic",
                  "default": null,
                  "named": [
                    "ChatAnthropic"
                  ],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "./lruCache",
                  "default": null,
                  "named": [
                    "LRUCache"
                  ],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "./rateLimiter",
                  "default": null,
                  "named": [
                    "apiRateLimiter"
                  ],
                  "line": 6,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "llmJudge",
                  "type": "commonjs",
                  "line": 426
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 3",
          "files": [
            {
              "name": "logger.js",
              "path": "src\\utils\\logger.js",
              "size": 2133,
              "lines": 71,
              "functions": [
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 18,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 49,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "winston",
                  "default": "winston",
                  "named": [],
                  "line": 1,
                  "isLocal": false
                },
                {
                  "source": "fs",
                  "default": "fs",
                  "named": [],
                  "line": 2,
                  "isLocal": false
                },
                {
                  "source": "path",
                  "default": "path",
                  "named": [],
                  "line": 3,
                  "isLocal": false
                }
              ],
              "exports": [
                {
                  "name": "logger",
                  "type": "commonjs",
                  "line": 70
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "lruCache.js",
              "path": "src\\utils\\lruCache.js",
              "size": 6515,
              "lines": 257,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 8,
                  "isExported": false
                },
                {
                  "name": "get",
                  "type": "unknown",
                  "line": 25,
                  "isExported": false
                },
                {
                  "name": "set",
                  "type": "unknown",
                  "line": 44,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 50,
                  "isExported": false
                },
                {
                  "name": "has",
                  "type": "unknown",
                  "line": 66,
                  "isExported": false
                },
                {
                  "name": "delete",
                  "type": "unknown",
                  "line": 75,
                  "isExported": false
                },
                {
                  "name": "clear",
                  "type": "unknown",
                  "line": 86,
                  "isExported": false
                },
                {
                  "name": "size",
                  "type": "unknown",
                  "line": 95,
                  "isExported": false
                },
                {
                  "name": "keys",
                  "type": "unknown",
                  "line": 103,
                  "isExported": false
                },
                {
                  "name": "values",
                  "type": "unknown",
                  "line": 111,
                  "isExported": false
                },
                {
                  "name": "forEach",
                  "type": "unknown",
                  "line": 119,
                  "isExported": false
                },
                {
                  "name": "getMetrics",
                  "type": "unknown",
                  "line": 131,
                  "isExported": false
                },
                {
                  "name": "resetMetrics",
                  "type": "unknown",
                  "line": 146,
                  "isExported": false
                },
                {
                  "name": "getExpiredKeys",
                  "type": "unknown",
                  "line": 161,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 166,
                  "isExported": false
                },
                {
                  "name": "evictExpired",
                  "type": "unknown",
                  "line": 180,
                  "isExported": false
                },
                {
                  "name": "addMetric",
                  "type": "unknown",
                  "line": 208,
                  "isExported": false
                },
                {
                  "name": "getRecentMetric",
                  "type": "unknown",
                  "line": 221,
                  "isExported": false
                },
                {
                  "name": "cleanup",
                  "type": "unknown",
                  "line": 237,
                  "isExported": false
                },
                {
                  "name": "setMaxAge",
                  "type": "unknown",
                  "line": 249,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "LRUCache",
                  "extends": null,
                  "line": 7,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "get",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "set",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "has",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "delete",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "clear",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "size",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "keys",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "values",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "forEach",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getExpiredKeys",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "evictExpired",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                },
                {
                  "name": "MetricsLRUCache",
                  "extends": "LRUCache",
                  "line": 197,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "addMetric",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getRecentMetric",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanup",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "setMaxAge",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [],
              "exports": [
                {
                  "name": "{\n    LRUCache,\n    MetricsLRUCache\n}",
                  "type": "commonjs",
                  "line": 254
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "outOfScopeDetector.js",
              "path": "src\\utils\\outOfScopeDetector.js",
              "size": 8182,
              "lines": 233,
              "functions": [
                {
                  "name": "detectOutOfScope",
                  "type": "function",
                  "line": 77,
                  "isExported": false
                },
                {
                  "name": "calculateConfidence",
                  "type": "function",
                  "line": 129,
                  "isExported": false
                },
                {
                  "name": "generateRecommendation",
                  "type": "function",
                  "line": 161,
                  "isExported": false
                },
                {
                  "name": "generateEmpathicResponse",
                  "type": "function",
                  "line": 183,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 86,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 162,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 194,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [],
              "exports": [
                {
                  "name": "{\n    detectOutOfScope,\n    generateEmpathicResponse,\n    OUT_OF_SCOPE_KEYWORDS,\n    IN_SCOPE_SERVICES\n}",
                  "type": "commonjs",
                  "line": 228
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "performanceMonitor.js",
              "path": "src\\utils\\performanceMonitor.js",
              "size": 16229,
              "lines": 501,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 10,
                  "isExported": false
                },
                {
                  "name": "recordRequest",
                  "type": "unknown",
                  "line": 53,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 66,
                  "isExported": false
                },
                {
                  "name": "recordLatency",
                  "type": "unknown",
                  "line": 100,
                  "isExported": false
                },
                {
                  "name": "recordSourceStats",
                  "type": "unknown",
                  "line": 122,
                  "isExported": false
                },
                {
                  "name": "recordIntentionStats",
                  "type": "unknown",
                  "line": 137,
                  "isExported": false
                },
                {
                  "name": "recordHourlyStats",
                  "type": "unknown",
                  "line": 165,
                  "isExported": false
                },
                {
                  "name": "checkAlerts",
                  "type": "unknown",
                  "line": 192,
                  "isExported": false
                },
                {
                  "name": "generateAlert",
                  "type": "unknown",
                  "line": 233,
                  "isExported": false
                },
                {
                  "name": "formatAlertMessage",
                  "type": "unknown",
                  "line": 261,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 262,
                  "isExported": false
                },
                {
                  "name": "getErrorRate",
                  "type": "unknown",
                  "line": 280,
                  "isExported": false
                },
                {
                  "name": "periodicCleanup",
                  "type": "unknown",
                  "line": 288,
                  "isExported": false
                },
                {
                  "name": "logIfNeeded",
                  "type": "unknown",
                  "line": 314,
                  "isExported": false
                },
                {
                  "name": "getSummary",
                  "type": "unknown",
                  "line": 336,
                  "isExported": false
                },
                {
                  "name": "getPercentile",
                  "type": "unknown",
                  "line": 391,
                  "isExported": false
                },
                {
                  "name": "getDetailedMetrics",
                  "type": "unknown",
                  "line": 402,
                  "isExported": false
                },
                {
                  "name": "getRecentAlerts",
                  "type": "unknown",
                  "line": 417,
                  "isExported": false
                },
                {
                  "name": "getLatencyTrends",
                  "type": "unknown",
                  "line": 436,
                  "isExported": false
                },
                {
                  "name": "getCurrentHourAverage",
                  "type": "unknown",
                  "line": 455,
                  "isExported": false
                },
                {
                  "name": "reset",
                  "type": "unknown",
                  "line": 474,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "PerformanceMonitor",
                  "extends": null,
                  "line": 9,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "recordRequest",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordLatency",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordSourceStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordIntentionStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "recordHourlyStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkAlerts",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateAlert",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "formatAlertMessage",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getErrorRate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "periodicCleanup",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "logIfNeeded",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getSummary",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getPercentile",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getDetailedMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getRecentAlerts",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getLatencyTrends",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getCurrentHourAverage",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "reset",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "./lruCache",
                  "default": null,
                  "named": [
                    "MetricsLRUCache"
                  ],
                  "line": 4,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "performanceMonitor",
                  "type": "commonjs",
                  "line": 501
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "proactiveMonitor.js",
              "path": "src\\utils\\proactiveMonitor.js",
              "size": 15023,
              "lines": 418,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 15,
                  "isExported": false
                },
                {
                  "name": "start",
                  "type": "unknown",
                  "line": 50,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 51,
                  "isExported": false
                },
                {
                  "name": "stop",
                  "type": "unknown",
                  "line": 76,
                  "isExported": false
                },
                {
                  "name": "performHealthCheck",
                  "type": "unknown",
                  "line": 97,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 125,
                  "isExported": false
                },
                {
                  "name": "checkDatabaseHealth",
                  "type": "unknown",
                  "line": 134,
                  "isExported": false
                },
                {
                  "name": "checkAnthropicAPIHealth",
                  "type": "unknown",
                  "line": 155,
                  "isExported": false
                },
                {
                  "name": "checkCircuitBreakerHealth",
                  "type": "unknown",
                  "line": 173,
                  "isExported": false
                },
                {
                  "name": "checkRateLimiterHealth",
                  "type": "unknown",
                  "line": 199,
                  "isExported": false
                },
                {
                  "name": "calculateSystemMetrics",
                  "type": "unknown",
                  "line": 221,
                  "isExported": false
                },
                {
                  "name": "evaluateSystemHealth",
                  "type": "unknown",
                  "line": 265,
                  "isExported": false
                },
                {
                  "name": "generateAlerts",
                  "type": "unknown",
                  "line": 293,
                  "isExported": false
                },
                {
                  "name": "addAlert",
                  "type": "unknown",
                  "line": 318,
                  "isExported": false
                },
                {
                  "name": "checkCriticalAlerts",
                  "type": "unknown",
                  "line": 349,
                  "isExported": false
                },
                {
                  "name": "getStatus",
                  "type": "unknown",
                  "line": 366,
                  "isExported": false
                },
                {
                  "name": "acknowledgeAlert",
                  "type": "unknown",
                  "line": 383,
                  "isExported": false
                },
                {
                  "name": "cleanupAlerts",
                  "type": "unknown",
                  "line": 397,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ProactiveMonitor",
                  "extends": null,
                  "line": 14,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "start",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "stop",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "performHealthCheck",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkDatabaseHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkAnthropicAPIHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkCircuitBreakerHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkRateLimiterHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "calculateSystemMetrics",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "evaluateSystemHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateAlerts",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "addAlert",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "checkCriticalAlerts",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStatus",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "acknowledgeAlert",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "cleanupAlerts",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "../database/pg",
                  "default": null,
                  "named": [
                    "pool"
                  ],
                  "line": 4,
                  "isLocal": true
                },
                {
                  "source": "./circuitBreaker",
                  "default": "circuitBreaker",
                  "named": [],
                  "line": 5,
                  "isLocal": true
                },
                {
                  "source": "./rateLimiter",
                  "default": null,
                  "named": [
                    "apiRateLimiter"
                  ],
                  "line": 6,
                  "isLocal": true
                },
                {
                  "source": "./failureHandler",
                  "default": "failureHandler",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                },
                {
                  "source": "./conversationContext",
                  "default": "conversationContext",
                  "named": [],
                  "line": 8,
                  "isLocal": true
                },
                {
                  "source": "./conversationFSM",
                  "default": null,
                  "named": [
                    "conversationFSM"
                  ],
                  "line": 9,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "proactiveMonitor",
                  "type": "commonjs",
                  "line": 418
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        },
        {
          "name": "Grupo 4",
          "files": [
            {
              "name": "qwenLocal.js",
              "path": "src\\utils\\qwenLocal.js",
              "size": 13539,
              "lines": 378,
              "functions": [
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 10,
                  "isExported": false
                },
                {
                  "name": "checkHealth",
                  "type": "unknown",
                  "line": 29,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 33,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 55,
                  "isExported": false
                },
                {
                  "name": "generate",
                  "type": "unknown",
                  "line": 69,
                  "isExported": false
                },
                {
                  "name": "extractQueryInfo",
                  "type": "unknown",
                  "line": 125,
                  "isExported": false
                },
                {
                  "name": "generateConversationalResponse",
                  "type": "unknown",
                  "line": 178,
                  "isExported": false
                },
                {
                  "name": "buildExtractionPrompt",
                  "type": "unknown",
                  "line": 206,
                  "isExported": false
                },
                {
                  "name": "buildConversationalPrompt",
                  "type": "unknown",
                  "line": 243,
                  "isExported": false
                },
                {
                  "name": "getToneStyle",
                  "type": "unknown",
                  "line": 297,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 298,
                  "isExported": false
                },
                {
                  "name": "fallbackExtraction",
                  "type": "unknown",
                  "line": 314,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "QwenLocalClient",
                  "extends": null,
                  "line": 9,
                  "isExported": true,
                  "methods": [
                    {
                      "name": "checkHealth",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "extractQueryInfo",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "generateConversationalResponse",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "buildExtractionPrompt",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "buildConversationalPrompt",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getToneStyle",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "switch",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "fallbackExtraction",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "axios",
                  "default": "axios",
                  "named": [],
                  "line": 3,
                  "isLocal": false
                },
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "QwenLocalClient",
                  "type": "commonjs",
                  "line": 378
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "rateLimiter.js",
              "path": "src\\utils\\rateLimiter.js",
              "size": 7833,
              "lines": 255,
              "functions": [
                {
                  "name": "withRateLimit",
                  "type": "function",
                  "line": 233,
                  "isExported": false
                },
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 10,
                  "isExported": false
                },
                {
                  "name": "checkLimit",
                  "type": "unknown",
                  "line": 27,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 34,
                  "isExported": false
                },
                {
                  "name": "getBucket",
                  "type": "unknown",
                  "line": 69,
                  "isExported": false
                },
                {
                  "name": "refillBucket",
                  "type": "unknown",
                  "line": 91,
                  "isExported": false
                },
                {
                  "name": "startRefillTimer",
                  "type": "unknown",
                  "line": 104,
                  "isExported": false
                },
                {
                  "name": "getStats",
                  "type": "unknown",
                  "line": 120,
                  "isExported": false
                },
                {
                  "name": "resetClient",
                  "type": "unknown",
                  "line": 140,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 215,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "RateLimiter",
                  "extends": null,
                  "line": 9,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "checkLimit",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getBucket",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "refillBucket",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "startRefillTimer",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetClient",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                },
                {
                  "name": "APIRateLimiter",
                  "extends": null,
                  "line": 154,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "checkLimit",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "getStats",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "resetClient",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./lruCache",
                  "default": null,
                  "named": [
                    "LRUCache"
                  ],
                  "line": 3,
                  "isLocal": true
                },
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 4,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    RateLimiter,\n    APIRateLimiter,\n    apiRateLimiter,\n    withRateLimit\n}",
                  "type": "commonjs",
                  "line": 250
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "responseValidator.js",
              "path": "src\\utils\\responseValidator.js",
              "size": 6167,
              "lines": 180,
              "functions": [
                {
                  "name": "detectInventedDataValidator",
                  "type": "function",
                  "line": 48,
                  "isExported": false
                },
                {
                  "name": "calculateRiskLevel",
                  "type": "function",
                  "line": 129,
                  "isExported": false
                },
                {
                  "name": "sanitizeResponse",
                  "type": "function",
                  "line": 140,
                  "isExported": false
                },
                {
                  "name": "getRecommendation",
                  "type": "function",
                  "line": 154,
                  "isExported": false
                },
                {
                  "name": "constructor",
                  "type": "unknown",
                  "line": 6,
                  "isExported": false
                },
                {
                  "name": "use",
                  "type": "unknown",
                  "line": 14,
                  "isExported": false
                },
                {
                  "name": "validate",
                  "type": "unknown",
                  "line": 24,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 27,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 60,
                  "isExported": false
                },
                {
                  "name": "switch",
                  "type": "unknown",
                  "line": 155,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "ValidationPipeline",
                  "extends": null,
                  "line": 5,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "use",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "validate",
                      "isConstructor": false,
                      "isStatic": false
                    },
                    {
                      "name": "for",
                      "isConstructor": false,
                      "isStatic": false
                    }
                  ]
                }
              ],
              "imports": [],
              "exports": [
                {
                  "name": "{\n    responseValidatorPipeline,\n    ValidationPipeline,\n    detectInventedDataValidator,\n    calculateRiskLevel,\n    sanitizeResponse,\n    getRecommendation\n}",
                  "type": "commonjs",
                  "line": 173
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "retryHandler.js",
              "path": "src\\utils\\retryHandler.js",
              "size": 938,
              "lines": 22,
              "functions": [
                {
                  "name": "while",
                  "type": "unknown",
                  "line": 5,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 8,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 10,
                  "isExported": false
                }
              ],
              "classes": [],
              "imports": [
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 1,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "retryHandler",
                  "type": "commonjs",
                  "line": 22
                }
              ],
              "hasExports": true,
              "isModule": true
            },
            {
              "name": "robustSofiaParser.js",
              "path": "src\\utils\\robustSofiaParser.js",
              "size": 11489,
              "lines": 345,
              "functions": [
                {
                  "name": "parse",
                  "type": "unknown",
                  "line": 28,
                  "isExported": false
                },
                {
                  "name": "if",
                  "type": "unknown",
                  "line": 29,
                  "isExported": false
                },
                {
                  "name": "catch",
                  "type": "unknown",
                  "line": 74,
                  "isExported": false
                },
                {
                  "name": "extractToolCall",
                  "type": "unknown",
                  "line": 91,
                  "isExported": false
                },
                {
                  "name": "for",
                  "type": "unknown",
                  "line": 104,
                  "isExported": false
                },
                {
                  "name": "isValidToolName",
                  "type": "unknown",
                  "line": 150,
                  "isExported": false
                },
                {
                  "name": "parseToolArguments",
                  "type": "unknown",
                  "line": 171,
                  "isExported": false
                },
                {
                  "name": "calculateConfidence",
                  "type": "unknown",
                  "line": 212,
                  "isExported": false
                },
                {
                  "name": "sanitizeUserResponse",
                  "type": "unknown",
                  "line": 237,
                  "isExported": false
                },
                {
                  "name": "validateToolCall",
                  "type": "unknown",
                  "line": 261,
                  "isExported": false
                },
                {
                  "name": "getParsingStats",
                  "type": "unknown",
                  "line": 330,
                  "isExported": false
                }
              ],
              "classes": [
                {
                  "name": "RobustSofiaParser",
                  "extends": null,
                  "line": 20,
                  "isExported": false,
                  "methods": [
                    {
                      "name": "parse",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "if",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "catch",
                      "isConstructor": false,
                      "isStatic": true
                    },
                    {
                      "name": "extractToolCall",
                      "isConstructor": false,
                      "isStatic": true
                    }
                  ]
                }
              ],
              "imports": [
                {
                  "source": "./logger",
                  "default": "logger",
                  "named": [],
                  "line": 7,
                  "isLocal": true
                }
              ],
              "exports": [
                {
                  "name": "{\n    RobustSofiaParser\n}",
                  "type": "commonjs",
                  "line": 343
                }
              ],
              "hasExports": true,
              "isModule": true
            }
          ]
        }
      ]
    },
    {
      "path": "task-service",
      "fileCount": 1,
      "files": [
        {
          "name": "index.js",
          "path": "task-service\\index.js",
          "size": 96,
          "lines": 2,
          "functions": [],
          "classes": [],
          "imports": [],
          "exports": [],
          "hasExports": false,
          "isModule": false
        }
      ],
      "groups": []
    },
    {
      "path": "test",
      "fileCount": 1,
      "files": [
        {
          "name": "integration-test.js",
          "path": "test\\integration-test.js",
          "size": 9720,
          "lines": 293,
          "functions": [
            {
              "name": "constructor",
              "type": "unknown",
              "line": 16,
              "isExported": false
            },
            {
              "name": "runAllTests",
              "type": "unknown",
              "line": 28,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 42,
              "isExported": false
            },
            {
              "name": "testInitialization",
              "type": "unknown",
              "line": 53,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 60,
              "isExported": false
            },
            {
              "name": "testPerformanceLayer",
              "type": "unknown",
              "line": 74,
              "isExported": false
            },
            {
              "name": "testResilienceLayer",
              "type": "unknown",
              "line": 102,
              "isExported": false
            },
            {
              "name": "testUnifiedOperation",
              "type": "unknown",
              "line": 130,
              "isExported": false
            },
            {
              "name": "testSystemStatus",
              "type": "unknown",
              "line": 160,
              "isExported": false
            },
            {
              "name": "testOptimization",
              "type": "unknown",
              "line": 184,
              "isExported": false
            },
            {
              "name": "testShutdown",
              "type": "unknown",
              "line": 205,
              "isExported": false
            },
            {
              "name": "recordSuccess",
              "type": "unknown",
              "line": 226,
              "isExported": false
            },
            {
              "name": "recordFailure",
              "type": "unknown",
              "line": 239,
              "isExported": false
            },
            {
              "name": "printResults",
              "type": "unknown",
              "line": 252,
              "isExported": false
            },
            {
              "name": "sleep",
              "type": "unknown",
              "line": 273,
              "isExported": false
            }
          ],
          "classes": [
            {
              "name": "OrchestrationIntegrationTest",
              "extends": null,
              "line": 15,
              "isExported": true,
              "methods": [
                {
                  "name": "runAllTests",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "catch",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "testInitialization",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "if",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "testPerformanceLayer",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "testResilienceLayer",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "testUnifiedOperation",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "testSystemStatus",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "testOptimization",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "testShutdown",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordSuccess",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "recordFailure",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "printResults",
                  "isConstructor": false,
                  "isStatic": false
                },
                {
                  "name": "sleep",
                  "isConstructor": false,
                  "isStatic": false
                }
              ]
            }
          ],
          "imports": [
            {
              "source": "../src/utils/logger",
              "default": "logger",
              "named": [],
              "line": 9,
              "isLocal": true
            },
            {
              "source": "../src/core/OrchestrationController",
              "default": "orchestrationController",
              "named": [],
              "line": 10,
              "isLocal": true
            }
          ],
          "exports": [
            {
              "name": "OrchestrationIntegrationTest",
              "type": "commonjs",
              "line": 279
            }
          ],
          "hasExports": true,
          "isModule": true
        }
      ],
      "groups": []
    },
    {
      "path": "venv\\lib\\python3.12\\site-packages\\urllib3\\contrib\\emscripten",
      "fileCount": 1,
      "files": [
        {
          "name": "emscripten_fetch_worker.js",
          "path": "venv\\lib\\python3.12\\site-packages\\urllib3\\contrib\\emscripten\\emscripten_fetch_worker.js",
          "size": 3655,
          "lines": 111,
          "functions": [
            {
              "name": "addEventListener",
              "type": "function",
              "line": 12,
              "isExported": false
            },
            {
              "name": "if",
              "type": "unknown",
              "line": 13,
              "isExported": false
            },
            {
              "name": "catch",
              "type": "unknown",
              "line": 39,
              "isExported": false
            }
          ],
          "classes": [],
          "imports": [],
          "exports": [],
          "hasExports": false,
          "isModule": false
        }
      ],
      "groups": []
    }
  ],
  "duplicates": [
    {
      "type": "function",
      "name": "constructor",
      "occurrences": [
        {
          "file": "analyzer.js",
          "line": 54,
          "isExported": false
        },
        {
          "file": "src\\bot.js",
          "line": 15,
          "isExported": false
        },
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 32,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
          "line": 18,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdminEscalationSystem.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 18,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 9,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\MemoryManager.js",
          "line": 8,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 10,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\QueryOptimizer.js",
          "line": 91,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 8,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\GracefulDegradationManager.js",
          "line": 8,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\HealthMonitoringSystem.js",
          "line": 12,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 15,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\SelfHealingManager.js",
          "line": 11,
          "isExported": false
        },
        {
          "file": "src\\monitoring\\intelligentMonitor.js",
          "line": 9,
          "isExported": false
        },
        {
          "file": "src\\scripts\\convertMarkdownToPostgreSQL.js",
          "line": 25,
          "isExported": false
        },
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 12,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 13,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_intentions.js",
          "line": 17,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_knowledge.js",
          "line": 20,
          "isExported": false
        },
        {
          "file": "src\\scripts\\migrateConversations.js",
          "line": 14,
          "isExported": false
        },
        {
          "file": "src\\scripts\\verifyMigration.js",
          "line": 13,
          "isExported": false
        },
        {
          "file": "src\\security\\advancedRateLimiter.js",
          "line": 19,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\security\\inputValidator.js",
          "line": 18,
          "isExported": false
        },
        {
          "file": "src\\services\\agentExecutor.js",
          "line": 15,
          "isExported": false
        },
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 55,
          "isExported": false
        },
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\services\\guardrails.js",
          "line": 11,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 23,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 23,
          "isExported": false
        },
        {
          "file": "src\\services\\metadataEnhancer.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\services\\priceExtractionSystem.js",
          "line": 36,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticCache.js",
          "line": 17,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticChunker.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticRouter.js",
          "line": 18,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleAgentExecutor.js",
          "line": 14,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleDeduplicationEngine.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 58,
          "isExported": false
        },
        {
          "file": "src\\services\\validatedEmbeddingEngine.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\services\\classifiers\\qwenClassifier.js",
          "line": 13,
          "isExported": false
        },
        {
          "file": "src\\services\\eventSourcing\\EventStore.js",
          "line": 17,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 27,
          "isExported": false
        },
        {
          "file": "src\\utils\\circuitBreaker.js",
          "line": 10,
          "isExported": false
        },
        {
          "file": "src\\utils\\contextCache.js",
          "line": 10,
          "isExported": false
        },
        {
          "file": "src\\utils\\conversationContext.js",
          "line": 11,
          "isExported": false
        },
        {
          "file": "src\\utils\\failureHandler.js",
          "line": 10,
          "isExported": false
        },
        {
          "file": "src\\utils\\intelligentRouter.js",
          "line": 12,
          "isExported": false
        },
        {
          "file": "src\\utils\\llmJudge.js",
          "line": 12,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 8,
          "isExported": false
        },
        {
          "file": "src\\utils\\performanceMonitor.js",
          "line": 10,
          "isExported": false
        },
        {
          "file": "src\\utils\\proactiveMonitor.js",
          "line": 15,
          "isExported": false
        },
        {
          "file": "src\\utils\\qwenLocal.js",
          "line": 10,
          "isExported": false
        },
        {
          "file": "src\\utils\\rateLimiter.js",
          "line": 10,
          "isExported": false
        },
        {
          "file": "src\\utils\\responseValidator.js",
          "line": 6,
          "isExported": false
        },
        {
          "file": "test\\integration-test.js",
          "line": 16,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "analyze",
      "occurrences": [
        {
          "file": "analyzer.js",
          "line": 78,
          "isExported": false
        },
        {
          "file": "src\\monitoring\\intelligentMonitor.js",
          "line": 23,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1341,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "catch",
      "occurrences": [
        {
          "file": "analyzer.js",
          "line": 105,
          "isExported": false
        },
        {
          "file": "test-basic.js",
          "line": 19,
          "isExported": false
        },
        {
          "file": "test-db-connection.js",
          "line": 29,
          "isExported": false
        },
        {
          "file": "test-very-basic.js",
          "line": 14,
          "isExported": false
        },
        {
          "file": "src\\bot.js",
          "line": 52,
          "isExported": false
        },
        {
          "file": "src\\auth\\admin.js",
          "line": 26,
          "isExported": false
        },
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 104,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
          "line": 75,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdminEscalationSystem.js",
          "line": 89,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
          "line": 99,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 89,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
          "line": 84,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 78,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 137,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 58,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\QueryOptimizer.js",
          "line": 161,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 85,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\HealthMonitoringSystem.js",
          "line": 60,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 56,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\SelfHealingManager.js",
          "line": 72,
          "isExported": false
        },
        {
          "file": "src\\database\\pg.js",
          "line": 39,
          "isExported": false
        },
        {
          "file": "src\\excel\\processor.js",
          "line": 69,
          "isExported": false
        },
        {
          "file": "src\\scripts\\architectural_health_check.js",
          "line": 27,
          "isExported": false
        },
        {
          "file": "src\\scripts\\clear_cache_collection.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\scripts\\convertMarkdownToPostgreSQL.js",
          "line": 64,
          "isExported": false
        },
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 71,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 76,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_intentions.js",
          "line": 28,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_knowledge.js",
          "line": 31,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_markdown_prices.js",
          "line": 133,
          "isExported": false
        },
        {
          "file": "src\\scripts\\migrate_to_task_prefixes.js",
          "line": 35,
          "isExported": false
        },
        {
          "file": "src\\scripts\\migrateConversations.js",
          "line": 51,
          "isExported": false
        },
        {
          "file": "src\\scripts\\run_evals.js",
          "line": 42,
          "isExported": false
        },
        {
          "file": "src\\scripts\\seed_proactive_knowledge.js",
          "line": 57,
          "isExported": false
        },
        {
          "file": "src\\scripts\\verifyMigration.js",
          "line": 41,
          "isExported": false
        },
        {
          "file": "src\\security\\advancedRateLimiter.js",
          "line": 571,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 472,
          "isExported": false
        },
        {
          "file": "src\\security\\inputValidator.js",
          "line": 390,
          "isExported": false
        },
        {
          "file": "src\\services\\agentExecutor.js",
          "line": 126,
          "isExported": false
        },
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 122,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 86,
          "isExported": false
        },
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 168,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 187,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 108,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingEngine.js",
          "line": 28,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 89,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 106,
          "isExported": false
        },
        {
          "file": "src\\services\\metadataEnhancer.js",
          "line": 172,
          "isExported": false
        },
        {
          "file": "src\\services\\priceExtractionSystem.js",
          "line": 53,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticCache.js",
          "line": 55,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticChunker.js",
          "line": 113,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticRouter.js",
          "line": 29,
          "isExported": false
        },
        {
          "file": "src\\services\\serviceRegistry.js",
          "line": 41,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleAgentExecutor.js",
          "line": 75,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleDeduplicationEngine.js",
          "line": 124,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 87,
          "isExported": false
        },
        {
          "file": "src\\services\\validatedEmbeddingEngine.js",
          "line": 110,
          "isExported": false
        },
        {
          "file": "src\\services\\classifiers\\qwenClassifier.js",
          "line": 44,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 89,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 200,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 198,
          "isExported": false
        },
        {
          "file": "src\\utils\\circuitBreaker.js",
          "line": 70,
          "isExported": false
        },
        {
          "file": "src\\utils\\claude.js",
          "line": 207,
          "isExported": false
        },
        {
          "file": "src\\utils\\contextCache.js",
          "line": 86,
          "isExported": false
        },
        {
          "file": "src\\utils\\failureHandler.js",
          "line": 93,
          "isExported": false
        },
        {
          "file": "src\\utils\\intelligentRouter.js",
          "line": 99,
          "isExported": false
        },
        {
          "file": "src\\utils\\llmJudge.js",
          "line": 102,
          "isExported": false
        },
        {
          "file": "src\\utils\\logger.js",
          "line": 49,
          "isExported": false
        },
        {
          "file": "src\\utils\\proactiveMonitor.js",
          "line": 125,
          "isExported": false
        },
        {
          "file": "src\\utils\\qwenLocal.js",
          "line": 55,
          "isExported": false
        },
        {
          "file": "src\\utils\\rateLimiter.js",
          "line": 215,
          "isExported": false
        },
        {
          "file": "src\\utils\\retryHandler.js",
          "line": 8,
          "isExported": false
        },
        {
          "file": "src\\utils\\robustSofiaParser.js",
          "line": 74,
          "isExported": false
        },
        {
          "file": "test\\integration-test.js",
          "line": 42,
          "isExported": false
        },
        {
          "file": "venv\\lib\\python3.12\\site-packages\\urllib3\\contrib\\emscripten\\emscripten_fetch_worker.js",
          "line": 39,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "if",
      "occurrences": [
        {
          "file": "analyzer.js",
          "line": 133,
          "isExported": false
        },
        {
          "file": "src\\bot.js",
          "line": 42,
          "isExported": false
        },
        {
          "file": "src\\auth\\admin.js",
          "line": 13,
          "isExported": false
        },
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 70,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
          "line": 111,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdminEscalationSystem.js",
          "line": 60,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
          "line": 176,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 121,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
          "line": 111,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 58,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 172,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\MemoryManager.js",
          "line": 76,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 37,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\QueryOptimizer.js",
          "line": 8,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 108,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\GracefulDegradationManager.js",
          "line": 115,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\HealthMonitoringSystem.js",
          "line": 23,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 28,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\SelfHealingManager.js",
          "line": 29,
          "isExported": false
        },
        {
          "file": "src\\database\\pg.js",
          "line": 58,
          "isExported": false
        },
        {
          "file": "src\\excel\\processor.js",
          "line": 20,
          "isExported": false
        },
        {
          "file": "src\\monitoring\\intelligentMonitor.js",
          "line": 25,
          "isExported": false
        },
        {
          "file": "src\\scripts\\architectural_health_check.js",
          "line": 20,
          "isExported": false
        },
        {
          "file": "src\\scripts\\convertMarkdownToPostgreSQL.js",
          "line": 82,
          "isExported": false
        },
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 91,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 116,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_intentions.js",
          "line": 40,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_knowledge.js",
          "line": 44,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_markdown_prices.js",
          "line": 40,
          "isExported": false
        },
        {
          "file": "src\\scripts\\migrate_to_task_prefixes.js",
          "line": 84,
          "isExported": false
        },
        {
          "file": "src\\scripts\\migrateConversations.js",
          "line": 30,
          "isExported": false
        },
        {
          "file": "src\\scripts\\run_evals.js",
          "line": 51,
          "isExported": false
        },
        {
          "file": "src\\scripts\\seed_proactive_knowledge.js",
          "line": 39,
          "isExported": false
        },
        {
          "file": "src\\scripts\\verifyMigration.js",
          "line": 104,
          "isExported": false
        },
        {
          "file": "src\\security\\advancedRateLimiter.js",
          "line": 33,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 55,
          "isExported": false
        },
        {
          "file": "src\\security\\inputValidator.js",
          "line": 143,
          "isExported": false
        },
        {
          "file": "src\\services\\agentExecutor.js",
          "line": 118,
          "isExported": false
        },
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 73,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 197,
          "isExported": false
        },
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 132,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 209,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 96,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingEngine.js",
          "line": 16,
          "isExported": false
        },
        {
          "file": "src\\services\\guardrails.js",
          "line": 36,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 82,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 84,
          "isExported": false
        },
        {
          "file": "src\\services\\metadataEnhancer.js",
          "line": 37,
          "isExported": false
        },
        {
          "file": "src\\services\\priceExtractionSystem.js",
          "line": 67,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticCache.js",
          "line": 41,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticChunker.js",
          "line": 135,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticRouter.js",
          "line": 49,
          "isExported": false
        },
        {
          "file": "src\\services\\serviceRegistry.js",
          "line": 35,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleAgentExecutor.js",
          "line": 55,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleDeduplicationEngine.js",
          "line": 189,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 37,
          "isExported": false
        },
        {
          "file": "src\\services\\validatedEmbeddingEngine.js",
          "line": 133,
          "isExported": false
        },
        {
          "file": "src\\services\\classifiers\\qwenClassifier.js",
          "line": 38,
          "isExported": false
        },
        {
          "file": "src\\services\\eventSourcing\\EventStore.js",
          "line": 87,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 85,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 105,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 211,
          "isExported": false
        },
        {
          "file": "src\\utils\\circuitBreaker.js",
          "line": 51,
          "isExported": false
        },
        {
          "file": "src\\utils\\claude.js",
          "line": 35,
          "isExported": false
        },
        {
          "file": "src\\utils\\config.js",
          "line": 136,
          "isExported": false
        },
        {
          "file": "src\\utils\\contextCache.js",
          "line": 43,
          "isExported": false
        },
        {
          "file": "src\\utils\\conversationContext.js",
          "line": 55,
          "isExported": false
        },
        {
          "file": "src\\utils\\failureHandler.js",
          "line": 48,
          "isExported": false
        },
        {
          "file": "src\\utils\\fuzzyMatcher.js",
          "line": 152,
          "isExported": false
        },
        {
          "file": "src\\utils\\intelligentRouter.js",
          "line": 74,
          "isExported": false
        },
        {
          "file": "src\\utils\\llmJudge.js",
          "line": 68,
          "isExported": false
        },
        {
          "file": "src\\utils\\logger.js",
          "line": 18,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 50,
          "isExported": false
        },
        {
          "file": "src\\utils\\outOfScopeDetector.js",
          "line": 162,
          "isExported": false
        },
        {
          "file": "src\\utils\\performanceMonitor.js",
          "line": 66,
          "isExported": false
        },
        {
          "file": "src\\utils\\proactiveMonitor.js",
          "line": 51,
          "isExported": false
        },
        {
          "file": "src\\utils\\qwenLocal.js",
          "line": 33,
          "isExported": false
        },
        {
          "file": "src\\utils\\rateLimiter.js",
          "line": 34,
          "isExported": false
        },
        {
          "file": "src\\utils\\responseValidator.js",
          "line": 60,
          "isExported": false
        },
        {
          "file": "src\\utils\\retryHandler.js",
          "line": 10,
          "isExported": false
        },
        {
          "file": "src\\utils\\robustSofiaParser.js",
          "line": 29,
          "isExported": false
        },
        {
          "file": "test\\integration-test.js",
          "line": 60,
          "isExported": false
        },
        {
          "file": "venv\\lib\\python3.12\\site-packages\\urllib3\\contrib\\emscripten\\emscripten_fetch_worker.js",
          "line": 13,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "for",
      "occurrences": [
        {
          "file": "analyzer.js",
          "line": 142,
          "isExported": false
        },
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 596,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 230,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
          "line": 195,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 174,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 46,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 249,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\QueryOptimizer.js",
          "line": 284,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\HealthMonitoringSystem.js",
          "line": 50,
          "isExported": false
        },
        {
          "file": "src\\database\\pg.js",
          "line": 254,
          "isExported": false
        },
        {
          "file": "src\\excel\\processor.js",
          "line": 27,
          "isExported": false
        },
        {
          "file": "src\\scripts\\convertMarkdownToPostgreSQL.js",
          "line": 141,
          "isExported": false
        },
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 31,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 34,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_markdown_prices.js",
          "line": 34,
          "isExported": false
        },
        {
          "file": "src\\scripts\\migrate_to_task_prefixes.js",
          "line": 98,
          "isExported": false
        },
        {
          "file": "src\\scripts\\migrateConversations.js",
          "line": 44,
          "isExported": false
        },
        {
          "file": "src\\scripts\\run_evals.js",
          "line": 32,
          "isExported": false
        },
        {
          "file": "src\\scripts\\seed_proactive_knowledge.js",
          "line": 46,
          "isExported": false
        },
        {
          "file": "src\\security\\advancedRateLimiter.js",
          "line": 195,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 54,
          "isExported": false
        },
        {
          "file": "src\\security\\inputValidator.js",
          "line": 61,
          "isExported": false
        },
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 195,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 260,
          "isExported": false
        },
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 187,
          "isExported": false
        },
        {
          "file": "src\\services\\guardrails.js",
          "line": 34,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 117,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 132,
          "isExported": false
        },
        {
          "file": "src\\services\\metadataEnhancer.js",
          "line": 484,
          "isExported": false
        },
        {
          "file": "src\\services\\priceExtractionSystem.js",
          "line": 79,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticCache.js",
          "line": 180,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticChunker.js",
          "line": 144,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleDeduplicationEngine.js",
          "line": 179,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 28,
          "isExported": false
        },
        {
          "file": "src\\services\\validatedEmbeddingEngine.js",
          "line": 214,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 349,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 823,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 346,
          "isExported": false
        },
        {
          "file": "src\\utils\\fuzzyMatcher.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\utils\\llmJudge.js",
          "line": 235,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 166,
          "isExported": false
        },
        {
          "file": "src\\utils\\outOfScopeDetector.js",
          "line": 86,
          "isExported": false
        },
        {
          "file": "src\\utils\\responseValidator.js",
          "line": 27,
          "isExported": false
        },
        {
          "file": "src\\utils\\robustSofiaParser.js",
          "line": 104,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "while",
      "occurrences": [
        {
          "file": "analyzer.js",
          "line": 421,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 169,
          "isExported": false
        },
        {
          "file": "src\\utils\\retryHandler.js",
          "line": 5,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "forEach",
      "occurrences": [
        {
          "file": "analyzer.js",
          "line": 618,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
          "line": 479,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 419,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 423,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1679,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 560,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 119,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "switch",
      "occurrences": [
        {
          "file": "analyzer.js",
          "line": 1044,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
          "line": 390,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
          "line": 477,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 255,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 98,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\GracefulDegradationManager.js",
          "line": 199,
          "isExported": false
        },
        {
          "file": "src\\scripts\\migrate_to_task_prefixes.js",
          "line": 185,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 72,
          "isExported": false
        },
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 501,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 128,
          "isExported": false
        },
        {
          "file": "src\\services\\metadataEnhancer.js",
          "line": 391,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleDeduplicationEngine.js",
          "line": 292,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 73,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1189,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 798,
          "isExported": false
        },
        {
          "file": "src\\utils\\outOfScopeDetector.js",
          "line": 194,
          "isExported": false
        },
        {
          "file": "src\\utils\\performanceMonitor.js",
          "line": 262,
          "isExported": false
        },
        {
          "file": "src\\utils\\qwenLocal.js",
          "line": 298,
          "isExported": false
        },
        {
          "file": "src\\utils\\responseValidator.js",
          "line": 155,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "initialize",
      "occurrences": [
        {
          "file": "src\\bot.js",
          "line": 33,
          "isExported": false
        },
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 65,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 46,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 27,
          "isExported": false
        },
        {
          "file": "src\\services\\agentExecutor.js",
          "line": 92,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 195,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "setupEventHandlers",
      "occurrences": [
        {
          "file": "src\\bot.js",
          "line": 94,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 84,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "recordSuccess",
      "occurrences": [
        {
          "file": "src\\bot.js",
          "line": 203,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 238,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 419,
          "isExported": false
        },
        {
          "file": "src\\utils\\failureHandler.js",
          "line": 111,
          "isExported": false
        },
        {
          "file": "test\\integration-test.js",
          "line": 226,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getMetrics",
      "occurrences": [
        {
          "file": "src\\bot.js",
          "line": 209,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
          "line": 497,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdminEscalationSystem.js",
          "line": 382,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
          "line": 1021,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 429,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 375,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 446,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 704,
          "isExported": false
        },
        {
          "file": "src\\security\\inputValidator.js",
          "line": 415,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1593,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 507,
          "isExported": false
        },
        {
          "file": "src\\utils\\intelligentRouter.js",
          "line": 541,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 131,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "start",
      "occurrences": [
        {
          "file": "src\\bot.js",
          "line": 221,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1973,
          "isExported": false
        },
        {
          "file": "src\\utils\\proactiveMonitor.js",
          "line": 50,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "shutdown",
      "occurrences": [
        {
          "file": "src\\bot.js",
          "line": 231,
          "isExported": false
        },
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 383,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
          "line": 531,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\AdminEscalationSystem.js",
          "line": 393,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 445,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 457,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\MemoryManager.js",
          "line": 375,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 368,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 66,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getSystemStatus",
      "occurrences": [
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 289,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\GracefulDegradationManager.js",
          "line": 635,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getCircuitBreaker",
      "occurrences": [
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 421,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 251,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getGracefulDegradationManager",
      "occurrences": [
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 429,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 259,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "detectServiceType",
      "occurrences": [
        {
          "file": "src\\core\\OrchestrationController.js",
          "line": 604,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 406,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "updateMetrics",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
          "line": 578,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 410,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 190,
          "isExported": false
        },
        {
          "file": "src\\utils\\intelligentRouter.js",
          "line": 523,
          "isExported": false
        },
        {
          "file": "src\\utils\\llmJudge.js",
          "line": 311,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "processQuery",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 48,
          "isExported": false
        },
        {
          "file": "src\\utils\\intelligentRouter.js",
          "line": 59,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "containsTechnicalTerms",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 181,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 414,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "calculateOverallConfidence",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
          "line": 385,
          "isExported": false
        },
        {
          "file": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
          "line": 289,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "generateRecommendations",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
          "line": 282,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 2266,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "analyzeQuery",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 41,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1442,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "analyzeQueryComplexity",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 196,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 198,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "calculateConfidence",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 266,
          "isExported": false
        },
        {
          "file": "src\\utils\\outOfScopeDetector.js",
          "line": 129,
          "isExported": false
        },
        {
          "file": "src\\utils\\robustSofiaParser.js",
          "line": 212,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "extractBrand",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 367,
          "isExported": false
        },
        {
          "file": "src\\utils\\contextCache.js",
          "line": 185,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "normalizeModel",
      "occurrences": [
        {
          "file": "src\\core\\intelligence\\UncertaintyDetector.js",
          "line": 402,
          "isExported": false
        },
        {
          "file": "src\\scripts\\convertMarkdownToPostgreSQL.js",
          "line": 342,
          "isExported": false
        },
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 216,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 213,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "sleep",
      "occurrences": [
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 398,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1253,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 499,
          "isExported": false
        },
        {
          "file": "test\\integration-test.js",
          "line": 273,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "optimize",
      "occurrences": [
        {
          "file": "src\\core\\performance\\ConcurrentProcessor.js",
          "line": 406,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 314,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\QueryOptimizer.js",
          "line": 25,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 210,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "startMonitoring",
      "occurrences": [
        {
          "file": "src\\core\\performance\\MemoryManager.js",
          "line": 266,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\HealthMonitoringSystem.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 104,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "executeOptimizedQuery",
      "occurrences": [
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 92,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\QueryOptimizer.js",
          "line": 128,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getPerformanceMetrics",
      "occurrences": [
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 166,
          "isExported": false
        },
        {
          "file": "src\\core\\performance\\QueryOptimizer.js",
          "line": 267,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getStatus",
      "occurrences": [
        {
          "file": "src\\core\\performance\\PerformanceController.js",
          "line": 352,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 194,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 541,
          "isExported": false
        },
        {
          "file": "src\\utils\\circuitBreaker.js",
          "line": 152,
          "isExported": false
        },
        {
          "file": "src\\utils\\proactiveMonitor.js",
          "line": 366,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "calculateSimilarity",
      "occurrences": [
        {
          "file": "src\\core\\performance\\QueryOptimizer.js",
          "line": 326,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1993,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "execute",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 67,
          "isExported": false
        },
        {
          "file": "src\\services\\agentExecutor.js",
          "line": 110,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 85,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleAgentExecutor.js",
          "line": 46,
          "isExported": false
        },
        {
          "file": "src\\utils\\circuitBreaker.js",
          "line": 47,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "transitionToOpen",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 251,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 341,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "transitionToHalfOpen",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 276,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 351,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "transitionToClosed",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 298,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 334,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "performHealthCheck",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
          "line": 424,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\GracefulDegradationManager.js",
          "line": 614,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 526,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 611,
          "isExported": false
        },
        {
          "file": "src\\utils\\proactiveMonitor.js",
          "line": 97,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "registerService",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\GracefulDegradationManager.js",
          "line": 87,
          "isExported": false
        },
        {
          "file": "src\\services\\serviceRegistry.js",
          "line": 19,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "evaluateSystemHealth",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\GracefulDegradationManager.js",
          "line": 460,
          "isExported": false
        },
        {
          "file": "src\\utils\\proactiveMonitor.js",
          "line": 265,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "stopMonitoring",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\HealthMonitoringSystem.js",
          "line": 34,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 134,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getSystemHealth",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\HealthMonitoringSystem.js",
          "line": 125,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 181,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1260,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "executeWithProtection",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 94,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 172,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "reportFailure",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\ResilienceController.js",
          "line": 121,
          "isExported": false
        },
        {
          "file": "src\\core\\resilience\\SelfHealingManager.js",
          "line": 23,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "restartService",
      "occurrences": [
        {
          "file": "src\\core\\resilience\\SelfHealingManager.js",
          "line": 84,
          "isExported": false
        },
        {
          "file": "src\\services\\serviceRegistry.js",
          "line": 31,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "processExcelFile",
      "occurrences": [
        {
          "file": "src\\excel\\processor.js",
          "line": 83,
          "isExported": false
        },
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 41,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 44,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "parsePrice",
      "occurrences": [
        {
          "file": "src\\scripts\\convertMarkdownToPostgreSQL.js",
          "line": 330,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 301,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "parseSheetData",
      "occurrences": [
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 79,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 85,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "looksLikeHeader",
      "occurrences": [
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 102,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 127,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "detectColumns",
      "occurrences": [
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 115,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 144,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "parseDataRow",
      "occurrences": [
        {
          "file": "src\\scripts\\generateSQLFromExcel.js",
          "line": 187,
          "isExported": false
        },
        {
          "file": "src\\scripts\\importExcelData.js",
          "line": 182,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "generate",
      "occurrences": [
        {
          "file": "src\\scripts\\index_intentions.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_knowledge.js",
          "line": 24,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 64,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticCache.js",
          "line": 21,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticRouter.js",
          "line": 22,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 65,
          "isExported": false
        },
        {
          "file": "src\\utils\\qwenLocal.js",
          "line": 69,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "executeMigrationStrategy",
      "occurrences": [
        {
          "file": "src\\scripts\\migrate_to_task_prefixes.js",
          "line": 175,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 790,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "cleanup",
      "occurrences": [
        {
          "file": "src\\security\\advancedRateLimiter.js",
          "line": 280,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 730,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 237,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "checkRateLimit",
      "occurrences": [
        {
          "file": "src\\security\\advancedRateLimiter.js",
          "line": 435,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 566,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "enableBypass",
      "occurrences": [
        {
          "file": "src\\security\\advancedRateLimiter.js",
          "line": 717,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 770,
          "isExported": false
        },
        {
          "file": "src\\security\\inputValidator.js",
          "line": 438,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "middleware",
      "occurrences": [
        {
          "file": "src\\security\\advancedRateLimiter.js",
          "line": 722,
          "isExported": false
        },
        {
          "file": "src\\security\\authLayer.js",
          "line": 793,
          "isExported": false
        },
        {
          "file": "src\\security\\inputValidator.js",
          "line": 443,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "validate",
      "occurrences": [
        {
          "file": "src\\security\\inputValidator.js",
          "line": 24,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1866,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1483,
          "isExported": false
        },
        {
          "file": "src\\utils\\responseValidator.js",
          "line": 24,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "searchClientHistory",
      "occurrences": [
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 64,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 983,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "searchInClientHistory",
      "occurrences": [
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 509,
          "isExported": false
        },
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 1005,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getCachedResult",
      "occurrences": [
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 708,
          "isExported": false
        },
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 465,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "generateCacheKey",
      "occurrences": [
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 734,
          "isExported": false
        },
        {
          "file": "src\\utils\\llmJudge.js",
          "line": 295,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "clearCache",
      "occurrences": [
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 780,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 522,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 391,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "resetMetrics",
      "occurrences": [
        {
          "file": "src\\services\\clientHistorySearchEngine.js",
          "line": 788,
          "isExported": false
        },
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 707,
          "isExported": false
        },
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 516,
          "isExported": false
        },
        {
          "file": "src\\services\\metadataEnhancer.js",
          "line": 653,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 146,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "generateQuery",
      "occurrences": [
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 98,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 96,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "generateDocument",
      "occurrences": [
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 111,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 109,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "buildWhereFilter",
      "occurrences": [
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 753,
          "isExported": false
        },
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 579,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "classifyResponseType",
      "occurrences": [
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 782,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticChunker.js",
          "line": 573,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getHourCategory",
      "occurrences": [
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 798,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticChunker.js",
          "line": 582,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "calculateSystemHealth",
      "occurrences": [
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 899,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 538,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleDeduplicationEngine.js",
          "line": 563,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getArchitecturalHealth",
      "occurrences": [
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 1160,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 930,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "detectQueryContext",
      "occurrences": [
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 398,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 252,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "cleanupCache",
      "occurrences": [
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 515,
          "isExported": false
        },
        {
          "file": "src\\utils\\llmJudge.js",
          "line": 409,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "containsAny",
      "occurrences": [
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 575,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 447,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticChunker.js",
          "line": 568,
          "isExported": false
        },
        {
          "file": "src\\services\\validatedEmbeddingEngine.js",
          "line": 515,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "recordMetrics",
      "occurrences": [
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 609,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleDeduplicationEngine.js",
          "line": 508,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getContextHealth",
      "occurrences": [
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 659,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 516,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "performMaintenance",
      "occurrences": [
        {
          "file": "src\\services\\deterministicSearchEngine.js",
          "line": 690,
          "isExported": false
        },
        {
          "file": "src\\services\\dynamicLimitOptimizer.js",
          "line": 561,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleDeduplicationEngine.js",
          "line": 588,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "executeWithTimeout",
      "occurrences": [
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 196,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 323,
          "isExported": false
        },
        {
          "file": "src\\utils\\circuitBreaker.js",
          "line": 79,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "recordFailure",
      "occurrences": [
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 261,
          "isExported": false
        },
        {
          "file": "src\\utils\\failureHandler.js",
          "line": 34,
          "isExported": false
        },
        {
          "file": "test\\integration-test.js",
          "line": 239,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "reset",
      "occurrences": [
        {
          "file": "src\\services\\embeddingCircuitBreaker.js",
          "line": 592,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 558,
          "isExported": false
        },
        {
          "file": "src\\utils\\circuitBreaker.js",
          "line": 139,
          "isExported": false
        },
        {
          "file": "src\\utils\\performanceMonitor.js",
          "line": 474,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "initializeCache",
      "occurrences": [
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 78,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 93,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticCache.js",
          "line": 37,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "extractBrandFromFilename",
      "occurrences": [
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 155,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 258,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getBrandInfo",
      "occurrences": [
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 527,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 354,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getCacheStats",
      "occurrences": [
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 539,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 496,
          "isExported": false
        },
        {
          "file": "src\\utils\\contextCache.js",
          "line": 365,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "forceRefresh",
      "occurrences": [
        {
          "file": "src\\services\\markdownContextEnricher.js",
          "line": 552,
          "isExported": false
        },
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 513,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "healthCheck",
      "occurrences": [
        {
          "file": "src\\services\\markdownMetadataExtractor.js",
          "line": 538,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 2050,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1812,
          "isExported": false
        },
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 603,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "normalizeQuery",
      "occurrences": [
        {
          "file": "src\\services\\priceExtractionSystem.js",
          "line": 244,
          "isExported": false
        },
        {
          "file": "src\\utils\\contextCache.js",
          "line": 352,
          "isExported": false
        },
        {
          "file": "src\\utils\\fuzzyMatcher.js",
          "line": 247,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "classifyIntent",
      "occurrences": [
        {
          "file": "src\\services\\semanticRouter.js",
          "line": 44,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1486,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getValidationStats",
      "occurrences": [
        {
          "file": "src\\services\\tools.js",
          "line": 399,
          "isExported": false
        },
        {
          "file": "src\\services\\validatedEmbeddingEngine.js",
          "line": 631,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "updateCoherenceHistory",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 742,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 498,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getEnhancedMetrics",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1139,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 648,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "analyzeCoherenceTrend",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1158,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 526,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "calculateCoherenceScore",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1585,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1272,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "analyzeContext",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1593,
          "isExported": false
        },
        {
          "file": "src\\utils\\intelligentRouter.js",
          "line": 311,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "get",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1845,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 25,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "set",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1857,
          "isExported": false
        },
        {
          "file": "src\\utils\\lruCache.js",
          "line": 44,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "levenshteinDistance",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 2022,
          "isExported": false
        },
        {
          "file": "src\\utils\\fuzzyMatcher.js",
          "line": 13,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "resolve",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 2187,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1867,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "stop",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1988,
          "isExported": false
        },
        {
          "file": "src\\utils\\proactiveMonitor.js",
          "line": 76,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "updateConfig",
      "occurrences": [
        {
          "file": "src\\services\\resilience\\ResilienceManager.js",
          "line": 595,
          "isExported": false
        },
        {
          "file": "src\\utils\\failureHandler.js",
          "line": 261,
          "isExported": false
        }
      ]
    },
    {
      "type": "function",
      "name": "getStats",
      "occurrences": [
        {
          "file": "src\\utils\\conversationContext.js",
          "line": 383,
          "isExported": false
        },
        {
          "file": "src\\utils\\llmJudge.js",
          "line": 373,
          "isExported": false
        },
        {
          "file": "src\\utils\\rateLimiter.js",
          "line": 120,
          "isExported": false
        }
      ]
    },
    {
      "type": "class",
      "name": "LangChainEmbeddingAdapter",
      "occurrences": [
        {
          "file": "src\\scripts\\index_intentions.js",
          "line": 16,
          "isExported": false
        },
        {
          "file": "src\\scripts\\index_knowledge.js",
          "line": 19,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticCache.js",
          "line": 16,
          "isExported": false
        },
        {
          "file": "src\\services\\semanticRouter.js",
          "line": 17,
          "isExported": false
        }
      ]
    },
    {
      "type": "class",
      "name": "OllamaError",
      "occurrences": [
        {
          "file": "src\\services\\agentExecutor.js",
          "line": 14,
          "isExported": false
        },
        {
          "file": "src\\services\\simpleAgentExecutor.js",
          "line": 13,
          "isExported": false
        }
      ]
    },
    {
      "type": "class",
      "name": "EnhancedLangChainEmbeddingAdapter",
      "occurrences": [
        {
          "file": "src\\services\\conversationMemory.js",
          "line": 54,
          "isExported": false
        },
        {
          "file": "src\\services\\tools.js",
          "line": 57,
          "isExported": false
        }
      ]
    },
    {
      "type": "class",
      "name": "CrossSourceValidator",
      "occurrences": [
        {
          "file": "src\\services\\tools.js",
          "line": 132,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1611,
          "isExported": false
        }
      ]
    },
    {
      "type": "class",
      "name": "ConsistencyValidator",
      "occurrences": [
        {
          "file": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
          "line": 1865,
          "isExported": false
        },
        {
          "file": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
          "line": 1482,
          "isExported": false
        }
      ]
    }
  ],
  "relationships": [
    {
      "from": "test-basic.js",
      "to": "./src/utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "test-basic.js",
      "to": "./src/utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "test-basic.js",
      "to": "./src/database/pg",
      "type": "import",
      "imports": [
        "initializeDatabase"
      ]
    },
    {
      "from": "test-basic.js",
      "to": "./src/services/agentExecutor",
      "type": "import",
      "imports": [
        "SalvaCellAgentExecutor"
      ]
    },
    {
      "from": "src\\bot.js",
      "to": "./utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\bot.js",
      "to": "./database/pg",
      "type": "import",
      "imports": [
        "initializeDatabase"
      ]
    },
    {
      "from": "src\\bot.js",
      "to": "./utils/chatState",
      "type": "import",
      "imports": [
        "isChatPaused"
      ]
    },
    {
      "from": "src\\bot.js",
      "to": "./utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\bot.js",
      "to": "./services/agentExecutor",
      "type": "import",
      "imports": [
        "SalvaCellAgentExecutor",
        "OllamaError"
      ]
    },
    {
      "from": "src\\bot.js",
      "to": "./core/OrchestrationController",
      "type": "import",
      "imports": [
        "orchestrationController"
      ]
    },
    {
      "from": "src\\bot.js",
      "to": "./services/serviceRegistry",
      "type": "import",
      "imports": [
        "registerService"
      ]
    },
    {
      "from": "src\\auth\\admin.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\core\\OrchestrationController.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\OrchestrationController.js",
      "to": "../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\core\\OrchestrationController.js",
      "to": "./performance/PerformanceController",
      "type": "import",
      "imports": [
        "PerformanceController"
      ]
    },
    {
      "from": "src\\core\\OrchestrationController.js",
      "to": "./resilience/ResilienceController",
      "type": "import",
      "imports": [
        "ResilienceController"
      ]
    },
    {
      "from": "src\\core\\OrchestrationController.js",
      "to": "./intelligence/AdminEscalationSystem",
      "type": "import",
      "imports": [
        "AdminEscalationSystem"
      ]
    },
    {
      "from": "src\\core\\OrchestrationController.js",
      "to": "./intelligence/AdaptiveLearningEngine",
      "type": "import",
      "imports": [
        "AdaptiveLearningEngine"
      ]
    },
    {
      "from": "src\\core\\OrchestrationController.js",
      "to": "./intelligence/UncertaintyDetector",
      "type": "import",
      "imports": [
        "UncertaintyDetector"
      ]
    },
    {
      "from": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\intelligence\\AdaptiveLearningEngine.js",
      "to": "../../database/pg",
      "type": "import",
      "imports": [
        "initializeDatabase"
      ]
    },
    {
      "from": "src\\core\\intelligence\\AdminEscalationSystem.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\intelligence\\AdminEscalationSystem.js",
      "to": "../../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\intelligence\\ContextAwareResponseGenerator.js",
      "to": "../../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\intelligence\\MultiModalReasoningEngine.js",
      "to": "../../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\intelligence\\PredictiveAnalyticsEngine.js",
      "to": "../../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\core\\intelligence\\UncertaintyDetector.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\performance\\ConcurrentProcessor.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\performance\\MemoryManager.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\performance\\PerformanceController.js",
      "to": "./QueryOptimizer",
      "type": "import",
      "imports": [
        "QueryOptimizer"
      ]
    },
    {
      "from": "src\\core\\performance\\PerformanceController.js",
      "to": "./MemoryManager",
      "type": "import",
      "imports": [
        "MemoryManager"
      ]
    },
    {
      "from": "src\\core\\performance\\PerformanceController.js",
      "to": "./ConcurrentProcessor",
      "type": "import",
      "imports": [
        "ConcurrentProcessor"
      ]
    },
    {
      "from": "src\\core\\performance\\PerformanceController.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\performance\\QueryOptimizer.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\resilience\\AdvancedCircuitBreaker.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\resilience\\GracefulDegradationManager.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\resilience\\HealthMonitoringSystem.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\resilience\\HealthMonitoringSystem.js",
      "to": "../../services/serviceRegistry",
      "type": "import",
      "imports": [
        "services"
      ]
    },
    {
      "from": "src\\core\\resilience\\HealthMonitoringSystem.js",
      "to": "./SelfHealingManager",
      "type": "import",
      "imports": [
        "selfHealingManager"
      ]
    },
    {
      "from": "src\\core\\resilience\\ResilienceController.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\resilience\\ResilienceController.js",
      "to": "./HealthMonitoringSystem",
      "type": "import",
      "imports": [
        "healthMonitoringSystem"
      ]
    },
    {
      "from": "src\\core\\resilience\\ResilienceController.js",
      "to": "./SelfHealingManager",
      "type": "import",
      "imports": [
        "selfHealingManager"
      ]
    },
    {
      "from": "src\\core\\resilience\\ResilienceController.js",
      "to": "./AdvancedCircuitBreaker",
      "type": "import",
      "imports": [
        "AdvancedCircuitBreaker"
      ]
    },
    {
      "from": "src\\core\\resilience\\ResilienceController.js",
      "to": "./GracefulDegradationManager",
      "type": "import",
      "imports": [
        "GracefulDegradationManager"
      ]
    },
    {
      "from": "src\\core\\resilience\\ResilienceController.js",
      "to": "../../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\core\\resilience\\SelfHealingManager.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\core\\resilience\\SelfHealingManager.js",
      "to": "../../services/serviceRegistry",
      "type": "import",
      "imports": [
        "services",
        "restartService"
      ]
    },
    {
      "from": "src\\database\\pg.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\excel\\processor.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\monitoring\\intelligentMonitor.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\architectural_health_check.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\clear_cache_collection.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\convertMarkdownToPostgreSQL.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\scripts\\convertMarkdownToPostgreSQL.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\importExcelData.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\scripts\\importExcelData.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\index_intentions.js",
      "to": "../services/embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine"
      ]
    },
    {
      "from": "src\\scripts\\index_intentions.js",
      "to": "../../intentions_dataset.json",
      "type": "import",
      "imports": [
        "intentionsData"
      ]
    },
    {
      "from": "src\\scripts\\index_intentions.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\index_knowledge.js",
      "to": "../services/embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine"
      ]
    },
    {
      "from": "src\\scripts\\index_knowledge.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\scripts\\index_knowledge.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\index_markdown_prices.js",
      "to": "../services/embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine"
      ]
    },
    {
      "from": "src\\scripts\\index_markdown_prices.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\migrate_to_task_prefixes.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\migrateConversations.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\scripts\\migrateConversations.js",
      "to": "../services/conversationMemory",
      "type": "import",
      "imports": [
        "conversationMemory"
      ]
    },
    {
      "from": "src\\scripts\\migrateConversations.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\run_evals.js",
      "to": "../services/simpleAgentExecutor",
      "type": "import",
      "imports": [
        "SimpleAgentExecutor"
      ]
    },
    {
      "from": "src\\scripts\\run_evals.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "initializeDatabase"
      ]
    },
    {
      "from": "src\\scripts\\run_evals.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\seed_proactive_knowledge.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\scripts\\seed_proactive_knowledge.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\verifyMigration.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\scripts\\verifyMigration.js",
      "to": "../services/conversationMemory",
      "type": "import",
      "imports": [
        "conversationMemory"
      ]
    },
    {
      "from": "src\\scripts\\verifyMigration.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\scripts\\verifyMigration.js",
      "to": "../services/tools",
      "type": "import",
      "imports": [
        "tools"
      ]
    },
    {
      "from": "src\\security\\advancedRateLimiter.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\security\\authLayer.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\security\\authLayer.js",
      "to": "../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\security\\inputValidator.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\agentExecutor.js",
      "to": "./tools",
      "type": "import",
      "imports": [
        "tools"
      ]
    },
    {
      "from": "src\\services\\agentExecutor.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\agentExecutor.js",
      "to": "../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\services\\agentExecutor.js",
      "to": "./semanticCache",
      "type": "import",
      "imports": [
        "findInCache",
        "addToCache"
      ]
    },
    {
      "from": "src\\services\\agentExecutor.js",
      "to": "./guardrails",
      "type": "import",
      "imports": [
        "Guardrails"
      ]
    },
    {
      "from": "src\\services\\clientHistorySearchEngine.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "./embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine",
        "getEmbedding"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "./semanticChunker",
      "type": "import",
      "imports": [
        "SemanticChunker"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "./deterministicSearchEngine",
      "type": "import",
      "imports": [
        "DeterministicSearchEngine"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "./dynamicLimitOptimizer",
      "type": "import",
      "imports": [
        "DynamicLimitOptimizer"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "./markdownContextEnricher",
      "type": "import",
      "imports": [
        "MarkdownContextEnricher"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "./simpleDeduplicationEngine",
      "type": "import",
      "imports": [
        "SimpleDeduplicationEngine"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "./metadataEnhancer",
      "type": "import",
      "imports": [
        "MetadataEnhancer"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "./clientHistorySearchEngine",
      "type": "import",
      "imports": [
        "ClientHistorySearchEngine"
      ]
    },
    {
      "from": "src\\services\\conversationMemory.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\deterministicSearchEngine.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\dynamicLimitOptimizer.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\embeddingCircuitBreaker.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\embeddingEngine.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\embeddingEngine.js",
      "to": "../utils/retryHandler",
      "type": "import",
      "imports": [
        "retryHandler"
      ]
    },
    {
      "from": "src\\services\\guardrails.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\guardrails.js",
      "to": "../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\services\\hallucinationDetector.js",
      "to": "../utils/responseValidator",
      "type": "import",
      "imports": [
        "responseValidatorPipeline"
      ]
    },
    {
      "from": "src\\services\\markdownContextEnricher.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\markdownMetadataExtractor.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\metadataEnhancer.js",
      "to": "./markdownMetadataExtractor",
      "type": "import",
      "imports": [
        "MarkdownMetadataExtractor"
      ]
    },
    {
      "from": "src\\services\\metadataEnhancer.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\priceExtractionSystem.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\services\\priceExtractionSystem.js",
      "to": "./embeddingEngine",
      "type": "import",
      "imports": [
        "getEmbeddingEngine"
      ]
    },
    {
      "from": "src\\services\\priceExtractionSystem.js",
      "to": "./knowledge/KnowledgeCoherenceLayer",
      "type": "import",
      "imports": [
        "KnowledgeCoherenceLayer"
      ]
    },
    {
      "from": "src\\services\\priceExtractionSystem.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\priceExtractionSystem.js",
      "to": "../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\services\\semanticCache.js",
      "to": "./embeddingEngine",
      "type": "import",
      "imports": [
        "getEmbeddingEngine"
      ]
    },
    {
      "from": "src\\services\\semanticCache.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\semanticCache.js",
      "to": "../utils/retryHandler",
      "type": "import",
      "imports": [
        "retryHandler"
      ]
    },
    {
      "from": "src\\services\\semanticChunker.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\semanticChunker.js",
      "to": "./embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine"
      ]
    },
    {
      "from": "src\\services\\semanticRouter.js",
      "to": "./embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine"
      ]
    },
    {
      "from": "src\\services\\semanticRouter.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\serviceRegistry.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\simpleAgentExecutor.js",
      "to": "./tools",
      "type": "import",
      "imports": [
        "tools"
      ]
    },
    {
      "from": "src\\services\\simpleAgentExecutor.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\simpleAgentExecutor.js",
      "to": "../utils/config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\services\\simpleAgentExecutor.js",
      "to": "./semanticCache",
      "type": "import",
      "imports": [
        "findInCache",
        "addToCache"
      ]
    },
    {
      "from": "src\\services\\simpleAgentExecutor.js",
      "to": "./guardrails",
      "type": "import",
      "imports": [
        "Guardrails"
      ]
    },
    {
      "from": "src\\services\\simpleDeduplicationEngine.js",
      "to": "./markdownContextEnricher",
      "type": "import",
      "imports": [
        "MarkdownContextEnricher"
      ]
    },
    {
      "from": "src\\services\\simpleDeduplicationEngine.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\tools.js",
      "to": "./embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine",
        "getEmbedding"
      ]
    },
    {
      "from": "src\\services\\tools.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\services\\tools.js",
      "to": "./priceExtractionSystem",
      "type": "import",
      "imports": [
        "priceExtractionSystem"
      ]
    },
    {
      "from": "src\\services\\tools.js",
      "to": "./conversationMemory",
      "type": "import",
      "imports": [
        "conversationMemory"
      ]
    },
    {
      "from": "src\\services\\tools.js",
      "to": "./deterministicSearchEngine",
      "type": "import",
      "imports": [
        "DeterministicSearchEngine"
      ]
    },
    {
      "from": "src\\services\\tools.js",
      "to": "./dynamicLimitOptimizer",
      "type": "import",
      "imports": [
        "DynamicLimitOptimizer"
      ]
    },
    {
      "from": "src\\services\\tools.js",
      "to": "./markdownContextEnricher",
      "type": "import",
      "imports": [
        "MarkdownContextEnricher"
      ]
    },
    {
      "from": "src\\services\\tools.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\validatedEmbeddingEngine.js",
      "to": "../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\validatedEmbeddingEngine.js",
      "to": "./embeddingEngine",
      "type": "import",
      "imports": [
        "EnhancedEmbeddingEngine"
      ]
    },
    {
      "from": "src\\services\\classifiers\\qwenClassifier.js",
      "to": "../../utils/qwenLocal",
      "type": "import",
      "imports": [
        "QwenLocalClient"
      ]
    },
    {
      "from": "src\\services\\classifiers\\qwenClassifier.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\classifiers\\qwenClassifier.js",
      "to": "../../../intentions_dataset.json",
      "type": "import",
      "imports": [
        "intentions"
      ]
    },
    {
      "from": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
      "to": "../../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\services\\knowledge\\KnowledgeCoherenceLayer.js",
      "to": "../embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine"
      ]
    },
    {
      "from": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
      "to": "../embeddingEngine",
      "type": "import",
      "imports": [
        "embeddingEngine"
      ]
    },
    {
      "from": "src\\services\\knowledge\\TemporalConsistencyEngine.js",
      "to": "../../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\services\\resilience\\ResilienceManager.js",
      "to": "../../utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\services\\resilience\\ResilienceManager.js",
      "to": "../../utils/circuitBreaker",
      "type": "import",
      "imports": [
        "CircuitBreaker"
      ]
    },
    {
      "from": "src\\services\\resilience\\ResilienceManager.js",
      "to": "../../utils/rateLimiter",
      "type": "import",
      "imports": [
        "apiRateLimiter"
      ]
    },
    {
      "from": "src\\utils\\chatState.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\circuitBreaker.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\claude.js",
      "to": "./config",
      "type": "import",
      "imports": [
        "config"
      ]
    },
    {
      "from": "src\\utils\\claude.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\claude.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "getConocimientos"
      ]
    },
    {
      "from": "src\\utils\\config.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\contextCache.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\contextCache.js",
      "to": "./lruCache",
      "type": "import",
      "imports": [
        "LRUCache"
      ]
    },
    {
      "from": "src\\utils\\conversationContext.js",
      "to": "./lruCache",
      "type": "import",
      "imports": [
        "LRUCache"
      ]
    },
    {
      "from": "src\\utils\\conversationContext.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\conversationContext.js",
      "to": "./fuzzyMatcher",
      "type": "import",
      "imports": [
        "normalizeQuery",
        "normalizeDeviceName",
        "normalizeRepairType",
        "normalizeQualityType"
      ]
    },
    {
      "from": "src\\utils\\failureHandler.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\utils\\failureHandler.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\intelligentRouter.js",
      "to": "./qwenLocal",
      "type": "import",
      "imports": [
        "QwenLocalClient"
      ]
    },
    {
      "from": "src\\utils\\intelligentRouter.js",
      "to": "./claude",
      "type": "import",
      "imports": [
        "interpretQuery: claudeInterpretQuery"
      ]
    },
    {
      "from": "src\\utils\\intelligentRouter.js",
      "to": "./contextCache",
      "type": "import",
      "imports": [
        "contextCache"
      ]
    },
    {
      "from": "src\\utils\\intelligentRouter.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\llmJudge.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\llmJudge.js",
      "to": "./lruCache",
      "type": "import",
      "imports": [
        "LRUCache"
      ]
    },
    {
      "from": "src\\utils\\llmJudge.js",
      "to": "./rateLimiter",
      "type": "import",
      "imports": [
        "apiRateLimiter"
      ]
    },
    {
      "from": "src\\utils\\performanceMonitor.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\performanceMonitor.js",
      "to": "./lruCache",
      "type": "import",
      "imports": [
        "MetricsLRUCache"
      ]
    },
    {
      "from": "src\\utils\\proactiveMonitor.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\proactiveMonitor.js",
      "to": "../database/pg",
      "type": "import",
      "imports": [
        "pool"
      ]
    },
    {
      "from": "src\\utils\\proactiveMonitor.js",
      "to": "./circuitBreaker",
      "type": "import",
      "imports": [
        "circuitBreaker"
      ]
    },
    {
      "from": "src\\utils\\proactiveMonitor.js",
      "to": "./rateLimiter",
      "type": "import",
      "imports": [
        "apiRateLimiter"
      ]
    },
    {
      "from": "src\\utils\\proactiveMonitor.js",
      "to": "./failureHandler",
      "type": "import",
      "imports": [
        "failureHandler"
      ]
    },
    {
      "from": "src\\utils\\proactiveMonitor.js",
      "to": "./conversationContext",
      "type": "import",
      "imports": [
        "conversationContext"
      ]
    },
    {
      "from": "src\\utils\\proactiveMonitor.js",
      "to": "./conversationFSM",
      "type": "import",
      "imports": [
        "conversationFSM"
      ]
    },
    {
      "from": "src\\utils\\qwenLocal.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\rateLimiter.js",
      "to": "./lruCache",
      "type": "import",
      "imports": [
        "LRUCache"
      ]
    },
    {
      "from": "src\\utils\\rateLimiter.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\retryHandler.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "src\\utils\\robustSofiaParser.js",
      "to": "./logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "test\\integration-test.js",
      "to": "../src/utils/logger",
      "type": "import",
      "imports": [
        "logger"
      ]
    },
    {
      "from": "test\\integration-test.js",
      "to": "../src/core/OrchestrationController",
      "type": "import",
      "imports": [
        "orchestrationController"
      ]
    }
  ],
  "metadata": {
    "version": "1.0.0",
    "generator": "JavaScript Project Analyzer",
    "generatedAt": "2025-07-18T01:19:20.328Z",
    "config": {
      "projectPath": "C:\\Users\\neura\\OneDrive\\Desktop\\BotAut-refactor-orchestration-core",
      "outputMarkdown": "analisis.md",
      "outputJson": "analisis.json",
      "excludedDirs": [
        "node_modules",
        ".venv",
        ".git",
        "dist",
        "build",
        "out",
        ".next",
        ".nuxt",
        "coverage",
        ".nyc_output",
        "temp",
        "tmp"
      ],
      "maxFilesPerDir": 500,
      "maxFileSize": 1048576,
      "filesPerGroup": 5,
      "maxFilesBeforeGrouping": 5
    }
  }
}